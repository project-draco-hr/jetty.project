{
  if (events == null) {
    throw new RuntimeException("No " + MuxParser.Listener.class + " specified");
  }
  if (!frame.hasPayload()) {
    LOG.debug("No payload data, skipping");
    return;
  }
  if (frame.getType().getOpCode() != OpCode.BINARY) {
    LOG.debug("Not a binary opcode (base frame), skipping");
    return;
  }
  LOG.debug("Parsing Mux Payload of {}",frame);
  try {
    ByteBuffer buffer=frame.getPayload().slice();
    if (buffer.remaining() <= 0) {
      return;
    }
    if (frame.isContinuation()) {
      muxframe.reset();
      muxframe.setFin(frame.isFin());
      muxframe.setFin(frame.isRsv1());
      muxframe.setFin(frame.isRsv2());
      muxframe.setFin(frame.isRsv3());
      muxframe.setContinuation(true);
      parseDataFramePayload(buffer);
    }
 else {
      channelId=readChannelId(buffer);
      if (channelId == 0) {
        parseControlBlocks(buffer);
      }
 else {
        parseDataFrame(buffer);
      }
    }
  }
 catch (  MuxException e) {
    events.onMuxException(e);
  }
catch (  Throwable t) {
    events.onMuxException(new MuxException(t));
  }
}
