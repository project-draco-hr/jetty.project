{
  ServletHolder defholder=context.addServlet(DefaultServlet.class,"/*");
  defholder.setInitParameter("dirAllowed","true");
  defholder.setInitParameter("redirectWelcome","false");
  defholder.setInitParameter("gzip","false");
  File testDir=new File("target/tests/" + getName());
  prepareEmptyTestDir(testDir);
  File resBase=new File(testDir,"docroot");
  resBase.mkdirs();
  new File(resBase,"one").mkdir();
  new File(resBase,"two").mkdir();
  new File(resBase,"three").mkdir();
  File wackyDir=new File(resBase,"dir");
  assertTrue(wackyDir.mkdirs());
  new File(wackyDir,"four").mkdir();
  new File(wackyDir,"five").mkdir();
  new File(wackyDir,"six").mkdir();
  wackyDir=new File(resBase,"dir;");
  assertTrue(wackyDir.mkdirs());
  File sekret=new File(testDir,"sekret");
  sekret.mkdirs();
  File pass=new File(sekret,"pass");
  createFile(pass,"Sssh, you shouldn't be seeing this");
  String resBasePath=resBase.getAbsolutePath();
  defholder.setInitParameter("resourceBase",resBasePath);
  String response=connector.getResponses("GET /context/dir/?/../../sekret/pass HTTP/1.0\r\n\r\n");
  assertResponseContains("/four/",response);
  assertResponseContains("/five/",response);
  assertResponseContains("/six/",response);
  assertResponseNotContains("Sssh",response);
  connector.reopen();
  response=connector.getResponses("GET /context/dir/../../../sekret/pass HTTP/1.0\r\n\r\n");
  assertResponseNotContains("Sssh",response);
  connector.reopen();
  response=connector.getResponses("GET /context/dir/%3F/../../sekret/pass HTTP/1.0\r\n\r\n");
  assertResponseNotContains("Sssh",response);
  connector.reopen();
  response=connector.getResponses("GET /context/dir/%3F/../../../sekret/pass HTTP/1.0\r\n\r\n");
  assertResponseNotContains("Sssh",response);
  connector.reopen();
  response=connector.getResponses("GET /context/dir%3F/../../sekret/pass HTTP/1.0\r\n\r\n");
  assertResponseNotContains("Sssh",response);
  connector.reopen();
  response=connector.getResponses("GET /context/dir%3B/ HTTP/1.0\r\n\r\n");
  assertResponseContains("Directory: /context/dir;/<",response);
  connector.reopen();
  response=connector.getResponses("GET /context/dir/../ HTTP/1.0\r\n\r\n");
  assertResponseContains("Directory: /context/<",response);
  connector.reopen();
  response=connector.getResponses("GET /context/dir%3B/../ HTTP/1.0\r\n\r\n");
  assertResponseContains("Directory: /context/<",response);
  connector.reopen();
  response=connector.getResponses("GET /context/dir%3B/../../sekret/pass HTTP/1.0\r\n\r\n");
  assertResponseContains("Not Found",response);
}
