{
  ServerSocket serverSocket=new ServerSocket();
  serverSocket.bind(null);
  int port=serverSocket.getLocalPort();
  HttpClient httpClient=newHttpClient();
  httpClient.setIdleTimeout(700);
  httpClient.start();
  try {
    HttpExchange exchange=new ConnectionExchange();
    exchange.setAddress(new Address("localhost",port));
    exchange.setRequestURI("/");
    HttpDestination dest=httpClient.getDestination(new Address("localhost",port),false);
    httpClient.send(exchange);
    Socket s=serverSocket.accept();
    s.setSoTimeout(10000);
    byte[] buf=new byte[4096];
    int len=s.getInputStream().read(buf);
    System.err.println(new String(buf,0,len));
    assertEquals(1,dest.getConnections());
    assertEquals(0,dest.getIdleConnections());
    s.getOutputStream().write("HTTP/1.1 200 OK\r\nContent-Length: 0\r\n\r\n".getBytes());
    System.err.println("--");
    Thread.sleep(300);
    assertEquals(1,dest.getConnections());
    assertEquals(1,dest.getIdleConnections());
    exchange=new ConnectionExchange();
    exchange.setAddress(new Address("localhost",port));
    exchange.setRequestURI("/");
    httpClient.send(exchange);
    System.err.println(">>");
    Thread.sleep(100);
    assertEquals(1,dest.getConnections());
    len=s.getInputStream().read(buf);
    System.err.println(new String(buf,0,len));
    assertEquals(1,dest.getConnections());
    assertEquals(0,dest.getIdleConnections());
    s.getOutputStream().write("HTTP/1.1 200 OK\r\nContent-Length: 0\r\n\r\n".getBytes());
    System.err.println("==");
    Thread.sleep(500);
    assertEquals(1,dest.getConnections());
    assertEquals(1,dest.getIdleConnections());
    Thread.sleep(500);
    assertEquals(0,dest.getConnections());
    assertEquals(0,dest.getIdleConnections());
    System.err.println("closing");
    serverSocket.close();
  }
  finally {
    System.err.println("stopping");
    httpClient.stop();
  }
}
