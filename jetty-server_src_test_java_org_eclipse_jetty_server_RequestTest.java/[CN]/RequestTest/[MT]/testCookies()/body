{
  final ArrayList<Cookie> cookies=new ArrayList<Cookie>();
  _handler._checker=new RequestTester(){
    public boolean check(    HttpServletRequest request,    HttpServletResponse response) throws IOException {
      javax.servlet.http.Cookie[] ca=request.getCookies();
      if (ca != null)       cookies.addAll(Arrays.asList(ca));
      response.getOutputStream().println("Hello World");
      return true;
    }
  }
;
  String response;
  cookies.clear();
  response=_connector.getResponses("GET / HTTP/1.1\n" + "Host: whatever\n" + "\n");
  assertTrue(response.startsWith("HTTP/1.1 200 OK"));
  assertEquals(0,cookies.size());
  cookies.clear();
  response=_connector.getResponses("GET / HTTP/1.1\n" + "Host: whatever\n" + "Cookie: name=quoted=\\\"value\\\"\n"+ "\n");
  assertTrue(response.startsWith("HTTP/1.1 200 OK"));
  assertEquals(1,cookies.size());
  assertEquals("name",cookies.get(0).getName());
  assertEquals("quoted=\\\"value\\\"",cookies.get(0).getValue());
  cookies.clear();
  response=_connector.getResponses("GET / HTTP/1.1\n" + "Host: whatever\n" + "Cookie: name=value; other=\"quoted=;value\"\n"+ "\n");
  assertTrue(response.startsWith("HTTP/1.1 200 OK"));
  assertEquals(2,cookies.size());
  assertEquals("name",cookies.get(0).getName());
  assertEquals("value",cookies.get(0).getValue());
  assertEquals("other",cookies.get(1).getName());
  assertEquals("quoted=;value",cookies.get(1).getValue());
  cookies.clear();
  response=_connector.getResponses("GET /other HTTP/1.1\n" + "Host: whatever\n" + "Other: header\n"+ "Cookie: name=value; other=\"quoted=;value\"\n"+ "\n"+ "GET /other HTTP/1.1\n"+ "Host: whatever\n"+ "Other: header\n"+ "Cookie: name=value; other=\"quoted=;value\"\n"+ "\n");
  assertTrue(response.startsWith("HTTP/1.1 200 OK"));
  assertEquals(4,cookies.size());
  assertEquals("name",cookies.get(0).getName());
  assertEquals("value",cookies.get(0).getValue());
  assertEquals("other",cookies.get(1).getName());
  assertEquals("quoted=;value",cookies.get(1).getValue());
  assertSame(cookies.get(0),cookies.get(2));
  assertSame(cookies.get(1),cookies.get(3));
  cookies.clear();
  response=_connector.getResponses("GET /other HTTP/1.1\n" + "Host: whatever\n" + "Other: header\n"+ "Cookie: name=value; other=\"quoted=;value\"\n"+ "\n"+ "GET /other HTTP/1.1\n"+ "Host: whatever\n"+ "Other: header\n"+ "Cookie: name=value; other=\"othervalue\"\n"+ "\n");
  assertTrue(response.startsWith("HTTP/1.1 200 OK"));
  assertEquals(4,cookies.size());
  assertEquals("name",cookies.get(0).getName());
  assertEquals("value",cookies.get(0).getValue());
  assertEquals("other",cookies.get(1).getName());
  assertEquals("quoted=;value",cookies.get(1).getValue());
  assertNotSame(cookies.get(0),cookies.get(2));
  assertNotSame(cookies.get(1),cookies.get(3));
  cookies.clear();
  response=_connector.getResponses("POST / HTTP/1.1\r\n" + "Host: whatever\r\n" + "Cookie: name0=value0; name1 = value1 ; \"name2\"  =  \"\\\"value2\\\"\"  \n"+ "Cookie: $Version=2; name3=value3=value3;$path=/path;$domain=acme.com;$port=8080, name4=; name5 =  ; name6\n"+ "Cookie: name7=value7;\n"+ "Connection: close\r\n"+ "\r\n");
  assertEquals("name0",cookies.get(0).getName());
  assertEquals("value0",cookies.get(0).getValue());
  assertEquals("name1",cookies.get(1).getName());
  assertEquals("value1",cookies.get(1).getValue());
  assertEquals("name2",cookies.get(2).getName());
  assertEquals("\"value2\"",cookies.get(2).getValue());
  assertEquals("name3",cookies.get(3).getName());
  assertEquals("value3=value3",cookies.get(3).getValue());
  assertEquals(2,cookies.get(3).getVersion());
  assertEquals("/path",cookies.get(3).getPath());
  assertEquals("acme.com",cookies.get(3).getDomain());
  assertEquals("$port=8080",cookies.get(3).getComment());
  assertEquals("name4",cookies.get(4).getName());
  assertEquals("",cookies.get(4).getValue());
  assertEquals("name5",cookies.get(5).getName());
  assertEquals("",cookies.get(5).getValue());
  assertEquals("name6",cookies.get(6).getName());
  assertEquals("",cookies.get(6).getValue());
  assertEquals("name7",cookies.get(7).getName());
  assertEquals("value7",cookies.get(7).getValue());
}
