{
  if (LOG_OPEN.isDebugEnabled())   LOG_OPEN.debug("[{}] {}.open()",policy.getBehavior(),this.getClass().getSimpleName());
  if (remote != null) {
    return;
  }
  try (ThreadClassLoaderScope scope=new ThreadClassLoaderScope(classLoader)){
    connection.getIOState().onConnected();
    remote=new WebSocketRemoteEndpoint(connection,outgoingHandler,getBatchMode());
    if (LOG_OPEN.isDebugEnabled())     LOG_OPEN.debug("[{}] {}.open() remote={}",policy.getBehavior(),this.getClass().getSimpleName(),remote);
    websocket.openSession(this);
    connection.getIOState().onOpened();
    if (LOG.isDebugEnabled()) {
      LOG.debug("open -> {}",dump());
    }
  }
 catch (  CloseException ce) {
    LOG.warn(ce);
    close(ce.getStatusCode(),ce.getMessage());
  }
catch (  Throwable t) {
    LOG.warn(t);
    int statusCode=StatusCode.SERVER_ERROR;
    if (policy.getBehavior() == WebSocketBehavior.CLIENT) {
      statusCode=StatusCode.POLICY_VIOLATION;
    }
    close(statusCode,t.getMessage());
  }
}
