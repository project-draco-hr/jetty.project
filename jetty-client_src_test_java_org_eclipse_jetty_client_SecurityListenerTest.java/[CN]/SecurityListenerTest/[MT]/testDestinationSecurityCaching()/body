{
  final CyclicBarrier barrier=new CyclicBarrier(2);
  ContentExchange httpExchange=new ContentExchange(){
    @Override protected void onResponseComplete() throws IOException {
      super.onResponseComplete();
      try {
        barrier.await();
      }
 catch (      Exception e) {
      }
    }
  }
;
  httpExchange.setURL("http://localhost:" + _port + "/?i=1");
  httpExchange.setMethod(HttpMethod.GET);
  _httpClient.send(httpExchange);
  try {
    barrier.await();
  }
 catch (  Exception e) {
  }
  barrier.reset();
  ContentExchange httpExchange2=new ContentExchange(){
    @Override protected void onResponseComplete() throws IOException {
      super.onResponseComplete();
      try {
        barrier.await();
      }
 catch (      Exception e) {
      }
    }
  }
;
  httpExchange2.setURL("http://localhost:" + _port + "/?i=2");
  httpExchange2.setMethod(HttpMethod.GET);
  _httpClient.send(httpExchange2);
  try {
    barrier.await();
  }
 catch (  Exception e) {
  }
  assertFalse("exchange was retried",httpExchange2.getRetryStatus());
}
