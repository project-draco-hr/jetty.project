{
  _throwable=new Throwable();
synchronized (this) {
    if (_exchange != null) {
      if (_pipeline != null)       throw new IllegalStateException(this + " PIPELINED!!!  _exchange=" + _exchange);
      _pipeline=ex;
      return true;
    }
    if (!_endp.isOpen())     return false;
    ex.setStatus(HttpExchange.STATUS_WAITING_FOR_COMMIT);
    _exchange=ex;
    if (_endp.isBlocking())     this.notify();
 else {
      SelectChannelEndPoint scep=(SelectChannelEndPoint)_endp;
      scep.scheduleWrite();
    }
    if (!_endp.isBlocking())     _destination.getHttpClient().schedule(_timeout);
    return true;
  }
}
