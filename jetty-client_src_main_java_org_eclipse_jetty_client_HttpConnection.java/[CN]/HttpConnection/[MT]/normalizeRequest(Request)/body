{
  String method=request.getMethod();
  HttpVersion version=request.getVersion();
  HttpFields headers=request.getHeaders();
  ContentProvider content=request.getContent();
  ProxyConfiguration.Proxy proxy=destination.getProxy();
  String path=request.getPath();
  if (path.trim().length() == 0) {
    path="/";
    request.path(path);
  }
  if (proxy != null && !HttpMethod.CONNECT.is(method)) {
    path=request.getURI().toString();
    request.path(path);
  }
  if (version.getVersion() > 10) {
    if (!headers.containsKey(HttpHeader.HOST.asString()))     headers.put(getHttpDestination().getHostField());
  }
  if (content != null) {
    if (content instanceof ContentProvider.Typed) {
      if (!headers.containsKey(HttpHeader.CONTENT_TYPE.asString())) {
        String contentType=((ContentProvider.Typed)content).getContentType();
        if (contentType != null)         headers.put(HttpHeader.CONTENT_TYPE,contentType);
      }
    }
    long contentLength=content.getLength();
    if (contentLength >= 0) {
      if (!headers.containsKey(HttpHeader.CONTENT_LENGTH.asString()))       headers.put(HttpHeader.CONTENT_LENGTH,String.valueOf(contentLength));
    }
 else {
      if (!headers.containsKey(HttpHeader.TRANSFER_ENCODING.asString()))       headers.put(CHUNKED_FIELD);
    }
  }
  CookieStore cookieStore=getHttpClient().getCookieStore();
  if (cookieStore != null) {
    URI uri=request.getURI();
    if (uri != null) {
      StringBuilder cookies=convertCookies(cookieStore.get(uri),null);
      cookies=convertCookies(request.getCookies(),cookies);
      if (cookies != null)       request.header(HttpHeader.COOKIE.asString(),cookies.toString());
    }
  }
  URI authenticationURI=proxy != null ? proxy.getURI() : request.getURI();
  if (authenticationURI != null) {
    Authentication.Result authnResult=getHttpClient().getAuthenticationStore().findAuthenticationResult(authenticationURI);
    if (authnResult != null)     authnResult.apply(request);
  }
}
