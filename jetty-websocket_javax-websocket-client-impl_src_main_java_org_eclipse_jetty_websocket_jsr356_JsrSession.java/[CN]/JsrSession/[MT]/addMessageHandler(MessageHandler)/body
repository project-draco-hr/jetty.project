{
  Objects.requireNonNull(handler,"MessageHandler cannot be null");
synchronized (wrappers) {
    for (    MessageHandlerMetadata metadata : messageHandlerFactory.getMetadata(handler.getClass())) {
      DecoderWrapper decoder=decoderFactory.getWrapperFor(metadata.getMessageClass());
      MessageType key=decoder.getMetadata().getMessageType();
      MessageHandlerWrapper other=wrappers[key.ordinal()];
      if (other != null) {
        StringBuilder err=new StringBuilder();
        err.append("Encountered duplicate MessageHandler handling message type <");
        err.append(key.name());
        err.append(">, ").append(metadata.getHandlerClass().getName());
        err.append("<");
        err.append(metadata.getMessageClass().getName());
        err.append("> and ");
        err.append(other.getMetadata().getHandlerClass().getName());
        err.append("<");
        err.append(other.getMetadata().getMessageClass().getName());
        err.append("> both implement this message type");
        throw new IllegalStateException(err.toString());
      }
 else {
        MessageHandlerWrapper wrapper=new MessageHandlerWrapper(handler,metadata,decoder);
        wrappers[key.ordinal()]=wrapper;
      }
    }
    messageHandlerSet.clear();
    for (    MessageHandlerWrapper wrapper : wrappers) {
      if (wrapper == null) {
        continue;
      }
      messageHandlerSet.add(wrapper.getHandler());
    }
  }
}
