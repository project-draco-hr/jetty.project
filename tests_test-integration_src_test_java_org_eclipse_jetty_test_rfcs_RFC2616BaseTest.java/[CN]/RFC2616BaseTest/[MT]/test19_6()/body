{
  String specId;
  StringBuffer req1=new StringBuffer();
  req1.append("GET /tests/R1.txt HTTP/1.0\n");
  req1.append("\n");
  HttpTester.Response response=http.request(req1);
  specId="19.6 Compatibility with HTTP/1.0 - simple request";
  assertEquals(specId,HttpStatus.OK_200,response.getStatus());
  assertTrue(specId + " - connection closed not assumed",response.get("Connection") == null);
  StringBuffer req2=new StringBuffer();
  req2.append("GET /tests/R1.txt HTTP/1.0\n");
  req2.append("Host: localhost\n");
  req2.append("Connection: keep-alive\n");
  req2.append("\n");
  req2.append("GET /tests/R2.txt HTTP/1.0\n");
  req2.append("Host: localhost\n");
  req2.append("Connection: close\n");
  req2.append("\n");
  req2.append("GET /tests/R3.txt HTTP/1.0\n");
  req2.append("Host: localhost\n");
  req2.append("Connection: close\n");
  req2.append("\n");
  List<HttpTester.Response> responses=http.requests(req2);
  Assert.assertEquals("Response Count",2,responses.size());
  response=responses.get(0);
  specId="19.6.2 Compatibility with previous HTTP - Keep-alive";
  assertEquals(specId,HttpStatus.OK_200,response.getStatus());
  assertEquals(specId,"keep-alive",response.get("Connection"));
  assertTrue(specId,response.getContent().contains("Resource=R1"));
  response=responses.get(1);
  assertEquals(specId,HttpStatus.OK_200,response.getStatus());
  assertTrue(specId,response.getContent().contains("Resource=R2"));
  StringBuffer req3=new StringBuffer();
  req3.append("GET /echo/R1 HTTP/1.0\n");
  req3.append("Host: localhost\n");
  req3.append("Connection: keep-alive\n");
  req3.append("Content-Length: 10\n");
  req3.append("\n");
  req3.append("1234567890\n");
  req3.append("GET /echo/RA HTTP/1.0\n");
  req3.append("Host: localhost\n");
  req3.append("Connection: keep-alive\n");
  req3.append("Content-Length: 10\n");
  req3.append("\n");
  req3.append("ABCDEFGHIJ\n");
  req3.append("GET /tests/R2.txt HTTP/1.0\n");
  req3.append("Host: localhost\n");
  req3.append("Connection: close\n");
  req3.append("\n");
  req3.append("GET /tests/R3.txt HTTP/1.0\n");
  req3.append("Host: localhost\n");
  req3.append("Connection: close\n");
  req3.append("\n");
  responses=http.requests(req3);
  Assert.assertEquals("Response Count",3,responses.size());
  specId="19.6.2 Compatibility with HTTP/1.0- Keep-alive";
  response=responses.get(0);
  assertEquals(specId,HttpStatus.OK_200,response.getStatus());
  assertEquals(specId,"keep-alive",response.get("Connection"));
  assertTrue(specId,response.getContent().contains("1234567890\n"));
  response=responses.get(1);
  assertEquals(specId,HttpStatus.OK_200,response.getStatus());
  assertEquals(specId,"keep-alive",response.get("Connection"));
  assertTrue(specId,response.getContent().contains("ABCDEFGHIJ\n"));
  response=responses.get(2);
  assertEquals(specId,HttpStatus.OK_200,response.getStatus());
  assertTrue(specId,response.getContent().contains("Host=Default\nResource=R2\n"));
}
