{
  List<HttpResponseTester> responses;
  HttpResponseTester response;
  String specId;
  StringBuffer req1=new StringBuffer();
  req1.append("GET /tests/R1.txt HTTP/1.0\n");
  req1.append("\n");
  response=http.request(req1);
  specId="19.6 Compatibility with HTTP/1.0 - simple request";
  response.assertStatusOK(specId);
  response.assertHeaderNotPresent(specId + " - connection closed not assumed","Connection");
  StringBuffer req2=new StringBuffer();
  req2.append("GET /tests/R1.txt HTTP/1.0\n");
  req2.append("Host: localhost\n");
  req2.append("Connection: keep-alive\n");
  req2.append("\n");
  req2.append("GET /tests/R2.txt HTTP/1.0\n");
  req2.append("Host: localhost\n");
  req2.append("Connection: close\n");
  req2.append("\n");
  req2.append("GET /tests/R3.txt HTTP/1.0\n");
  req2.append("Host: localhost\n");
  req2.append("Connection: close\n");
  req2.append("\n");
  responses=http.requests(req2);
  assertEquals("Response Count",2,responses.size());
  response=responses.get(0);
  specId="19.6.2 Compatibility with previous HTTP - Keep-alive";
  response.assertStatusOK(specId);
  response.assertHeader(specId,"Connection","keep-alive");
  response.assertBodyContains(specId,"Resource=R1");
  response=responses.get(1);
  response.assertStatusOK(specId);
  response.assertHeader(specId,"Connection","close");
  response.assertBodyContains(specId,"Resource=R2");
  StringBuffer req3=new StringBuffer();
  req3.append("GET /echo/R1 HTTP/1.0\n");
  req3.append("Host: localhost\n");
  req3.append("Connection: keep-alive\n");
  req3.append("Content-Length: 10\n");
  req3.append("\n");
  req3.append("1234567890\n");
  req3.append("GET /echo/RA HTTP/1.0\n");
  req3.append("Host: localhost\n");
  req3.append("Connection: keep-alive\n");
  req3.append("Content-Length: 10\n");
  req3.append("\n");
  req3.append("ABCDEFGHIJ\n");
  req3.append("GET /tests/R2.txt HTTP/1.0\n");
  req3.append("Host: localhost\n");
  req3.append("Connection: close\n");
  req3.append("\n");
  req3.append("GET /tests/R3.txt HTTP/1.0\n");
  req3.append("Host: localhost\n");
  req3.append("Connection: close\n");
  req3.append("\n");
  responses=http.requests(req3);
  assertEquals("Response Count",3,responses.size());
  specId="19.6.2 Compatibility with HTTP/1.0- Keep-alive";
  response=responses.get(0);
  response.assertStatusOK(specId);
  response.assertHeader(specId,"Connection","keep-alive");
  response.assertBody(specId,"1234567890\n");
  response=responses.get(1);
  response.assertStatusOK(specId);
  response.assertHeader(specId,"Connection","keep-alive");
  response.assertBody(specId,"ABCDEFGHIJ\n");
  response=responses.get(2);
  response.assertStatusOK(specId);
  response.assertHeader(specId,"Connection","close");
  response.assertBody(specId,"Host=Default\nResource=R2\n");
}
