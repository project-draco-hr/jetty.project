{
  String rangedef="-1,-2,-3";
  StringBuffer req1=new StringBuffer();
  req1.append("GET /rfc2616-webapp/alpha.txt HTTP/1.1\n");
  req1.append("Host: localhost\n");
  req1.append("Range: ").append(rangedef).append("\n");
  req1.append("Connection: close\n");
  req1.append("\n");
  HttpTester.Response response=http.request(req1);
  String msg="Partial (Byte) Range: '" + rangedef + "'";
  assertEquals(msg,HttpStatus.PARTIAL_CONTENT_206,response.getStatus());
  String contentType=response.get("Content-Type");
  StringAssert.assertContains(msg + " Content-Type",contentType,"multipart/byteranges");
  String boundary=null;
  String parts[]=StringUtil.split(contentType,';');
  for (int i=0; i < parts.length; i++) {
    if (parts[i].trim().startsWith("boundary=")) {
      String boundparts[]=StringUtil.split(parts[i],'=');
      Assert.assertEquals(msg + " Boundary parts.length",2,boundparts.length);
      boundary=boundparts[1];
    }
  }
  Assert.assertNotNull(msg + " Should have found boundary in Content-Type header",boundary);
  List<String> lines=StringUtil.asLines(response.getContent().trim());
  int i=0;
  assertEquals("--" + boundary,lines.get(i++));
  assertEquals("Content-Type: text/plain",lines.get(i++));
  assertEquals("Content-Range: bytes 26-26/27",lines.get(i++));
  assertEquals("",lines.get(i++));
  assertEquals("",lines.get(i++));
  assertEquals("",lines.get(i++));
  assertEquals("--" + boundary,lines.get(i++));
  assertEquals("Content-Type: text/plain",lines.get(i++));
  assertEquals("Content-Range: bytes 25-26/27",lines.get(i++));
  assertEquals("",lines.get(i++));
  assertEquals("Z",lines.get(i++));
  assertEquals("",lines.get(i++));
  assertEquals("--" + boundary,lines.get(i++));
  assertEquals("Content-Type: text/plain",lines.get(i++));
  assertEquals("Content-Range: bytes 24-26/27",lines.get(i++));
  assertEquals("",lines.get(i++));
  assertEquals("YZ",lines.get(i++));
  assertEquals("",lines.get(i++));
  assertEquals("--" + boundary + "--",lines.get(i++));
}
