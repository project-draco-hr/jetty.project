{
  super(endpoint,System.currentTimeMillis());
  _endp=endpoint;
  _future=future;
  byte[] bytes=new byte[16];
  new Random().nextBytes(bytes);
  _key=new String(B64Code.encode(bytes));
  Buffers buffers=new SimpleBuffers(_buffers.getBuffer(),null);
  _parser=new HttpParser(buffers,_endp,new HttpParser.EventHandler(){
    @Override public void startResponse(    ByteBuffer version,    int status,    ByteBuffer reason) throws IOException {
      if (status != 101) {
        _error="Bad response status " + status + " "+ reason;
        _endp.close();
      }
    }
    @Override public void parsedHeader(    ByteBuffer name,    ByteBuffer value) throws IOException {
      if (__ACCEPT.equals(name))       _accept=value.toString();
    }
    @Override public void startRequest(    ByteBuffer method,    ByteBuffer url,    ByteBuffer version) throws IOException {
      if (_error == null)       _error="Bad response: " + method + " "+ url+ " "+ version;
      _endp.close();
    }
    @Override public void content(    ByteBuffer ref) throws IOException {
      if (_error == null)       _error="Bad response. " + ref.length() + "B of content?";
      _endp.close();
    }
  }
);
}
