{
  Resource resourcesDir=null;
  if (cache != null && cache.containsKey(jar)) {
    resourcesDir=cache.get(jar);
    if (resourcesDir == EmptyResource.INSTANCE) {
      if (LOG.isDebugEnabled())       LOG.debug(jar + " cached as containing no META-INF/resources");
      return;
    }
 else     if (LOG.isDebugEnabled())     LOG.debug(jar + " META-INF/resources found in cache ");
  }
 else {
    if (LOG.isDebugEnabled())     LOG.debug(jar + " META-INF/resources checked");
    URI uri=jar.getURI();
    resourcesDir=Resource.newResource("jar:" + uri + "!/META-INF/resources");
    if (!resourcesDir.exists() || !resourcesDir.isDirectory())     resourcesDir=EmptyResource.INSTANCE;
    if (cache != null) {
      Resource old=cache.putIfAbsent(jar,resourcesDir);
      if (old != null)       resourcesDir=old;
 else       if (LOG.isDebugEnabled())       LOG.debug(jar + " META-INF/resources cache updated");
    }
    if (resourcesDir == EmptyResource.INSTANCE)     return;
  }
  Set<Resource> dirs=(Set<Resource>)context.getAttribute(METAINF_RESOURCES);
  if (dirs == null) {
    dirs=new HashSet<Resource>();
    context.setAttribute(METAINF_RESOURCES,dirs);
  }
  if (LOG.isDebugEnabled())   LOG.debug(resourcesDir + " added to context");
  dirs.add(resourcesDir);
}
