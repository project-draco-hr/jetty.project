{
  Constraint constraint1=new Constraint();
  constraint1.setAuthenticate(true);
  constraint1.setName("** constraint");
  constraint1.setRoles(new String[]{Constraint.ANY_AUTH,"user"});
  ConstraintMapping mapping1=new ConstraintMapping();
  mapping1.setPathSpec("/starstar/*");
  mapping1.setConstraint(constraint1);
  _security.setConstraintMappings(Collections.singletonList(mapping1));
  _security.setAuthenticator(new BasicAuthenticator());
  _server.start();
  Set<String> uncoveredPaths=_security.getPathsWithUncoveredHttpMethods();
  Assert.assertTrue(uncoveredPaths.isEmpty());
  Constraint constraint2=new Constraint();
  constraint2.setAuthenticate(true);
  constraint2.setName("user constraint");
  constraint2.setRoles(new String[]{"user"});
  ConstraintMapping mapping2=new ConstraintMapping();
  mapping2.setPathSpec("/user/*");
  mapping2.setMethod("GET");
  mapping2.setConstraint(constraint2);
  _security.addConstraintMapping(mapping2);
  uncoveredPaths=_security.getPathsWithUncoveredHttpMethods();
  Assert.assertNotNull(uncoveredPaths);
  Assert.assertEquals(1,uncoveredPaths.size());
  Assert.assertTrue(uncoveredPaths.contains("/user/*"));
  Constraint constraint2a=new Constraint();
  constraint2a.setAuthenticate(true);
  constraint2a.setName("forbid constraint");
  ConstraintMapping mapping2a=new ConstraintMapping();
  mapping2a.setPathSpec("/user/*");
  mapping2a.setMethodOmissions(new String[]{"GET"});
  mapping2a.setConstraint(constraint2a);
  _security.addConstraintMapping(mapping2a);
  uncoveredPaths=_security.getPathsWithUncoveredHttpMethods();
  Assert.assertNotNull(uncoveredPaths);
  Assert.assertEquals(0,uncoveredPaths.size());
  Constraint constraint3=new Constraint();
  constraint3.setAuthenticate(true);
  constraint3.setName("omit constraint");
  ConstraintMapping mapping3=new ConstraintMapping();
  mapping3.setPathSpec("/omit/*");
  mapping3.setMethodOmissions(new String[]{"GET","POST"});
  mapping3.setConstraint(constraint3);
  _security.addConstraintMapping(mapping3);
  uncoveredPaths=_security.getPathsWithUncoveredHttpMethods();
  Assert.assertNotNull(uncoveredPaths);
  Assert.assertTrue(uncoveredPaths.contains("/omit/*"));
  _security.setDenyUncoveredHttpMethods(true);
  uncoveredPaths=_security.getPathsWithUncoveredHttpMethods();
  Assert.assertNotNull(uncoveredPaths);
  Assert.assertEquals(0,uncoveredPaths.size());
}
