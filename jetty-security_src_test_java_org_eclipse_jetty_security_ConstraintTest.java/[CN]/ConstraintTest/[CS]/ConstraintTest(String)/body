{
  super(arg0);
  Constraint constraint0=new Constraint();
  constraint0.setAuthenticate(true);
  constraint0.setName("forbid");
  ConstraintMapping mapping0=new ConstraintMapping();
  mapping0.setPathSpec("/forbid/*");
  mapping0.setConstraint(constraint0);
  Constraint constraint1=new Constraint();
  constraint1.setAuthenticate(true);
  constraint1.setName("auth");
  constraint1.setRoles(new String[]{Constraint.ANY_ROLE});
  ConstraintMapping mapping1=new ConstraintMapping();
  mapping1.setPathSpec("/auth/*");
  mapping1.setConstraint(constraint1);
  Constraint constraint2=new Constraint();
  constraint2.setAuthenticate(true);
  constraint2.setName("admin");
  constraint2.setRoles(new String[]{"administrator"});
  ConstraintMapping mapping2=new ConstraintMapping();
  mapping2.setPathSpec("/admin/*");
  mapping2.setConstraint(constraint2);
  Constraint constraint3=new Constraint();
  constraint3.setAuthenticate(false);
  constraint3.setName("relax");
  ConstraintMapping mapping3=new ConstraintMapping();
  mapping3.setPathSpec("/admin/relax/*");
  mapping3.setConstraint(constraint3);
  Set<String> knownRoles=new HashSet<String>();
  knownRoles.add("user");
  knownRoles.add("administrator");
  _security.setConstraintMappings(new ConstraintMapping[]{mapping0,mapping1,mapping2,mapping3},knownRoles);
}
