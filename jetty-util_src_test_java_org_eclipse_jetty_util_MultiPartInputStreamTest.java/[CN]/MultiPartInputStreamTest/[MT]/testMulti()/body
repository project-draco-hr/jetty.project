{
  MultipartConfigElement config=new MultipartConfigElement(_dirname,1024,3072,50);
  MultiPartInputStream mpis=new MultiPartInputStream(new ByteArrayInputStream(_multi.getBytes()),_contentType,config,new File(_dirname));
  Collection<Part> parts=mpis.getParts();
  assertEquals(2,parts.size());
  Part field1=mpis.getPart("field1");
  assertNotNull(field1);
  assertEquals("field1",field1.getName());
  InputStream is=field1.getInputStream();
  ByteArrayOutputStream os=new ByteArrayOutputStream();
  IO.copy(is,os);
  assertEquals("Joe Blow",new String(os.toByteArray()));
  assertEquals(8,field1.getSize());
  assertNotNull(((MultiPartInputStream.MultiPart)field1).getBytes());
  field1.write("field1.txt");
  assertNull(((MultiPartInputStream.MultiPart)field1).getBytes());
  File f=new File(_dirname + File.separator + "field1.txt");
  assertTrue(f.exists());
  field1.write("another_field1.txt");
  File f2=new File(_dirname + File.separator + "another_field1.txt");
  assertTrue(f2.exists());
  assertFalse(f.exists());
  field1.delete();
  assertFalse(f2.exists());
  Part stuff=mpis.getPart("stuff");
  assertEquals("text/plain",stuff.getContentType());
  assertEquals("text/plain",stuff.getHeader("Content-Type"));
  assertEquals(1,stuff.getHeaders("content-type").size());
  assertEquals("form-data; name=\"stuff\"; filename=\"stuff.txt\"",stuff.getHeader("content-disposition"));
  assertEquals(2,stuff.getHeaderNames().size());
  assertEquals(51,stuff.getSize());
  f=((MultiPartInputStream.MultiPart)stuff).getFile();
  assertNotNull(f);
  assertNull(((MultiPartInputStream.MultiPart)stuff).getBytes());
  assertTrue(f.exists());
  assertNotSame("stuff.txt",f.getName());
  stuff.write("stuff.txt");
  f=new File(_dirname + File.separator + "stuff.txt");
  assertTrue(f.exists());
}
