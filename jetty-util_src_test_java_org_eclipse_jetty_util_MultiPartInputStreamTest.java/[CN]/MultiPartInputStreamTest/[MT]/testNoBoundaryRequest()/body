{
  String str="--\r\n" + "Content-Disposition: form-data; name=\"fileName\"\r\n" + "Content-Type: text/plain; charset=US-ASCII\r\n"+ "Content-Transfer-Encoding: 8bit\r\n"+ "\r\n"+ "abc\r\n"+ "--\r\n"+ "Content-Disposition: form-data; name=\"desc\"\r\n"+ "Content-Type: text/plain; charset=US-ASCII\r\n"+ "Content-Transfer-Encoding: 8bit\r\n"+ "\r\n"+ "123\r\n"+ "--\r\n"+ "Content-Disposition: form-data; name=\"title\"\r\n"+ "Content-Type: text/plain; charset=US-ASCII\r\n"+ "Content-Transfer-Encoding: 8bit\r\n"+ "\r\n"+ "ttt\r\n"+ "--\r\n"+ "Content-Disposition: form-data; name=\"datafile5239138112980980385.txt\"; filename=\"datafile5239138112980980385.txt\"\r\n"+ "Content-Type: application/octet-stream; charset=ISO-8859-1\r\n"+ "Content-Transfer-Encoding: binary\r\n"+ "\r\n"+ "000\r\n"+ "----\r\n";
  MultipartConfigElement config=new MultipartConfigElement(_dirname,1024,3072,50);
  MultiPartInputStreamParser mpis=new MultiPartInputStreamParser(new ByteArrayInputStream(str.getBytes()),"multipart/form-data",config,_tmpDir);
  mpis.setDeleteOnExit(true);
  Collection<Part> parts=mpis.getParts();
  assertThat(parts.size(),is(4));
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  Part fileName=mpis.getPart("fileName");
  assertThat(fileName,notNullValue());
  assertThat(fileName.getSize(),is(3L));
  IO.copy(fileName.getInputStream(),baos);
  assertThat(baos.toString("US-ASCII"),is("abc"));
  baos=new ByteArrayOutputStream();
  Part desc=mpis.getPart("desc");
  assertThat(desc,notNullValue());
  assertThat(desc.getSize(),is(3L));
  IO.copy(desc.getInputStream(),baos);
  assertThat(baos.toString("US-ASCII"),is("123"));
  baos=new ByteArrayOutputStream();
  Part title=mpis.getPart("title");
  assertThat(title,notNullValue());
  assertThat(title.getSize(),is(3L));
  IO.copy(title.getInputStream(),baos);
  assertThat(baos.toString("US-ASCII"),is("ttt"));
}
