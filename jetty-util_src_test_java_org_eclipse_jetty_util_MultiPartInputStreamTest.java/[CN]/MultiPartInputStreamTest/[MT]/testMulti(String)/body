{
  MultipartConfigElement config=new MultipartConfigElement(_dirname,1024,3072,50);
  MultiPartInputStream mpis=new MultiPartInputStream(new ByteArrayInputStream(createMultipartRequestString(filename).getBytes()),_contentType,config,new File(_dirname));
  Collection<Part> parts=mpis.getParts();
  assertThat(parts.size(),is(2));
  Part field1=mpis.getPart("field1");
  assertThat(field1,notNullValue());
  assertThat(field1.getName(),is("field1"));
  InputStream is=field1.getInputStream();
  ByteArrayOutputStream os=new ByteArrayOutputStream();
  IO.copy(is,os);
  assertEquals("Joe Blow",new String(os.toByteArray()));
  assertEquals(8,field1.getSize());
  assertNotNull(((MultiPartInputStream.MultiPart)field1).getBytes());
  field1.write("field1.txt");
  assertNull(((MultiPartInputStream.MultiPart)field1).getBytes());
  File f=new File(_dirname + File.separator + "field1.txt");
  assertTrue(f.exists());
  field1.write("another_field1.txt");
  File f2=new File(_dirname + File.separator + "another_field1.txt");
  assertTrue(f2.exists());
  assertFalse(f.exists());
  field1.delete();
  assertFalse(f2.exists());
  MultiPart stuff=(MultiPart)mpis.getPart("stuff");
  assertThat(stuff.getContentDispositionFilename(),is(filename));
  assertThat(stuff.getContentType(),is("text/plain"));
  assertThat(stuff.getHeader("Content-Type"),is("text/plain"));
  assertThat(stuff.getHeaders("content-type").size(),is(1));
  assertThat(stuff.getHeader("content-disposition"),is("form-data; name=\"stuff\"; filename=\"" + filename + "\""));
  assertThat(stuff.getHeaderNames().size(),is(2));
  assertThat(stuff.getSize(),is(51L));
  f=stuff.getFile();
  assertThat(f,notNullValue());
  assertThat(stuff.getBytes(),nullValue());
  assertThat(f.exists(),is(true));
  assertThat(f.getName(),is(not("stuff with space.txt")));
  stuff.write(filename);
  f=new File(_dirname + File.separator + filename);
  assertThat(f.exists(),is(true));
}
