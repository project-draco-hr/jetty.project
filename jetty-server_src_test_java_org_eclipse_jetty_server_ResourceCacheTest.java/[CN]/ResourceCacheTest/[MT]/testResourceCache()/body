{
  assertTrue(cache.lookup("does not exist",factory) == null);
  assertTrue(cache.lookup(names[9],factory) == null);
  Content content;
  content=cache.lookup(names[8],factory);
  assertTrue(content != null);
  assertEquals(80,content.getContentLength());
  assertEquals(80,cache.getCachedSize());
  assertEquals(1,cache.getCachedFiles());
  content=cache.lookup(names[1],factory);
  assertEquals(90,cache.getCachedSize());
  assertEquals(2,cache.getCachedFiles());
  content=cache.lookup(names[2],factory);
  assertEquals(30,cache.getCachedSize());
  assertEquals(2,cache.getCachedFiles());
  content=cache.lookup(names[3],factory);
  assertEquals(60,cache.getCachedSize());
  assertEquals(3,cache.getCachedFiles());
  content=cache.lookup(names[4],factory);
  assertEquals(90,cache.getCachedSize());
  assertEquals(3,cache.getCachedFiles());
  content=cache.lookup(names[5],factory);
  assertEquals(90,cache.getCachedSize());
  assertEquals(2,cache.getCachedFiles());
  content=cache.lookup(names[6],factory);
  assertEquals(60,cache.getCachedSize());
  assertEquals(1,cache.getCachedFiles());
  FileOutputStream out=new FileOutputStream(files[6]);
  out.write(' ');
  out.close();
  content=cache.lookup(names[7],factory);
  assertEquals(70,cache.getCachedSize());
  assertEquals(1,cache.getCachedFiles());
  content=cache.lookup(names[6],factory);
  assertEquals(71,cache.getCachedSize());
  assertEquals(2,cache.getCachedFiles());
  content=cache.lookup(names[0],factory);
  assertEquals(72,cache.getCachedSize());
  assertEquals(3,cache.getCachedFiles());
  content=cache.lookup(names[1],factory);
  assertEquals(82,cache.getCachedSize());
  assertEquals(4,cache.getCachedFiles());
  content=cache.lookup(names[2],factory);
  assertEquals(32,cache.getCachedSize());
  assertEquals(4,cache.getCachedFiles());
  content=cache.lookup(names[3],factory);
  assertEquals(61,cache.getCachedSize());
  assertEquals(4,cache.getCachedFiles());
  cache.flushCache();
  assertEquals(0,cache.getCachedSize());
  assertEquals(0,cache.getCachedFiles());
}
