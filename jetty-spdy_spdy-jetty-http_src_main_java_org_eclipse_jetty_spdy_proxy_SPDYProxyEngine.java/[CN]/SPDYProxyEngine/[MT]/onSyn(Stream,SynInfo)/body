{
  logger.debug("C -> P {} on {}",clientSynInfo,clientStream);
  final Session clientSession=clientStream.getSession();
  short clientVersion=clientSession.getVersion();
  Headers headers=new Headers(clientSynInfo.getHeaders(),false);
  Headers.Header hostHeader=headers.get(HTTPSPDYHeader.HOST.name(clientVersion));
  if (hostHeader == null) {
    rst(clientStream);
    return null;
  }
  String host=hostHeader.value();
  int colon=host.indexOf(':');
  if (colon >= 0)   host=host.substring(0,colon);
  ProxyInfo proxyInfo=getProxyInfo(host);
  if (proxyInfo == null) {
    rst(clientStream);
    return null;
  }
  short serverVersion=proxyInfo.getVersion();
  InetSocketAddress address=proxyInfo.getAddress();
  Session serverSession=produceSession(host,serverVersion,address);
  if (serverSession == null) {
    rst(clientStream);
    return null;
  }
  @SuppressWarnings("unchecked") Set<Session> sessions=(Set<Session>)serverSession.getAttribute(CLIENT_SESSIONS_ATTRIBUTE);
  sessions.add(clientSession);
  addRequestProxyHeaders(clientStream,headers);
  customizeRequestHeaders(clientStream,headers);
  convert(clientVersion,serverVersion,headers);
  SynInfo serverSynInfo=new SynInfo(headers,clientSynInfo.isClose());
  StreamFrameListener listener=new ProxyStreamFrameListener(clientStream);
  StreamHandler handler=new StreamHandler(clientStream,serverSynInfo);
  clientStream.setAttribute(STREAM_HANDLER_ATTRIBUTE,handler);
  serverSession.syn(serverSynInfo,listener,timeout,TimeUnit.MILLISECONDS,handler);
  return this;
}
