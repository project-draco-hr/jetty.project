{
  String jetty_home=System.getProperty("jetty.home","../../jetty-distribution/target/distribution");
  String jetty_base=System.getProperty("jetty.home","../../jetty-distribution/target/distribution/demo-base");
  System.setProperty("jetty.home",jetty_home);
  System.setProperty("jetty.base",jetty_base);
  QueuedThreadPool threadPool=new QueuedThreadPool();
  threadPool.setMaxThreads(500);
  Server server=new Server(threadPool);
  server.addBean(new ScheduledExecutorScheduler());
  HttpConfiguration http_config=new HttpConfiguration();
  http_config.setSecureScheme("https");
  http_config.setSecurePort(8443);
  http_config.setOutputBufferSize(32768);
  http_config.setRequestHeaderSize(8192);
  http_config.setResponseHeaderSize(8192);
  http_config.setSendServerVersion(true);
  http_config.setSendDateHeader(false);
  HandlerCollection handlers=new HandlerCollection();
  ContextHandlerCollection contexts=new ContextHandlerCollection();
  handlers.setHandlers(new Handler[]{contexts,new DefaultHandler()});
  server.setHandler(handlers);
  server.setDumpAfterStart(false);
  server.setDumpBeforeStop(false);
  server.setStopAtShutdown(true);
  MBeanContainer mbContainer=new MBeanContainer(ManagementFactory.getPlatformMBeanServer());
  server.addBean(mbContainer);
  ServerConnector http=new ServerConnector(server,new HttpConnectionFactory(http_config));
  http.setPort(8080);
  http.setIdleTimeout(30000);
  server.addConnector(http);
  SslContextFactory sslContextFactory=new SslContextFactory();
  sslContextFactory.setKeyStorePath(jetty_home + "/etc/keystore");
  sslContextFactory.setKeyStorePassword("OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4");
  sslContextFactory.setKeyManagerPassword("OBF:1u2u1wml1z7s1z7a1wnl1u2g");
  sslContextFactory.setTrustStorePath(jetty_home + "/etc/keystore");
  sslContextFactory.setTrustStorePassword("OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4");
  sslContextFactory.setExcludeCipherSuites("SSL_RSA_WITH_DES_CBC_SHA","SSL_DHE_RSA_WITH_DES_CBC_SHA","SSL_DHE_DSS_WITH_DES_CBC_SHA","SSL_RSA_EXPORT_WITH_RC4_40_MD5","SSL_RSA_EXPORT_WITH_DES40_CBC_SHA","SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA");
  HttpConfiguration https_config=new HttpConfiguration(http_config);
  https_config.addCustomizer(new SecureRequestCustomizer());
  ServerConnector sslConnector=new ServerConnector(server,new SslConnectionFactory(sslContextFactory,"http/1.1"),new HttpConnectionFactory(https_config));
  sslConnector.setPort(8443);
  server.addConnector(sslConnector);
  DeploymentManager deployer=new DeploymentManager();
  deployer.setContexts(contexts);
  deployer.setContextAttribute("org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern",".*/servlet-api-[^/]*\\.jar$");
  WebAppProvider webapp_provider=new WebAppProvider();
  webapp_provider.setMonitoredDirName(jetty_base + "/webapps");
  webapp_provider.setDefaultsDescriptor(jetty_home + "/etc/webdefault.xml");
  webapp_provider.setScanInterval(1);
  webapp_provider.setExtractWars(true);
  webapp_provider.setConfigurationManager(new PropertiesConfigurationManager());
  deployer.addAppProvider(webapp_provider);
  server.addBean(deployer);
  Configuration.ClassList.setServerDefault(server).addAfter("org.eclipse.jetty.webapp.FragmentConfiguration","org.eclipse.jetty.plus.webapp.EnvConfiguration","org.eclipse.jetty.plus.webapp.PlusConfiguration");
  StatisticsHandler stats=new StatisticsHandler();
  stats.setHandler(server.getHandler());
  server.setHandler(stats);
  NCSARequestLog requestLog=new NCSARequestLog();
  requestLog.setFilename(jetty_home + "/logs/yyyy_mm_dd.request.log");
  requestLog.setFilenameDateFormat("yyyy_MM_dd");
  requestLog.setRetainDays(90);
  requestLog.setAppend(true);
  requestLog.setExtended(true);
  requestLog.setLogCookies(false);
  requestLog.setLogTimeZone("GMT");
  RequestLogHandler requestLogHandler=new RequestLogHandler();
  requestLogHandler.setRequestLog(requestLog);
  handlers.addHandler(requestLogHandler);
  LowResourceMonitor lowResourcesMonitor=new LowResourceMonitor(server);
  lowResourcesMonitor.setPeriod(1000);
  lowResourcesMonitor.setLowResourcesIdleTimeout(200);
  lowResourcesMonitor.setMonitorThreads(true);
  lowResourcesMonitor.setMaxConnections(0);
  lowResourcesMonitor.setMaxMemory(0);
  lowResourcesMonitor.setMaxLowResourcesTime(5000);
  server.addBean(lowResourcesMonitor);
  HashLoginService login=new HashLoginService();
  login.setName("Test Realm");
  login.setConfig(jetty_base + "/etc/realm.properties");
  login.setRefreshInterval(0);
  server.addBean(login);
  server.start();
  server.join();
}
