{
  ResetGenerator generator=new ResetGenerator(new HeaderGenerator());
  int streamId=13;
  int error=17;
  final List<ResetFrame> frames=new ArrayList<>();
  for (int i=0; i < 2; ++i) {
    ByteBufferPool.Lease lease=new ByteBufferPool.Lease(byteBufferPool);
    generator.generateReset(lease,streamId,error);
    Parser parser=new Parser(byteBufferPool,new Parser.Listener.Adapter(){
      @Override public boolean onReset(      ResetFrame frame){
        frames.add(frame);
        return false;
      }
    }
);
    frames.clear();
    for (    ByteBuffer buffer : lease.getByteBuffers()) {
      while (buffer.hasRemaining()) {
        parser.parse(buffer);
      }
    }
  }
  Assert.assertEquals(1,frames.size());
  ResetFrame frame=frames.get(0);
  Assert.assertEquals(streamId,frame.getStreamId());
  Assert.assertEquals(error,frame.getError());
}
