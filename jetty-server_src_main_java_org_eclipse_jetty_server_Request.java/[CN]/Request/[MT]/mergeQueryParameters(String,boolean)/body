{
  MultiMap<String> newQueryParams=new MultiMap<>();
  UrlEncoded.decodeTo(newQuery,newQueryParams,UrlEncoded.ENCODING,-1);
  MultiMap<String> oldQueryParams=_queryParameters;
  if (oldQueryParams == null && _queryString != null) {
    oldQueryParams=new MultiMap<>();
    UrlEncoded.decodeTo(_queryString,oldQueryParams,getQueryEncoding(),-1);
  }
  MultiMap<String> mergedQueryParams=new MultiMap<>(newQueryParams);
  boolean hasParamsInCommon=false;
  if (oldQueryParams != null) {
    MultiMap<String> copy=new MultiMap<>(oldQueryParams);
    hasParamsInCommon=copy.keySet().removeAll(newQueryParams.keySet());
    mergedQueryParams.addAllValues(copy);
  }
  setQueryParameters(mergedQueryParams);
  resetParameters();
  if (updateQueryString) {
    StringBuilder mergedQuery=new StringBuilder(newQuery);
    if (hasParamsInCommon) {
      for (      Map.Entry<String,List<String>> entry : mergedQueryParams.entrySet()) {
        if (newQueryParams.containsKey(entry.getKey()))         continue;
        for (        String value : entry.getValue())         mergedQuery.append("&").append(entry.getKey()).append("=").append(value);
      }
    }
 else {
      if (_queryString != null)       mergedQuery.append("&").append(_queryString);
    }
    setQueryString(mergedQuery.toString());
  }
}
