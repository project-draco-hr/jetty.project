{
  if (_serverName != null)   return _serverName;
  if (_uri == null)   throw new IllegalStateException("No uri");
  _serverName=_uri.getHost();
  _port=_uri.getPort();
  if (_serverName != null)   return _serverName;
  Buffer hostPort=_connection.getRequestFields().get(HttpHeaders.HOST_BUFFER);
  if (hostPort != null) {
    loop:     for (int i=hostPort.putIndex(); i-- > hostPort.getIndex(); ) {
      char ch=(char)(0xff & hostPort.peek(i));
switch (ch) {
case ']':
        break loop;
case ':':
      _serverName=BufferUtil.to8859_1_String(hostPort.peek(hostPort.getIndex(),i - hostPort.getIndex()));
    try {
      _port=BufferUtil.toInt(hostPort.peek(i + 1,hostPort.putIndex() - i - 1));
    }
 catch (    NumberFormatException e) {
      try {
        if (_connection != null)         _connection._generator.sendError(HttpStatus.BAD_REQUEST_400,"Port couldn't be parsed from Host header: " + hostPort,null,true);
      }
 catch (      IOException e1) {
        throw new IllegalArgumentException("IOException caught while trying to send error due to invalid host header: " + hostPort,e1);
      }
    }
  return _serverName;
}
}
if (_serverName == null || _port < 0) {
_serverName=BufferUtil.to8859_1_String(hostPort);
_port=0;
}
return _serverName;
}
if (_connection != null) {
_serverName=getLocalName();
_port=getLocalPort();
if (_serverName != null && !StringUtil.ALL_INTERFACES.equals(_serverName)) return _serverName;
}
try {
_serverName=InetAddress.getLocalHost().getHostAddress();
}
 catch (java.net.UnknownHostException e) {
LOG.ignore(e);
}
return _serverName;
}
