{
  if (_baseParameters == null)   _baseParameters=new MultiMap<>();
  if (_paramsExtracted) {
    if (_parameters == null)     _parameters=_baseParameters;
    return;
  }
  _paramsExtracted=true;
  try {
    if (_uri != null && _uri.hasQuery()) {
      if (_queryEncoding == null)       _uri.decodeQueryTo(_baseParameters);
 else {
        try {
          _uri.decodeQueryTo(_baseParameters,_queryEncoding);
        }
 catch (        UnsupportedEncodingException e) {
          if (LOG.isDebugEnabled())           LOG.warn(e);
 else           LOG.warn(e.toString());
        }
      }
    }
    String encoding=getCharacterEncoding();
    String content_type=getContentType();
    if (content_type != null && content_type.length() > 0) {
      content_type=HttpFields.valueParameters(content_type,null);
      if (MimeTypes.Type.FORM_ENCODED.is(content_type) && _inputState == __NONE && (HttpMethod.POST.is(getMethod()) || HttpMethod.PUT.is(getMethod()))) {
        int content_length=getContentLength();
        if (content_length != 0) {
          try {
            int maxFormContentSize=-1;
            int maxFormKeys=-1;
            if (_context != null) {
              maxFormContentSize=_context.getContextHandler().getMaxFormContentSize();
              maxFormKeys=_context.getContextHandler().getMaxFormKeys();
            }
            if (maxFormContentSize < 0) {
              Object obj=_channel.getServer().getAttribute("org.eclipse.jetty.server.Request.maxFormContentSize");
              if (obj == null)               maxFormContentSize=200000;
 else               if (obj instanceof Number) {
                Number size=(Number)obj;
                maxFormContentSize=size.intValue();
              }
 else               if (obj instanceof String) {
                maxFormContentSize=Integer.valueOf((String)obj);
              }
            }
            if (maxFormKeys < 0) {
              Object obj=_channel.getServer().getAttribute("org.eclipse.jetty.server.Request.maxFormKeys");
              if (obj == null)               maxFormKeys=1000;
 else               if (obj instanceof Number) {
                Number keys=(Number)obj;
                maxFormKeys=keys.intValue();
              }
 else               if (obj instanceof String) {
                maxFormKeys=Integer.valueOf((String)obj);
              }
            }
            if (content_length > maxFormContentSize && maxFormContentSize > 0) {
              throw new IllegalStateException("Form too large " + content_length + ">"+ maxFormContentSize);
            }
            InputStream in=getInputStream();
            UrlEncoded.decodeTo(in,_baseParameters,encoding,content_length < 0 ? maxFormContentSize : -1,maxFormKeys);
          }
 catch (          IOException e) {
            if (LOG.isDebugEnabled())             LOG.warn(e);
 else             LOG.warn(e.toString());
          }
        }
      }
    }
    if (_parameters == null)     _parameters=_baseParameters;
 else     if (_parameters != _baseParameters) {
      _parameters.addAllValues(_baseParameters);
    }
    if (content_type != null && content_type.length() > 0 && content_type.startsWith("multipart/form-data") && getAttribute(__MULTIPART_CONFIG_ELEMENT) != null) {
      try {
        getParts();
      }
 catch (      IOException e) {
        if (LOG.isDebugEnabled())         LOG.warn(e);
 else         LOG.warn(e.toString());
      }
catch (      ServletException e) {
        if (LOG.isDebugEnabled())         LOG.warn(e);
 else         LOG.warn(e.toString());
      }
    }
  }
  finally {
    if (_parameters == null)     _parameters=_baseParameters;
  }
}
