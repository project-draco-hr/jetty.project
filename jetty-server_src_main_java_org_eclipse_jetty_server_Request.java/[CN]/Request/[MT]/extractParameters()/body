{
  if (_baseParameters == null)   _baseParameters=new MultiMap(16);
  if (_paramsExtracted) {
    if (_parameters == null)     _parameters=_baseParameters;
    return;
  }
  _paramsExtracted=true;
  try {
    if (_uri != null && _uri.hasQuery()) {
      if (_queryEncoding == null)       _uri.decodeQueryTo(_baseParameters);
 else {
        try {
          _uri.decodeQueryTo(_baseParameters,_queryEncoding);
        }
 catch (        UnsupportedEncodingException e) {
          if (LOG.isDebugEnabled())           LOG.warn(e);
 else           LOG.warn(e.toString());
        }
      }
    }
    String encoding=getCharacterEncoding();
    String content_type=getContentType();
    if (content_type != null && content_type.length() > 0) {
      content_type=HttpFields.valueParameters(content_type,null);
      if (MimeTypes.FORM_ENCODED.equalsIgnoreCase(content_type) && _inputState == __NONE && (HttpMethod.POST.equals(getMethod()) || HttpMethod.PUT.equals(getMethod()))) {
        int content_length=getContentLength();
        if (content_length != 0) {
          try {
            int maxFormContentSize=-1;
            int maxFormKeys=-1;
            if (_context != null) {
              maxFormContentSize=_context.getContextHandler().getMaxFormContentSize();
              maxFormKeys=_context.getContextHandler().getMaxFormKeys();
            }
 else {
              Number size=(Number)_connection.getConnector().getServer().getAttribute("org.eclipse.jetty.server.Request.maxFormContentSize");
              maxFormContentSize=size == null ? 200000 : size.intValue();
              Number keys=(Number)_connection.getConnector().getServer().getAttribute("org.eclipse.jetty.server.Request.maxFormKeys");
              maxFormKeys=keys == null ? 1000 : keys.intValue();
            }
            if (content_length > maxFormContentSize && maxFormContentSize > 0) {
              throw new IllegalStateException("Form too large" + content_length + ">"+ maxFormContentSize);
            }
            InputStream in=getInputStream();
            UrlEncoded.decodeTo(in,_baseParameters,encoding,content_length < 0 ? maxFormContentSize : -1,maxFormKeys);
          }
 catch (          IOException e) {
            if (LOG.isDebugEnabled())             LOG.warn(e);
 else             LOG.warn(e.toString());
          }
        }
      }
    }
    if (_parameters == null)     _parameters=_baseParameters;
 else     if (_parameters != _baseParameters) {
      Iterator iter=_baseParameters.entrySet().iterator();
      while (iter.hasNext()) {
        Map.Entry entry=(Map.Entry)iter.next();
        String name=(String)entry.getKey();
        Object values=entry.getValue();
        for (int i=0; i < LazyList.size(values); i++)         _parameters.add(name,LazyList.get(values,i));
      }
    }
  }
  finally {
    if (_parameters == null)     _parameters=_baseParameters;
  }
}
