{
  if (getContentType() == null || !getContentType().startsWith("multipart/form-data"))   throw new ServletException("Content-Type != multipart/form-data");
  if (_multiPartInputStream == null)   _multiPartInputStream=(MultiPartInputStreamParser)getAttribute(__MULTIPART_INPUT_STREAM);
  if (_multiPartInputStream == null) {
    MultipartConfigElement config=(MultipartConfigElement)getAttribute(__MULTIPART_CONFIG_ELEMENT);
    if (config == null)     throw new IllegalStateException("No multipart config for servlet");
    _multiPartInputStream=new MultiPartInputStreamParser(getInputStream(),getContentType(),config,(_context != null ? (File)_context.getAttribute("javax.servlet.context.tempdir") : null));
    setAttribute(__MULTIPART_INPUT_STREAM,_multiPartInputStream);
    setAttribute(__MULTIPART_CONTEXT,_context);
    Collection<Part> parts=_multiPartInputStream.getParts();
    for (    Part p : parts) {
      MultiPartInputStreamParser.MultiPart mp=(MultiPartInputStreamParser.MultiPart)p;
      if (mp.getContentDispositionFilename() == null) {
        String charset=null;
        if (mp.getContentType() != null)         charset=MimeTypes.getCharsetFromContentType(mp.getContentType());
        ByteArrayOutputStream os=null;
        InputStream is=mp.getInputStream();
        try {
          os=new ByteArrayOutputStream();
          IO.copy(is,os);
          String content=new String(os.toByteArray(),charset == null ? StringUtil.__UTF8 : charset);
          getParameter("");
          getParameters().add(mp.getName(),content);
        }
  finally {
          IO.close(os);
          IO.close(is);
        }
      }
    }
  }
  return _multiPartInputStream.getParts();
}
