{
  ReadState oldReadState=readState;
switch (oldReadState) {
case HANDSHAKING:
{
      if (newReadState != ReadState.HANDSHAKEN)       throw wrongReadStateUpdate(oldReadState,newReadState);
      readState=newReadState;
      break;
    }
case HANDSHAKEN:
{
switch (newReadState) {
case IDLE:
{
        if (BufferUtil.hasContent(netInput))         throw wrongReadStateUpdate(oldReadState,newReadState);
        readState=newReadState;
        break;
      }
case UNDERFLOW:
{
      if (!BufferUtil.hasContent(netInput))       throw wrongReadStateUpdate(oldReadState,newReadState);
      readState=newReadState;
      break;
    }
case DECRYPTED:
{
    if (!BufferUtil.hasContent(appInput))     throw wrongReadStateUpdate(oldReadState,newReadState);
    readState=newReadState;
    break;
  }
case CLOSED:
{
  if (BufferUtil.hasContent(appInput))   throw wrongReadStateUpdate(oldReadState,newReadState);
  readState=newReadState;
  break;
}
default :
{
throw wrongReadStateUpdate(oldReadState,newReadState);
}
}
}
case IDLE:
{
switch (newReadState) {
case UNDERFLOW:
{
if (!BufferUtil.hasContent(netInput)) throw wrongReadStateUpdate(oldReadState,newReadState);
readState=newReadState;
break;
}
case DECRYPTED:
{
if (!BufferUtil.hasContent(appInput)) throw wrongReadStateUpdate(oldReadState,newReadState);
readState=newReadState;
break;
}
case CLOSED:
{
if (BufferUtil.hasContent(appInput)) throw wrongReadStateUpdate(oldReadState,newReadState);
readState=newReadState;
break;
}
default :
{
throw wrongReadStateUpdate(oldReadState,newReadState);
}
}
}
case DECRYPTED:
{
switch (newReadState) {
case IDLE:
{
if (BufferUtil.hasContent(netInput)) throw wrongReadStateUpdate(oldReadState,newReadState);
readState=newReadState;
break;
}
case UNDERFLOW:
{
if (!BufferUtil.hasContent(netInput)) throw wrongReadStateUpdate(oldReadState,newReadState);
readState=newReadState;
break;
}
case CLOSED:
{
if (BufferUtil.hasContent(appInput)) throw wrongReadStateUpdate(oldReadState,newReadState);
readState=newReadState;
break;
}
default :
{
throw wrongReadStateUpdate(oldReadState,newReadState);
}
}
}
default :
{
throw wrongReadStateUpdate(oldReadState,newReadState);
}
}
}
