{
  while (true) {
    updateReadState(sslMachine.decrypt(netInput,appInput));
switch (readState) {
case UNDERFLOW:
{
        return true;
      }
case HANDSHAKEN:
{
      getAppEndPoint().getAsyncConnection().onOpen();
      if (!netInput.hasRemaining()) {
        updateReadState(ReadState.IDLE);
        return true;
      }
      break;
    }
case DECRYPTED:
{
    appReader.completed(readContext);
    return false;
  }
case CLOSED:
{
  appReader.completed(readContext);
  return false;
}
default :
{
throw new IllegalStateException("Unexpected read state " + readState);
}
}
}
}
