{
switch (writeState) {
case HANDSHAKING:
{
      if (netOutput != null)       throw new IllegalStateException();
      netOutput=byteBufferPool.acquire(sslEngine.getSession().getPacketBufferSize(),direct);
      break;
    }
default :
{
    throw new IllegalStateException("Unexpected write state " + readState);
  }
}
ByteBuffer appOutput=appOutputs[0];
if (!appOutput.hasRemaining() && appOutputs.length > 1) {
for (int i=1; i < appOutputs.length; ++i) {
  if (appOutputs[i].hasRemaining()) {
    appOutput=appOutputs[i];
    break;
  }
}
}
int remaining=appOutput.remaining();
sslMachine.encrypt(appOutput,netOutput);
int result=remaining - appOutput.remaining();
getEndPoint().write(null,new Callback<Object>(){
@Override public void completed(Object context){
  completeWrite();
}
@Override public void failed(Object context,Throwable x){
}
}
,netOutput);
return result;
}
