{
  Map<String,RoleInfo> mappings=(Map<String,RoleInfo>)_constraintMap.get(mapping.getPathSpec());
  if (mappings == null) {
    mappings=new StringMap();
    _constraintMap.put(mapping.getPathSpec(),mappings);
  }
  RoleInfo allMethodsRoleInfo=mappings.get(null);
  if (allMethodsRoleInfo != null && allMethodsRoleInfo.isForbidden())   return;
  if (mapping.getMethodOmissions() != null && mapping.getMethodOmissions().length > 0) {
    processConstraintMappingWithMethodOmissions(mapping,mappings);
    return;
  }
  String httpMethod=mapping.getMethod();
  RoleInfo roleInfo=mappings.get(httpMethod);
  if (roleInfo == null) {
    roleInfo=new RoleInfo();
    mappings.put(httpMethod,roleInfo);
    if (allMethodsRoleInfo != null) {
      roleInfo.combine(allMethodsRoleInfo);
    }
  }
  if (roleInfo.isForbidden())   return;
  configureRoleInfo(roleInfo,mapping);
  if (roleInfo.isForbidden()) {
    if (httpMethod == null) {
      mappings.clear();
      mappings.put(null,roleInfo);
    }
  }
 else {
    if (httpMethod == null) {
      for (      Map.Entry<String,RoleInfo> entry : mappings.entrySet()) {
        if (entry.getKey() != null) {
          RoleInfo specific=entry.getValue();
          specific.combine(roleInfo);
        }
      }
    }
  }
}
