{
  Fields headers=new Fields();
  headers.add("broken","header");
  SynStreamFrame frame=new SynStreamFrame(SPDY.V2,SynInfo.FLAG_CLOSE,1,0,(byte)0,(short)0,headers);
  Generator generator=new Generator(new MappedByteBufferPool(),new NoCompressionCompressionFactory.NoCompressionCompressor());
  ByteBuffer bufferWithBrokenHeaderNameLength=generator.control(frame);
  bufferWithBrokenHeaderNameLength.put(21,(byte)0);
  ByteBuffer bufferWithValidSynStreamFrame=generator.control(frame);
  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
  outputStream.write(BufferUtil.toArray(bufferWithBrokenHeaderNameLength));
  outputStream.write(BufferUtil.toArray(bufferWithValidSynStreamFrame));
  byte concatenatedFramesByteArray[]=outputStream.toByteArray();
  ByteBuffer concatenatedBuffer=BufferUtil.toBuffer(concatenatedFramesByteArray);
  final CountDownLatch latch=new CountDownLatch(2);
  Parser parser=new Parser(new NoCompressionCompressionFactory.NoCompressionDecompressor());
  parser.addListener(new Parser.Listener.Adapter(){
    @Override public void onControlFrame(    ControlFrame frame){
      latch.countDown();
    }
    @Override public void onStreamException(    StreamException x){
      latch.countDown();
    }
  }
);
  parser.parse(concatenatedBuffer);
  assertThat(latch.await(5,TimeUnit.SECONDS),is(true));
}
