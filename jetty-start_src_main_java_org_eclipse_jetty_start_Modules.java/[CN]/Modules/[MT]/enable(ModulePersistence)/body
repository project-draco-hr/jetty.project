{
  List<String> source=new ArrayList<>();
  source.add("<module-persistence>");
  if (persistence.getEnabled().size() > 0) {
    List<String> enabled=new ArrayList<>();
    for (    Module module : modules.values()) {
      if (module.isEnabled()) {
        if (!persistence.getEnabled().contains(module.getName())) {
          enabled.add(module.getName());
        }
      }
    }
    if (enabled.size() > 0) {
      StringBuilder err=new StringBuilder();
      err.append("WARNING: Module Persistence Mode is being used.\n");
      err.append("The following ");
      if (enabled.size() > 1) {
        err.append(enabled.size()).append("modules");
      }
 else {
        err.append("module");
      }
      err.append(", defined outside of the module persistence mechanism, ");
      if (enabled.size() > 1) {
        err.append("are ");
      }
 else {
        err.append("is ");
      }
      err.append("being ignored.");
      System.err.println(err);
      for (int i=0; i < enabled.size(); i++) {
        String name=enabled.get(i);
        Module module=modules.get(name);
        System.err.printf("  [%d] \"%s\" - defined in [%s]%n",i + 1,name,Main.join(module.getSources(),", "));
        module.setEnabled(false);
        module.clearSources();
      }
    }
    for (    String module : persistence.getEnabled()) {
      enable(module,source);
    }
  }
}
