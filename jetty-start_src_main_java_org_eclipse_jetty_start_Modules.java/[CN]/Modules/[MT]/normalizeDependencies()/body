{
  Set<String> expandedModules=new HashSet<>();
  boolean done=false;
  while (!done) {
    done=true;
    Set<String> missingParents=new HashSet<>();
    for (    Module m : getNodes()) {
      for (      String parent : m.getParentNames()) {
        String expanded=args.getProperties().expand(parent);
        if (containsNode(expanded) || expandedModules.contains(parent)) {
          continue;
        }
        done=false;
        StartLog.debug("Missing parent module %s == %s for %s",parent,expanded,m);
        missingParents.add(parent);
      }
    }
    for (    String missingParent : missingParents) {
      String expanded=args.getProperties().expand(missingParent);
      Path file=baseHome.getPath("modules/" + expanded + ".mod");
      if (FS.canReadFile(file)) {
        Module module=registerModule(file);
        updateParentReferencesTo(module);
        if (!expanded.equals(missingParent)) {
          expandedModules.add(missingParent);
        }
      }
 else {
        if (Props.hasPropertyKey(expanded)) {
          StartLog.debug("Module property not expandable (yet) [%s]",expanded);
          expandedModules.add(missingParent);
        }
 else {
          StartLog.debug("Missing module definition: %s expanded to %s",missingParent,expanded);
        }
      }
    }
  }
}
