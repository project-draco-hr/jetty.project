{
  List<Module> ordered=new ArrayList<>();
  ordered.addAll(getNodes());
  Collections.sort(ordered,new Module.NameComparator());
  List<Module> active=getSelected();
  for (  Module module : ordered) {
    boolean activated=active.contains(module);
    boolean selected=module.isSelected();
    boolean transitive=selected && module.matches(OnlyTransitivePredicate.INSTANCE);
    String status="[ ]";
    if (transitive) {
      status="[t]";
    }
 else     if (selected) {
      status="[x]";
    }
    System.out.printf("%n %s Module: %s%n",status,module.getName());
    if (!module.getName().equals(module.getFilesystemRef())) {
      System.out.printf("        Ref: %s%n",module.getFilesystemRef());
    }
    for (    String parent : module.getParentNames()) {
      System.out.printf("     Depend: %s%n",parent);
    }
    for (    String lib : module.getLibs()) {
      System.out.printf("        LIB: %s%n",lib);
    }
    for (    String xml : module.getXmls()) {
      System.out.printf("        XML: %s%n",xml);
    }
    if (StartLog.isDebugEnabled()) {
      System.out.printf("      depth: %d%n",module.getDepth());
    }
    if (activated) {
      for (      Selection selection : module.getSelections()) {
        System.out.printf("    Enabled: <via> %s%n",selection);
      }
    }
 else {
      System.out.printf("    Enabled: <not enabled in this configuration>%n");
    }
  }
}
