{
  File file=new File(__dir,"test.txt");
  assertFalse(file.exists());
  file.createNewFile();
  assertTrue(file.exists());
  File file0=new File(__dir,"test.txt\0");
  if (!file0.exists())   return;
  assertTrue(file0.exists());
  Resource dir=Resource.newResource(__dir);
  Resource resource=Resource.newResource(file);
  assertTrue(resource.exists());
  assertNull(resource.getAlias());
  resource=Resource.newResource(file.getAbsoluteFile());
  assertTrue(resource.exists());
  assertNull(resource.getAlias());
  resource=Resource.newResource(file.toURI());
  assertTrue(resource.exists());
  assertNull(resource.getAlias());
  resource=Resource.newResource(file.toURI().toString());
  assertTrue(resource.exists());
  assertNull(resource.getAlias());
  resource=dir.addPath("test.txt");
  assertTrue(resource.exists());
  assertNull(resource.getAlias());
  resource=Resource.newResource(file0);
  assertTrue(resource.exists());
  assertNotNull(resource.getAlias());
  resource=Resource.newResource(file0.getAbsoluteFile());
  assertTrue(resource.exists());
  assertNotNull(resource.getAlias());
  resource=Resource.newResource(file0.toURI());
  assertTrue(resource.exists());
  assertNotNull(resource.getAlias());
  resource=Resource.newResource(file0.toURI().toString());
  assertTrue(resource.exists());
  assertNotNull(resource.getAlias());
  try {
    resource=dir.addPath("test.txt\0");
    assertTrue(resource.exists());
    assertNotNull(resource.getAlias());
  }
 catch (  MalformedURLException e) {
    assertTrue(true);
  }
}
