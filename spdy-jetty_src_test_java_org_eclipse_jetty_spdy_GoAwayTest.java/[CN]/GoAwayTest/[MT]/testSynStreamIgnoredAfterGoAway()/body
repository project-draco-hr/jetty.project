{
  final CountDownLatch latch=new CountDownLatch(1);
  ServerSessionFrameListener serverSessionFrameListener=new ServerSessionFrameListener.Adapter(){
    private final AtomicInteger syns=new AtomicInteger();
    @Override public Stream.FrameListener onSyn(    Stream stream,    SynInfo synInfo){
      int synCount=syns.incrementAndGet();
      if (synCount == 1) {
        stream.reply(new ReplyInfo(true));
        stream.getSession().goAway();
      }
 else {
        latch.countDown();
      }
      return null;
    }
  }
;
  final AtomicReference<Session> ref=new AtomicReference<>();
  Session.FrameListener clientSessionFrameListener=new Session.FrameListener.Adapter(){
    @Override public void onGoAway(    Session session,    GoAwayInfo goAwayInfo){
      ref.get().syn(new SynInfo(true),null);
    }
  }
;
  Session session=startClient(startServer(serverSessionFrameListener),clientSessionFrameListener);
  ref.set(session);
  session.syn(new SynInfo(true),null);
  Assert.assertFalse(latch.await(1,TimeUnit.SECONDS));
}
