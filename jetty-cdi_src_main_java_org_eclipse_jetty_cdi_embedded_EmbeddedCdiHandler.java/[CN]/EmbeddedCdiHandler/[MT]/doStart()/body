{
  Resource baseResource=getBaseResource();
  if (baseResource == null) {
    throw new NullPointerException("baseResource must be set (to so it can find the beans.xml)");
  }
  boolean foundBeansXml=false;
  for (  String beansXmlPath : REQUIRED_BEANS_XML_PATHS) {
    Resource res=baseResource.addPath(beansXmlPath);
    if (res == null) {
      continue;
    }
    if (res.exists()) {
      foundBeansXml=true;
    }
    if (res.isDirectory()) {
      throw new IOException("Directory conflicts with expected file: " + res.getURI().toASCIIString());
    }
  }
  if (!foundBeansXml) {
    StringBuilder err=new StringBuilder();
    err.append("Unable to find required beans.xml from the baseResource: ");
    err.append(baseResource.getURI().toASCIIString()).append(System.lineSeparator());
    err.append("Searched for: ");
    for (    String beansXmlPath : REQUIRED_BEANS_XML_PATHS) {
      err.append(System.lineSeparator());
      err.append("  ").append(beansXmlPath);
    }
    LOG.warn("ERROR: {}",err.toString());
    throw new IOException(err.toString());
  }
  JettyWeldInitializer.initContext(this);
  ServletContext ctx=getServletContext();
  ClassLoader orig=Thread.currentThread().getContextClassLoader();
  try {
    Thread.currentThread().setContextClassLoader(ctx.getClassLoader());
    EnhancedListener weldListener=new EnhancedListener();
    Set<Class<?>> classes=Collections.emptySet();
    weldListener.onStartup(classes,ctx);
    ctx.addListener(weldListener);
  }
  finally {
    Thread.currentThread().setContextClassLoader(orig);
  }
  super.doStart();
}
