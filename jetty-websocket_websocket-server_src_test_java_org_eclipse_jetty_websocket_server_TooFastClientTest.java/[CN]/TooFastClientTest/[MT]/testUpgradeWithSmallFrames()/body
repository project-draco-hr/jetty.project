{
  BlockheadClient client=new BlockheadClient(server.getServerUri());
  try {
    client.connect();
    ByteBuffer initialPacket=ByteBuffer.allocate(4096);
    BufferUtil.clearToFill(initialPacket);
    StringBuilder upgradeRequest=client.generateUpgradeRequest();
    ByteBuffer upgradeBuffer=BufferUtil.toBuffer(upgradeRequest.toString(),StandardCharsets.UTF_8);
    initialPacket.put(upgradeBuffer);
    Generator generator=new Generator(WebSocketPolicy.newClientPolicy(),new LeakTrackingBufferPool("Generator",new MappedByteBufferPool()));
    String msg1="Echo 1";
    String msg2="This is also an echooooo!";
    TextFrame frame1=new TextFrame().setPayload(msg1);
    TextFrame frame2=new TextFrame().setPayload(msg2);
    byte mask[]=new byte[]{0x11,0x22,0x33,0x44};
    frame1.setMask(mask);
    frame2.setMask(mask);
    generator.generateWholeFrame(frame1,initialPacket);
    generator.generateWholeFrame(frame2,initialPacket);
    BufferUtil.flipToFlush(initialPacket,0);
    client.writeRaw(initialPacket);
    client.expectUpgradeResponse();
    EventQueue<WebSocketFrame> frames=client.readFrames(2,1,TimeUnit.SECONDS);
    WebSocketFrame tf=frames.poll();
    Assert.assertThat("Text Frame/msg1",tf.getPayloadAsUTF8(),is(msg1));
    tf=frames.poll();
    Assert.assertThat("Text Frame/msg2",tf.getPayloadAsUTF8(),is(msg2));
  }
  finally {
    client.close();
  }
}
