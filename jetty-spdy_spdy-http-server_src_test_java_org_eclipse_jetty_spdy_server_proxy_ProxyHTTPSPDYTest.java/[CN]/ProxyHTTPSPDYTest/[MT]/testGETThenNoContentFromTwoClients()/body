{
  InetSocketAddress proxyAddress=startProxy(startServer(new ServerSessionFrameListener.Adapter(){
    @Override public StreamFrameListener onSyn(    Stream stream,    SynInfo synInfo){
      Assert.assertTrue(synInfo.isClose());
      Fields requestHeaders=synInfo.getHeaders();
      Assert.assertNotNull(requestHeaders.get("via"));
      Fields responseHeaders=new Fields();
      responseHeaders.put(HTTPSPDYHeader.VERSION.name(version),"HTTP/1.1");
      responseHeaders.put(HTTPSPDYHeader.STATUS.name(version),"200 OK");
      ReplyInfo replyInfo=new ReplyInfo(responseHeaders,true);
      stream.reply(replyInfo);
      return null;
    }
  }
));
  Socket client1=new Socket();
  client1.connect(proxyAddress);
  OutputStream output1=client1.getOutputStream();
  String request="" + "GET / HTTP/1.1\r\n" + "Host: localhost:" + proxyAddress.getPort() + "\r\n"+ "\r\n";
  output1.write(request.getBytes("UTF-8"));
  output1.flush();
  InputStream input1=client1.getInputStream();
  BufferedReader reader1=new BufferedReader(new InputStreamReader(input1,"UTF-8"));
  String line=reader1.readLine();
  Assert.assertTrue(line.contains(" 200"));
  while (line.length() > 0)   line=reader1.readLine();
  Assert.assertFalse(reader1.ready());
  Socket client2=new Socket();
  client2.connect(proxyAddress);
  OutputStream output2=client2.getOutputStream();
  output2.write(request.getBytes("UTF-8"));
  output2.flush();
  InputStream input2=client2.getInputStream();
  BufferedReader reader2=new BufferedReader(new InputStreamReader(input2,"UTF-8"));
  line=reader2.readLine();
  Assert.assertTrue(line.contains(" 200"));
  while (line.length() > 0)   line=reader2.readLine();
  Assert.assertFalse(reader2.ready());
  client1.close();
  client2.close();
}
