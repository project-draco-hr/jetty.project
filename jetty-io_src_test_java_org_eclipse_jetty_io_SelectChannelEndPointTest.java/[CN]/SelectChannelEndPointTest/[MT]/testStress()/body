{
  Socket client=newClient();
  client.setSoTimeout(30000);
  SocketChannel server=_connector.accept();
  server.configureBlocking(false);
  _manager.register(server);
  int writes=10000;
  final byte[] bytes="HelloWorld-".getBytes(StringUtil.__UTF8_CHARSET);
  byte[] count="0\n".getBytes(StringUtil.__UTF8_CHARSET);
  final CountDownLatch latch=new CountDownLatch(writes);
  final InputStream in=new BufferedInputStream(client.getInputStream());
  final long start=System.currentTimeMillis();
  client.getOutputStream().write(bytes);
  client.getOutputStream().write(count);
  client.getOutputStream().flush();
  new Thread(){
    public void run(){
      try {
        while (latch.getCount() > 0) {
          for (          byte b0 : bytes) {
            int b=in.read();
            assertTrue(b > 0);
            assertEquals(0xff & b0,b);
          }
          int b=in.read();
          while (b > 0 && b != '\n')           b=in.read();
          latch.countDown();
        }
      }
 catch (      Throwable e) {
        System.err.println("latch=" + latch.getCount());
        System.err.println("time=" + (System.currentTimeMillis() - start));
        e.printStackTrace();
      }
    }
  }
.start();
  PrintStream print=new PrintStream(client.getOutputStream());
  for (int i=1; i < writes; i++) {
    print.write(bytes);
    print.print(i);
    print.print('\n');
    if (i % 100 == 0)     print.flush();
    Thread.yield();
  }
  client.getOutputStream().flush();
  assertTrue(latch.await(100,TimeUnit.SECONDS));
}
