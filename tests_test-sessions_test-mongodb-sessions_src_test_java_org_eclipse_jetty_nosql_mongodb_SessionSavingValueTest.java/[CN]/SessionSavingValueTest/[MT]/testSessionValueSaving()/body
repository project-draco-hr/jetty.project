{
  String contextPath="";
  String servletMapping="/server";
  int maxInactivePeriod=10000;
  int scavengePeriod=20000;
  AbstractTestServer server1=createServer(0,maxInactivePeriod,scavengePeriod);
  server1.addContext(contextPath).addServlet(TestServlet.class,servletMapping);
  server1.start();
  int port1=server1.getPort();
  try {
    HttpClient client=new HttpClient();
    client.start();
    try {
      String[] sessionTestValue=new String[]{"0","null"};
      Request request=client.newRequest("http://localhost:" + port1 + contextPath+ servletMapping+ "?action=init");
      Future<ContentResponse> future=request.send();
      ContentResponse response=future.get();
      assertEquals(HttpServletResponse.SC_OK,response.getStatus());
      String[] sessionTestResponse=response.getContentAsString().split("/");
      assertTrue(Long.parseLong(sessionTestValue[0]) < Long.parseLong(sessionTestResponse[0]));
      sessionTestValue=sessionTestResponse;
      String sessionCookie=response.getHeaders().getStringField("Set-Cookie");
      assertTrue(sessionCookie != null);
      sessionCookie=sessionCookie.replaceFirst("(\\W)(P|p)ath=","$1\\$Path=");
      int requestInterval=500;
      for (int i=0; i < 10; ++i) {
        Request request2=client.newRequest("http://localhost:" + port1 + contextPath+ servletMapping);
        request2.header("Cookie",sessionCookie);
        Future<ContentResponse> future2=request2.send();
        ContentResponse response2=future2.get();
        assertEquals(HttpServletResponse.SC_OK,response2.getStatus());
        sessionTestResponse=response2.getContentAsString().split("/");
        assertTrue(Long.parseLong(sessionTestValue[0]) < Long.parseLong(sessionTestResponse[0]));
        assertTrue(Long.parseLong(sessionTestValue[1]) < Long.parseLong(sessionTestResponse[1]));
        sessionTestValue=sessionTestResponse;
        String setCookie=response2.getHeaders().getStringField("Set-Cookie");
        if (setCookie != null)         sessionCookie=setCookie.replaceFirst("(\\W)(P|p)ath=","$1\\$Path=");
        Thread.sleep(requestInterval);
      }
    }
  finally {
      client.stop();
    }
  }
  finally {
    server1.stop();
  }
}
