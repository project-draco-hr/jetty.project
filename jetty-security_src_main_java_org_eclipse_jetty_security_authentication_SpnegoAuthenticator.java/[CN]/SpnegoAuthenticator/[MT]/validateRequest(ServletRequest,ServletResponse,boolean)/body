{
  HttpServletRequest req=(HttpServletRequest)request;
  HttpServletResponse res=(HttpServletResponse)response;
  String header=req.getHeader(HttpHeader.AUTHORIZATION.asString());
  if (!mandatory) {
    return new DeferredAuthentication(this);
  }
  if (header == null) {
    try {
      if (DeferredAuthentication.isDeferred(res)) {
        return Authentication.UNAUTHENTICATED;
      }
      LOG.debug("SpengoAuthenticator: sending challenge");
      res.setHeader(HttpHeader.WWW_AUTHENTICATE.asString(),HttpHeader.NEGOTIATE.asString());
      res.sendError(HttpServletResponse.SC_UNAUTHORIZED);
      return Authentication.SEND_CONTINUE;
    }
 catch (    IOException ioe) {
      throw new ServerAuthException(ioe);
    }
  }
 else   if (header != null && header.startsWith(HttpHeader.NEGOTIATE.asString())) {
    String spnegoToken=header.substring(10);
    UserIdentity user=_loginService.login(null,spnegoToken);
    if (user != null) {
      return new UserAuthentication(getAuthMethod(),user);
    }
  }
  return Authentication.UNAUTHENTICATED;
}
