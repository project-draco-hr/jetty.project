{
  if (!scheme.equals(request.getScheme()))   throw new IllegalArgumentException("Invalid request scheme " + request.getScheme() + " for destination "+ this);
  if (!getHost().equals(request.getHost()))   throw new IllegalArgumentException("Invalid request host " + request.getHost() + " for destination "+ this);
  int port=request.getPort();
  if (port >= 0 && getPort() != port)   throw new IllegalArgumentException("Invalid request port " + port + " for destination "+ this);
  HttpConversation conversation=client.getConversation(request.getConversationID(),true);
  HttpExchange exchange=new HttpExchange(conversation,this,request,listeners);
  if (client.isRunning()) {
    if (exchanges.offer(exchange)) {
      if (!client.isRunning() && exchanges.remove(exchange)) {
        throw new RejectedExecutionException(client + " is stopping");
      }
 else {
        LOG.debug("Queued {}",request);
        requestNotifier.notifyQueued(request);
        Connection connection=acquire();
        if (connection != null)         process(connection,false);
      }
    }
 else {
      LOG.debug("Max queued exceeded {}",request);
      abort(exchange,new RejectedExecutionException("Max requests per destination " + client.getMaxRequestsQueuedPerDestination() + " exceeded for "+ this));
    }
  }
 else {
    throw new RejectedExecutionException(client + " is stopped");
  }
}
