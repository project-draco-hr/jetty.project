{
  HttpConnection connection=null;
  while ((connection == null) && (connection=getIdleConnection()) == null && timeout > 0) {
    int totalConnections=0;
    boolean starting=false;
synchronized (this) {
      totalConnections=_connections.size() + _pendingConnections;
      if (totalConnections < _maxConnections) {
        _newConnection++;
        startNewConnection();
        starting=true;
      }
    }
    if (!starting) {
      try {
        Thread.currentThread();
        Thread.sleep(200);
        timeout-=200;
      }
 catch (      InterruptedException e) {
        Log.ignore(e);
      }
    }
 else {
      try {
        Object o=_newQueue.take();
        if (o instanceof HttpConnection) {
          connection=(HttpConnection)o;
        }
 else         throw (IOException)o;
      }
 catch (      InterruptedException e) {
        Log.ignore(e);
      }
    }
  }
  return connection;
}
