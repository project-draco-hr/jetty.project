{
  if (connection.isReserved())   connection.setReserved(false);
  if (close) {
    try {
      connection.close();
    }
 catch (    IOException e) {
      LOG.ignore(e);
    }
  }
  if (!_client.isStarted())   return;
  if (!close && connection.getEndPoint().isOpen()) {
synchronized (this) {
      if (_exchanges.size() == 0) {
        connection.setIdleTimeout();
        _idleConnections.add(connection);
      }
 else {
        HttpExchange ex=_exchanges.remove(0);
        send(connection,ex);
      }
      this.notifyAll();
    }
  }
 else {
    boolean startConnection=false;
synchronized (this) {
      _connections.remove(connection);
      if (!_exchanges.isEmpty())       startConnection=true;
    }
    if (startConnection)     startNewConnection();
  }
}
