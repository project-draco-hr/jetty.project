{
  String packet="123401070202000f77696474683d20485454502f312e300000122f636f6e74726f6c2f70726f647563742f2200000e3230382e32372e3230332e31323800ffff000c7777772e756c74612e636f6d000050000005a006000a6b6565702d616c69766500a00b000c7777772e756c74612e636f6d00a00e002b4d6f7a696c6c612f342e302028636f6d70617469626c653b20426f726465724d616e6167657220332e302900a0010043696d6167652f6769662c20696d6167652f782d786269746d61702c20696d6167652f6a7065672c20696d6167652f706a7065672c20696d6167652f706d672c202a2f2a00a008000130000600067570726f64310008000a4145533235362d53484100ff";
  byte[] src=TypeUtil.fromHexString(packet);
  ByteArrayBuffer buffer=new ByteArrayBuffer(Ajp13Packet.MAX_PACKET_SIZE);
  SimpleBuffers buffers=new SimpleBuffers(buffer,null);
  EndPoint endp=new ByteArrayEndPoint(src,Ajp13Packet.MAX_PACKET_SIZE);
  Ajp13Parser parser=new Ajp13Parser(buffers,endp);
  parser.setEventHandler(new EH());
  parser.setGenerator(new Ajp13Generator(buffers,endp));
  parser.parseAvailable();
  assertTrue(true);
}
