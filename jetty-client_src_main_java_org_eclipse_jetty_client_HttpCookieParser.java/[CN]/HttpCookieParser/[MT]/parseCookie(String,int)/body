{
  String[] cookieParts=cookieString.split(";");
  String nameValue=cookieParts[0];
  int equal=nameValue.indexOf('=');
  if (equal < 1)   return null;
  String name=nameValue.substring(0,equal).trim();
  String value=nameValue.substring(equal + 1);
  String domain=null;
  String path="/";
  long maxAge=-1;
  boolean httpOnly=false;
  boolean secure=false;
  String comment=null;
  for (int i=1; i < cookieParts.length; ++i) {
    try {
      String[] attributeParts=cookieParts[i].split("=",2);
      String attributeName=attributeParts[0].trim().toLowerCase();
      String attributeValue=attributeParts.length < 2 ? "" : attributeParts[1].trim();
switch (attributeName) {
case "domain":
{
          domain=attributeValue;
          break;
        }
case "path":
{
        path=attributeValue;
        break;
      }
case "max-age":
{
      maxAge=Long.parseLong(attributeValue);
      break;
    }
case "expires":
{
    maxAge=parseDate(attributeValue);
    break;
  }
case "secure":
{
  secure=true;
  break;
}
case "httponly":
{
httpOnly=true;
}
case "comment":
{
comment=attributeValue;
break;
}
case "version":
{
version=Integer.parseInt(attributeValue);
break;
}
default :
{
break;
}
}
}
 catch (NumberFormatException x) {
}
}
return new HttpCookie(name,value,domain,path,maxAge,httpOnly,secure,comment,version);
}
