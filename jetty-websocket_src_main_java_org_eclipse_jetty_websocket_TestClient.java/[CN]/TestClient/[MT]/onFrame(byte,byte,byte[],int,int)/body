{
  try {
    if (_connection.isClose(opcode))     return false;
    __framesReceived.incrementAndGet();
    _frames++;
    _messageBytes+=length;
    if (_opcode == -1)     _opcode=opcode;
    if (_connection.isControl(opcode) || _connection.isMessageComplete(flags)) {
      int recv=__messagesReceived.incrementAndGet();
      Long start=_starts.poll();
      if (start != null) {
        long duration=System.nanoTime() - start.longValue();
        long max=__maxDuration.get();
        while (duration > max && !__maxDuration.compareAndSet(max,duration))         max=__maxDuration.get();
        long min=__minDuration.get();
        while (duration < min && !__minDuration.compareAndSet(min,duration))         min=__minDuration.get();
        __totalTime.addAndGet(duration);
        if (!__quiet)         System.out.printf("%d bytes from %s: frames=%d req=%d time=%.1fms opcode=0x%s\n",_messageBytes,_host,_frames,recv,((double)duration / 1000000.0),TypeUtil.toHexString(_opcode));
      }
      _frames=0;
      _messageBytes=0;
      _opcode=-1;
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  return false;
}
