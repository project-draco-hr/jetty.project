{
  try {
    _start=System.currentTimeMillis();
    for (int i=0; i < count && !_socket.isClosed(); i++) {
      if (_socket.isClosed())       break;
      byte data[]=null;
      if (opcode == WebSocketConnectionD06.OP_TEXT) {
        StringBuilder b=new StringBuilder();
        while (b.length() < _size)         b.append('A' + __random.nextInt(26));
        data=b.toString().getBytes(StringUtil.__UTF8);
      }
 else {
        data=new byte[_size];
        __random.nextBytes(data);
      }
      _starts.add(System.nanoTime());
      int off=0;
      int len=data.length;
      if (fragment > 0 && len > fragment)       len=fragment;
      _messagesSent++;
      while (off < data.length) {
        _framesSent++;
        byte flags=(byte)(off + len == data.length ? 0x8 : 0);
        byte op=(byte)(off == 0 ? opcode : WebSocketConnectionD06.OP_CONTINUATION);
        if (_verbose)         System.err.printf("%s#addFrame %s|%s %s\n",this.getClass().getSimpleName(),TypeUtil.toHexString(flags),TypeUtil.toHexString(op),TypeUtil.toHexString(data,off,len));
        _generator.addFrame(flags,op,data,off,len,_socket.getSoTimeout());
        off+=len;
        if (data.length - off > len)         len=data.length - off;
        if (fragment > 0 && len > fragment)         len=fragment;
      }
      _generator.flush(_socket.getSoTimeout());
      Thread.sleep(1000);
    }
  }
 catch (  Exception x) {
    throw new RuntimeException(x);
  }
}
