{
  List<Option> res=new ArrayList<Option>();
  res.add(CoreOptions.systemProperty(JETTY_SPDY_PORT).value(String.valueOf(DEFAULT_JETTY_SPDY_PORT)));
  String npnBoot=System.getProperty("mortbay-npn-boot");
  if (npnBoot == null) {
    throw new IllegalStateException("Define path to npn boot jar as system property -Dmortbay-npn-boot");
  }
  File checkNpnBoot=new File(npnBoot);
  if (!checkNpnBoot.exists()) {
    throw new IllegalStateException("Unable to find the npn boot jar here: " + npnBoot);
  }
  res.add(CoreOptions.vmOptions("-Xbootclasspath/p:" + npnBoot));
  res.add(mavenBundle().groupId("org.eclipse.jetty.osgi").artifactId("jetty-osgi-npn").versionAsInProject().noStart());
  res.add(mavenBundle().groupId("org.eclipse.jetty.spdy").artifactId("spdy-core").versionAsInProject().noStart());
  res.add(mavenBundle().groupId("org.eclipse.jetty.spdy").artifactId("spdy-server").versionAsInProject().noStart());
  res.add(mavenBundle().groupId("org.eclipse.jetty.spdy").artifactId("spdy-http-server").versionAsInProject().noStart());
  res.add(mavenBundle().groupId("org.eclipse.jetty.spdy").artifactId("spdy-client").versionAsInProject().noStart());
  return res;
}
