{
  final int size=512;
  final AtomicReference<DataInfo> dataInfoRef=new AtomicReference<>();
  final CountDownLatch dataLatch=new CountDownLatch(2);
  final CountDownLatch settingsLatch=new CountDownLatch(1);
  Session session=startClient(startServer(new ServerSessionFrameListener.Adapter(){
    @Override public StreamFrameListener onSyn(    Stream stream,    SynInfo synInfo){
      stream.reply(new ReplyInfo(true));
      return new StreamFrameListener.Adapter(){
        private final AtomicInteger dataFrames=new AtomicInteger();
        @Override public void onData(        Stream stream,        DataInfo dataInfo){
          int dataFrameCount=dataFrames.incrementAndGet();
          if (dataFrameCount == 1) {
            dataInfoRef.set(dataInfo);
            Settings settings=new Settings();
            settings.put(new Settings.Setting(Settings.ID.INITIAL_WINDOW_SIZE,size));
            stream.getSession().settings(new SettingsInfo(settings));
          }
 else           if (dataFrameCount > 1) {
            dataInfo.consume(dataInfo.length());
            dataLatch.countDown();
          }
        }
      }
;
    }
  }
),new SessionFrameListener.Adapter(){
    @Override public void onSettings(    Session session,    SettingsInfo settingsInfo){
      settingsLatch.countDown();
    }
  }
);
  Stream stream=session.syn(new SynInfo(false),null).get(5,TimeUnit.SECONDS);
  stream.data(new BytesDataInfo(new byte[size * 2],false));
  settingsLatch.await(5,TimeUnit.SECONDS);
  stream.data(new BytesDataInfo(new byte[size * 2],true));
  Assert.assertFalse(dataLatch.await(1,TimeUnit.SECONDS));
  DataInfo dataInfo=dataInfoRef.get();
  dataInfo.consume(dataInfo.length());
  Assert.assertTrue(dataLatch.await(5,TimeUnit.SECONDS));
}
