{
synchronized (this) {
    if (_exchange != null) {
      if (_pipeline != null)       throw new IllegalStateException(this + " PIPELINED!!!  _exchange=" + _exchange);
      _pipeline=ex;
      return true;
    }
    _exchange=ex;
    _exchange.associate(this);
    if (!_endp.isOpen()) {
      _exchange.disassociate();
      _exchange=null;
      return false;
    }
    _exchange.setStatus(HttpExchange.STATUS_WAITING_FOR_COMMIT);
    if (_endp.isBlocking()) {
      this.notify();
    }
 else {
      AsyncEndPoint scep=(AsyncEndPoint)_endp;
      scep.asyncDispatch();
    }
    adjustIdleTimeout();
    return true;
  }
}
