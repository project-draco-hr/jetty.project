{
  Debug.enableDebugLogging(Generator.class);
  Debug.enableDebugLogging(TextFrameGenerator.class);
  Debug.enableDebugLogging(Parser.class);
  Debug.enableDebugLogging(TextPayloadParser.class);
  WebSocketPolicy policy=WebSocketPolicy.newServerPolicy();
  policy.setMasker(new RandomMasker());
  StandardByteBufferPool bufferPool=new StandardByteBufferPool();
  Generator gen=new Generator(bufferPool,policy);
  Parser parser=new Parser(policy);
  String message="0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF";
  ByteBuffer out=gen.generate(new TextFrame(message));
  Debug.dumpState(out);
  FrameParseCapture capture=new FrameParseCapture();
  parser.addListener(capture);
  out.flip();
  parser.parse(out);
  capture.assertNoErrors();
  capture.assertHasFrame(TextFrame.class,1);
  TextFrame txt=(TextFrame)capture.getFrames().get(0);
  Assert.assertTrue("Text.isMasked",txt.isMasked());
  Assert.assertThat("Text parsed",txt.getData().toString(),is(message));
}
