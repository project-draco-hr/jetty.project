{
  if (buffer == null)   return "null";
  StringBuilder buf=new StringBuilder();
  buf.append(buffer.getClass().getSimpleName());
  buf.append("@");
  if (buffer.hasArray())   buf.append(Integer.toHexString(((Object)buffer.array()).hashCode()));
 else   buf.append(Integer.toHexString(buf.hashCode()));
  buf.append("[p=");
  buf.append(buffer.position());
  buf.append(",l=");
  buf.append(buffer.limit());
  buf.append(",c=");
  buf.append(buffer.capacity());
  buf.append(",r=");
  buf.append(buffer.remaining());
  buf.append("]={");
  for (int i=0; i < buffer.position(); i++) {
    char c=(char)buffer.get(i);
    if (c >= ' ' && c <= 127)     buf.append(c);
 else     if (c == '\r' || c == '\n')     buf.append('|');
 else     buf.append('\ufffd');
    if (i == 16 && buffer.position() > 32) {
      buf.append("...");
      i=buffer.position() - 16;
    }
  }
  buf.append("<<<");
  for (int i=buffer.position(); i < buffer.limit(); i++) {
    char c=(char)buffer.get(i);
    if (c >= ' ' && c <= 127)     buf.append(c);
 else     if (c == '\r' || c == '\n')     buf.append('|');
 else     buf.append('\ufffd');
    if (i == buffer.position() + 16 && buffer.limit() > buffer.position() + 32) {
      buf.append("...");
      i=buffer.limit() - 16;
    }
  }
  buf.append(">>>");
  int limit=buffer.limit();
  buffer.limit(buffer.capacity());
  for (int i=limit; i < buffer.capacity(); i++) {
    char c=(char)buffer.get(i);
    if (c >= ' ' && c <= 127)     buf.append(c);
 else     if (c == '\r' || c == '\n')     buf.append('|');
 else     buf.append('\ufffd');
    if (i == limit + 16 && buffer.capacity() > limit + 32) {
      buf.append("...");
      i=buffer.capacity() - 16;
    }
  }
  buffer.limit(limit);
  buf.append("}");
  return buf.toString();
}
