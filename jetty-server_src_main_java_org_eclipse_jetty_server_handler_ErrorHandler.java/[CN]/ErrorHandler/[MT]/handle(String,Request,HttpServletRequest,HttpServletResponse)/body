{
  String method=request.getMethod();
  if (!HttpMethod.GET.is(method) && !HttpMethod.POST.is(method) && !HttpMethod.HEAD.is(method)) {
    baseRequest.setHandled(true);
    return;
  }
  if (this instanceof ErrorPageMapper) {
    String error_page=((ErrorPageMapper)this).getErrorPage(request);
    if (error_page != null && request.getServletContext() != null) {
      String old_error_page=(String)request.getAttribute(ERROR_PAGE);
      if (old_error_page == null || !old_error_page.equals(error_page)) {
        request.setAttribute(ERROR_PAGE,error_page);
        Dispatcher dispatcher=(Dispatcher)request.getServletContext().getRequestDispatcher(error_page);
        try {
          if (dispatcher != null) {
            dispatcher.error(request,response);
            return;
          }
          LOG.warn("No error page " + error_page);
        }
 catch (        ServletException e) {
          LOG.warn(Log.EXCEPTION,e);
          return;
        }
      }
    }
  }
  baseRequest.setHandled(true);
  response.setContentType(MimeTypes.Type.TEXT_HTML_8859_1.asString());
  if (_cacheControl != null)   response.setHeader(HttpHeader.CACHE_CONTROL.asString(),_cacheControl);
  ByteArrayISO8859Writer writer=new ByteArrayISO8859Writer(4096);
  String reason=(response instanceof Response) ? ((Response)response).getReason() : null;
  handleErrorPage(request,writer,response.getStatus(),reason);
  writer.flush();
  response.setContentLength(writer.size());
  writer.writeTo(response.getOutputStream());
  writer.destroy();
}
