{
  final Throwable error;
  final ReadListener listener;
  boolean available=false;
  final boolean eof;
synchronized (lock()) {
    if (!_notReady || _listener == null)     return;
    error=_onError;
    listener=_listener;
    try {
      T item=getNextContent();
      available=item != null && remaining(item) > 0;
    }
 catch (    Exception e) {
      failed(e);
    }
    eof=!available && isFinished();
    _notReady=!available && !eof;
  }
  try {
    if (error != null)     listener.onError(error);
 else     if (available)     listener.onDataAvailable();
 else     if (eof)     listener.onAllDataRead();
 else     unready();
  }
 catch (  Throwable e) {
    LOG.warn(e.toString());
    LOG.debug(e);
    listener.onError(e);
  }
}
