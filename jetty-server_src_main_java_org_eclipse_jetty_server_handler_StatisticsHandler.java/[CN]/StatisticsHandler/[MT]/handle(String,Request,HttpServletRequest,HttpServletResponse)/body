{
  _dispatchedStats.increment();
  final long start;
  HttpChannelState state=request.getHttpChannelState();
  if (state.isInitial()) {
    _requestStats.increment();
    start=request.getTimeStamp();
  }
 else {
    start=System.currentTimeMillis();
    _asyncWaitStats.decrement();
    if (state.isDispatched())     _asyncDispatches.incrementAndGet();
  }
  try {
    super.handle(path,request,httpRequest,httpResponse);
  }
  finally {
    final long now=System.currentTimeMillis();
    final long dispatched=now - start;
    _dispatchedStats.decrement();
    _dispatchedTimeStats.set(dispatched);
    if (state.isSuspended()) {
      if (state.isInitial())       state.addListener(_onCompletion);
      _asyncWaitStats.increment();
    }
 else     if (state.isInitial()) {
      long d=_requestStats.decrement();
      _requestTimeStats.set(dispatched);
      updateResponse(request);
      FutureCallback shutdown=_shutdown.get();
      if (shutdown != null) {
        httpResponse.flushBuffer();
        if (d == 0)         shutdown.succeeded();
      }
    }
  }
}
