{
  URL actual=new URL(url.toString().substring("war:".length()));
  if (actual.getProtocol().equals("file")) {
    File file=new File(URIUtil.encodePath(actual.getPath()));
    if (file.exists()) {
      if (file.isDirectory()) {
      }
    }
  }
  URLConnection ori=(URLConnection)actual.openConnection();
  ori.setDefaultUseCaches(Resource.getDefaultUseCaches());
  JarURLConnection jarOri=null;
  try {
    if (ori instanceof JarURLConnection) {
      jarOri=(JarURLConnection)ori;
    }
 else {
      jarOri=(JarURLConnection)new URL("jar:" + actual.toString() + "!/").openConnection();
      jarOri.setDefaultUseCaches(Resource.getDefaultUseCaches());
    }
    Manifest mf=WarBundleManifestGenerator.createBundleManifest(jarOri.getManifest(),url,jarOri.getJarFile());
    try {
      jarOri.getJarFile().close();
      jarOri=null;
    }
 catch (    Throwable t) {
    }
    return new WarURLConnection(actual,mf);
  }
  finally {
    if (jarOri != null)     try {
      jarOri.getJarFile().close();
    }
 catch (    Throwable t) {
    }
  }
}
