{
  byte[] messageBytes=new byte[124];
  Arrays.fill(messageBytes,(byte)'*');
  ByteBuffer expected=ByteBuffer.allocate(256);
  byte b;
  b=0x00;
  b|=0x80;
  b|=0x08;
  expected.put(b);
  b=0x00;
  b|=0x00;
  b|=0x7E;
  expected.put(b);
  expected.putChar((char)(messageBytes.length + 2));
  expected.putShort((short)1000);
  expected.put(messageBytes);
  expected.flip();
  Parser parser=new Parser(policy);
  FrameParseCapture capture=new FrameParseCapture();
  parser.setListener(capture);
  parser.parse(expected);
  Assert.assertEquals("error on invalid close payload",1,capture.getErrorCount(ProtocolException.class));
  ProtocolException known=(ProtocolException)capture.getErrors().get(0);
  Assert.assertThat("Payload.message",known.getMessage(),containsString("Invalid control frame payload length"));
}
