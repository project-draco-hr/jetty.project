{
  final CountDownLatch latch=new CountDownLatch(2);
  start(new ServerSessionListener.Adapter(){
    @Override public Stream.Listener onNewStream(    Stream stream,    HeadersFrame frame){
      MetaData.Response metaData=new MetaData.Response(HttpVersion.HTTP_2,200,new HttpFields());
      HeadersFrame response=new HeadersFrame(stream.getId(),metaData,null,true);
      stream.headers(response,Callback.Adapter.INSTANCE);
      Assert.assertTrue(stream.isClosed());
      Assert.assertEquals(0,stream.getSession().getStreams().size());
      latch.countDown();
      return null;
    }
  }
);
  Session session=newClient(new Session.Listener.Adapter());
  HeadersFrame frame=new HeadersFrame(0,newRequest("GET",new HttpFields()),null,true);
  session.newStream(frame,new Promise.Adapter<Stream>(),new Stream.Listener.Adapter(){
    @Override public void onHeaders(    Stream stream,    HeadersFrame frame){
      Assert.assertTrue(stream.isClosed());
      latch.countDown();
    }
  }
);
  Assert.assertTrue(latch.await(5,TimeUnit.SECONDS));
}
