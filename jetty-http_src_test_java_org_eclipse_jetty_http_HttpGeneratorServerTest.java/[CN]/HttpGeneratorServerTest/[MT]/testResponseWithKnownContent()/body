{
  String body="";
  ByteBuffer header=BufferUtil.allocate(4096);
  ByteBuffer buffer=BufferUtil.allocate(16);
  ByteBuffer content0=BufferUtil.toBuffer("Hello World! ");
  ByteBuffer content1=BufferUtil.toBuffer("The quick brown fox jumped over the lazy dog. ");
  HttpGenerator gen=new HttpGenerator();
  HttpGenerator.Result result=gen.generate(null,null,null,null,content0,null);
  assertEquals(HttpGenerator.Result.NEED_BUFFER,result);
  assertEquals(HttpGenerator.State.START,gen.getState());
  result=gen.generate(null,null,null,buffer,content0,null);
  assertEquals(HttpGenerator.Result.OK,result);
  assertEquals(HttpGenerator.State.START,gen.getState());
  assertEquals("Hello World! ",BufferUtil.toString(buffer));
  assertEquals(0,content0.remaining());
  result=gen.generate(null,null,null,buffer,content1,null);
  assertEquals(HttpGenerator.Result.NEED_INFO,result);
  assertEquals(HttpGenerator.State.COMMITTING,gen.getState());
  assertEquals("Hello World! The",BufferUtil.toString(buffer));
  assertEquals(43,content1.remaining());
  ResponseInfo info=new ResponseInfo(HttpVersion.HTTP_1_1,new HttpFields(),59,200,null,false);
  info.getHttpFields().add("Last-Modified",HttpFields.__01Jan1970);
  info.getHttpFields().add("Content-Length","59");
  result=gen.generate(info,header,null,buffer,content1,null);
  assertEquals(HttpGenerator.Result.FLUSH,result);
  assertEquals(HttpGenerator.State.COMMITTED,gen.getState());
  assertEquals("Hello World! The",BufferUtil.toString(buffer));
  assertEquals(43,content1.remaining());
  assertTrue(!gen.isChunking());
  String head=BufferUtil.toString(header);
  BufferUtil.clear(header);
  body+=BufferUtil.toString(buffer);
  BufferUtil.clear(buffer);
  result=gen.generate(info,null,null,buffer,content1,null);
  assertEquals(HttpGenerator.Result.FLUSH,result);
  assertEquals(HttpGenerator.State.COMMITTED,gen.getState());
  assertEquals(" quick brown fox",BufferUtil.toString(buffer));
  assertEquals(27,content1.remaining());
  body+=BufferUtil.toString(buffer);
  BufferUtil.clear(buffer);
  result=gen.generate(info,null,null,buffer,content1,null);
  assertEquals(HttpGenerator.Result.FLUSH,result);
  assertEquals(HttpGenerator.State.COMMITTED,gen.getState());
  assertEquals(" jumped over the",BufferUtil.toString(buffer));
  assertEquals(11,content1.remaining());
  body+=BufferUtil.toString(buffer);
  BufferUtil.clear(buffer);
  result=gen.generate(info,null,null,buffer,content1,null);
  assertEquals(HttpGenerator.Result.OK,result);
  assertEquals(HttpGenerator.State.COMMITTED,gen.getState());
  assertEquals(" lazy dog. ",BufferUtil.toString(buffer));
  assertEquals(0,content1.remaining());
  result=gen.generate(info,null,null,buffer,null,Action.COMPLETE);
  assertEquals(HttpGenerator.Result.FLUSH,result);
  assertEquals(HttpGenerator.State.COMPLETING,gen.getState());
  assertEquals(" lazy dog. ",BufferUtil.toString(buffer));
  body+=BufferUtil.toString(buffer);
  BufferUtil.clear(buffer);
  result=gen.generate(info,null,null,buffer,null,null);
  assertEquals(HttpGenerator.Result.OK,result);
  assertEquals(HttpGenerator.State.END,gen.getState());
  assertEquals(0,buffer.remaining());
  assertEquals(59,gen.getContentPrepared());
  assertThat(head,containsString("HTTP/1.1 200 OK"));
  assertThat(head,containsString("Last-Modified: Thu, 01 Jan 1970 00?00?00 GMT"));
  assertThat(head,containsString("Content-Length: 59"));
  assertThat(head,not(containsString("chunked")));
  assertTrue(head.endsWith("\r\n\r\n"));
}
