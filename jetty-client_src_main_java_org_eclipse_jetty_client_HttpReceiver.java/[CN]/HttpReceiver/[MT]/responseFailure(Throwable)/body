{
  HttpExchange exchange=getHttpExchange();
  if (exchange == null)   return false;
  boolean completed=exchange.responseComplete();
  if (!completed)   return false;
  this.failure=failure;
  boolean fail;
  while (true) {
    ResponseState current=responseState.get();
    if (updateResponseState(current,ResponseState.FAILURE)) {
      fail=current != ResponseState.TRANSIENT;
      break;
    }
  }
  dispose();
  Result result=exchange.terminateResponse(failure);
  HttpResponse response=exchange.getResponse();
  if (LOG.isDebugEnabled())   LOG.debug("Response failure {} {} on {}: {}",response,exchange,getHttpChannel(),failure);
  List<Response.ResponseListener> listeners=exchange.getConversation().getResponseListeners();
  ResponseNotifier notifier=getHttpDestination().getResponseNotifier();
  notifier.notifyFailure(listeners,response,failure);
  if (fail) {
    terminateResponse(exchange,result);
  }
 else {
    if (LOG.isDebugEnabled())     LOG.debug("Concurrent failure: response termination skipped, performed by helpers");
  }
  return true;
}
