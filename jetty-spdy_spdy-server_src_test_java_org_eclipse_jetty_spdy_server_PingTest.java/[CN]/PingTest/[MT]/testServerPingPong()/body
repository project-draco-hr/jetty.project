{
  final CountDownLatch pingReceived=new CountDownLatch(1);
  ServerSessionFrameListener serverSessionFrameListener=new ServerSessionFrameListener.Adapter(){
    private final CountDownLatch pingSent=new CountDownLatch(1);
    private int pingId;
    @Override public void onConnect(    Session session){
      session.ping(new PingInfo(),new Promise.Adapter<PingResultInfo>(){
        @Override public void succeeded(        PingResultInfo pingInfo){
          pingId=pingInfo.getPingId();
          pingSent.countDown();
        }
      }
);
    }
    @Override public void onPing(    Session session,    PingResultInfo pingInfo){
      try {
        Assert.assertTrue(pingSent.await(5,TimeUnit.SECONDS));
        Assert.assertEquals(0,pingInfo.getPingId() % 2);
        Assert.assertEquals(pingId,pingInfo.getPingId());
        pingReceived.countDown();
      }
 catch (      InterruptedException x) {
        Assert.fail();
      }
    }
  }
;
  startClient(startServer(serverSessionFrameListener),null);
  Assert.assertTrue(pingReceived.await(5,TimeUnit.SECONDS));
}
