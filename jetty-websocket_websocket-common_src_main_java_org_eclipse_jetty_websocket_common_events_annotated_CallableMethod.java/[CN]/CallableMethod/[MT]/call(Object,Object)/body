{
  if ((this.pojo == null) || (this.method == null)) {
    LOG.warn("Cannot execute call: pojo={}, method={}",pojo,method);
    return null;
  }
  if (obj == null) {
    LOG.warn("Cannot call {} on null object",this.method);
    return null;
  }
  if (args.length < paramTypes.length) {
    throw new IllegalArgumentException("Call arguments length [" + args.length + "] must always be greater than or equal to captured args length ["+ paramTypes.length+ "]");
  }
  try {
    return this.method.invoke(obj,args);
  }
 catch (  IllegalAccessException|IllegalArgumentException|InvocationTargetException e) {
    StringBuilder err=new StringBuilder();
    err.append("Cannot call method ");
    err.append(ReflectUtils.toString(pojo,method));
    err.append(" with args: [");
    boolean delim=false;
    for (    Object arg : args) {
      if (delim) {
        err.append(", ");
      }
      if (arg == null) {
        err.append("<null>");
      }
 else {
        err.append(arg.getClass().getName());
      }
      delim=true;
    }
    err.append("]");
    throw new WebSocketException(err.toString(),e);
  }
}
