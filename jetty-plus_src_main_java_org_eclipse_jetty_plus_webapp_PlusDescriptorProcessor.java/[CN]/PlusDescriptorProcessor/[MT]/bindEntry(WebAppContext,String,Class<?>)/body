{
  String nameInEnvironment=name;
  boolean bound=false;
  Object scope=context;
  NamingEntry ne=NamingEntryUtil.lookupNamingEntry(scope,name);
  if (ne != null && (ne instanceof Link)) {
    nameInEnvironment=((Link)ne).getLink();
  }
  scope=context;
  bound=NamingEntryUtil.bindToENC(scope,name,nameInEnvironment);
  if (bound)   return;
  scope=context.getServer();
  bound=NamingEntryUtil.bindToENC(scope,name,nameInEnvironment);
  if (bound)   return;
  bound=NamingEntryUtil.bindToENC(null,name,nameInEnvironment);
  if (bound)   return;
  nameInEnvironment=typeClass.getName() + "/default";
  NamingEntry defaultNE=NamingEntryUtil.lookupNamingEntry(context.getServer(),nameInEnvironment);
  if (defaultNE == null)   defaultNE=NamingEntryUtil.lookupNamingEntry(null,nameInEnvironment);
  if (defaultNE != null)   defaultNE.bindToENC(name);
 else   throw new IllegalStateException("Nothing to bind for name " + name);
}
