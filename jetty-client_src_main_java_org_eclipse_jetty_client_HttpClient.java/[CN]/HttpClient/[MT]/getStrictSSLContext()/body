{
  try {
    if (_trustStoreLocation == null) {
      _trustStoreLocation=_keyStoreLocation;
      _trustStoreType=_keyStoreType;
    }
    KeyManager[] keyManagers=null;
    InputStream keystoreInputStream=null;
    keystoreInputStream=Resource.newResource(_keyStoreLocation).getInputStream();
    KeyStore keyStore=KeyStore.getInstance(_keyStoreType);
    keyStore.load(keystoreInputStream,_keyStorePassword == null ? null : _keyStorePassword.toString().toCharArray());
    KeyManagerFactory keyManagerFactory=KeyManagerFactory.getInstance(_keyManagerAlgorithm);
    keyManagerFactory.init(keyStore,_keyManagerPassword == null ? null : _keyManagerPassword.toString().toCharArray());
    keyManagers=keyManagerFactory.getKeyManagers();
    TrustManager[] trustManagers=null;
    InputStream truststoreInputStream=null;
    truststoreInputStream=Resource.newResource(_trustStoreLocation).getInputStream();
    KeyStore trustStore=KeyStore.getInstance(_trustStoreType);
    trustStore.load(truststoreInputStream,_trustStorePassword == null ? null : _trustStorePassword.toString().toCharArray());
    TrustManagerFactory trustManagerFactory=TrustManagerFactory.getInstance(_trustManagerAlgorithm);
    trustManagerFactory.init(trustStore);
    trustManagers=trustManagerFactory.getTrustManagers();
    SecureRandom secureRandom=_secureRandomAlgorithm == null ? null : SecureRandom.getInstance(_secureRandomAlgorithm);
    SSLContext context=_provider == null ? SSLContext.getInstance(_protocol) : SSLContext.getInstance(_protocol,_provider);
    context.init(keyManagers,trustManagers,secureRandom);
    return context;
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw new IOException("error generating ssl context for " + _keyStoreLocation + " "+ e.getMessage());
  }
}
