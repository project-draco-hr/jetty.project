{
  Bundle bundle=(Bundle)context.getAttribute(OSGiWebappConstants.JETTY_OSGI_BUNDLE);
  PackageAdmin packAdmin=getBundleAdmin();
  String[] symbNames=requireTldBundle.split(", ");
  Collection<Resource> tlds=new LinkedHashSet<Resource>();
  for (  String symbName : symbNames) {
    Bundle[] bs=packAdmin.getBundles(symbName,null);
    if (bs == null || bs.length == 0) {
      throw new IllegalArgumentException("Unable to locate the bundle '" + symbName + "' specified in the "+ OSGiWebappConstants.REQUIRE_TLD_BUNDLE+ " of the manifest of "+ bundle.getSymbolicName());
    }
    Enumeration<URL> en=bs[0].findEntries("META-INF","*.tld",false);
    boolean atLeastOneTldFound=false;
    while (en.hasMoreElements()) {
      atLeastOneTldFound=true;
      URL oriUrl=en.nextElement();
      try {
        URL url=BundleFileLocatorHelperFactory.getFactory().getHelper().getLocalURL(oriUrl);
        Resource tldResource;
        tldResource=Resource.newResource(url);
        tlds.add(tldResource);
      }
 catch (      Exception e) {
        throw new IllegalArgumentException("Unable to locate the " + "tld resource in '" + oriUrl.toString() + "' in the bundle '"+ bs[0].getSymbolicName()+ "' while registering the "+ OSGiWebappConstants.REQUIRE_TLD_BUNDLE+ " of the manifest of "+ bundle.getSymbolicName(),e);
      }
    }
    if (!atLeastOneTldFound) {
      LOG.warn("No '/META-INF/*.tld' resources were found " + " in the bundle '" + bs[0].getSymbolicName() + "' while registering the "+ OSGiWebappConstants.REQUIRE_TLD_BUNDLE+ " of the manifest of "+ bundle.getSymbolicName());
    }
  }
  return tlds;
}
