{
  String contextPath="";
  String servletMapping="/server";
  int inactivePeriod=2;
  int scavengePeriod=1;
  AbstractTestServer server1=createServer(0,inactivePeriod,scavengePeriod);
  TestServlet servlet=new TestServlet();
  ServletHolder holder=new ServletHolder(servlet);
  ServletContextHandler context=server1.addContext(contextPath);
  context.addServlet(holder,servletMapping);
  TestHttpSessionListener listener=new TestHttpSessionListener();
  context.getSessionHandler().addEventListener(listener);
  server1.start();
  int port1=server1.getPort();
  try {
    HttpClient client=new HttpClient();
    client.start();
    String url="http://localhost:" + port1 + contextPath+ servletMapping;
    ContentResponse response1=client.GET(url + "?action=init");
    assertEquals(HttpServletResponse.SC_OK,response1.getStatus());
    String sessionCookie=response1.getHeaders().get("Set-Cookie");
    assertTrue(sessionCookie != null);
    sessionCookie=sessionCookie.replaceFirst("(\\W)(P|p)ath=","$1\\$Path=");
    String sessionId=extractSessionId(sessionCookie);
    assertTrue(listener.createdSessions.contains(sessionId));
    server1.stop();
    pause(inactivePeriod);
    server1.start();
    port1=server1.getPort();
    url="http://localhost:" + port1 + contextPath+ servletMapping;
    Request request=client.newRequest(url + "?action=test");
    request.getHeaders().add("Cookie",sessionCookie);
    ContentResponse response2=request.send();
    assertEquals(HttpServletResponse.SC_OK,response2.getStatus());
    pause(inactivePeriod);
    assertTrue(listener.destroyedSessions.contains(sessionId));
  }
  finally {
    server1.stop();
  }
}
