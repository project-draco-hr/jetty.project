{
  disposeProxy();
  connectHandler=new ConnectHandler(){
    @Override protected boolean handleAuthentication(    HttpServletRequest request,    HttpServletResponse response,    String address){
      String proxyAuthorization=request.getHeader("Proxy-Authorization");
      if (proxyAuthorization == null) {
        response.setHeader("Proxy-Authenticate","Basic realm=\"test\"");
        return false;
      }
      String b64=proxyAuthorization.substring("Basic ".length());
      String credentials=B64Code.decode(b64,StandardCharsets.UTF_8);
      return "test:test".equals(credentials);
    }
  }
;
  proxy.setHandler(connectHandler);
  proxy.start();
  int port=serverConnector.getLocalPort();
  String hostPort="localhost:" + port;
  String request="" + "CONNECT " + hostPort + " HTTP/1.1\r\n"+ "Host: "+ hostPort+ "\r\n"+ "\r\n";
  try (Socket socket=newSocket()){
    OutputStream output=socket.getOutputStream();
    BufferedReader input=new BufferedReader(new InputStreamReader(socket.getInputStream()));
    output.write(request.getBytes(StandardCharsets.UTF_8));
    output.flush();
    SimpleHttpResponse response=readResponse(input);
    Assert.assertEquals("407",response.getCode());
    Assert.assertTrue(response.getHeaders().containsKey("Proxy-Authenticate".toLowerCase(Locale.ENGLISH)));
    Assert.assertEquals(-1,input.read());
  }
   String credentials="Basic " + B64Code.encode("test:test");
  request="" + "CONNECT " + hostPort + " HTTP/1.1\r\n"+ "Host: "+ hostPort+ "\r\n"+ "Proxy-Authorization: "+ credentials+ "\r\n"+ "\r\n";
  try (Socket socket=newSocket()){
    OutputStream output=socket.getOutputStream();
    BufferedReader input=new BufferedReader(new InputStreamReader(socket.getInputStream()));
    output.write(request.getBytes(StandardCharsets.UTF_8));
    output.flush();
    SimpleHttpResponse response=readResponse(input);
    Assert.assertEquals("200",response.getCode());
    request="" + "GET /echo" + " HTTP/1.1\r\n"+ "Host: " + hostPort + "\r\n"+ "\r\n";
    output.write(request.getBytes(StandardCharsets.UTF_8));
    output.flush();
    response=readResponse(input);
    Assert.assertEquals("200",response.getCode());
    Assert.assertEquals("GET /echo",response.getBody());
  }
 }
