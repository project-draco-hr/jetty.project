{
  final String contextKey="contextKey";
  final String contextValue="contextValue";
  disposeProxy();
  proxy.setHandler(new ConnectHandler(){
    @Override protected boolean handleAuthentication(    HttpServletRequest request,    HttpServletResponse response,    String address){
      request.setAttribute(contextKey,contextValue);
      return super.handleAuthentication(request,response,address);
    }
    @Override protected void prepareContext(    HttpServletRequest request,    ConcurrentMap<String,Object> context){
      Assert.assertEquals(contextValue,request.getAttribute(contextKey));
      context.put(contextKey,request.getAttribute(contextKey));
    }
  }
);
  proxy.start();
  String hostPort="localhost:" + serverConnector.getLocalPort();
  String request="" + "CONNECT " + hostPort + " HTTP/1.1\r\n"+ "Host: "+ hostPort+ "\r\n"+ "\r\n";
  try (Socket socket=newSocket()){
    OutputStream output=socket.getOutputStream();
    BufferedReader input=new BufferedReader(new InputStreamReader(socket.getInputStream()));
    output.write(request.getBytes(StandardCharsets.UTF_8));
    output.flush();
    SimpleHttpResponse response=readResponse(input);
    Assert.assertEquals("200",response.getCode());
    String body="0123456789ABCDEF";
    request="" + "POST /echo HTTP/1.1\r\n" + "Host: " + hostPort + "\r\n"+ "Content-Length: "+ body.length()+ "\r\n"+ "\r\n"+ body;
    output.write(request.getBytes(StandardCharsets.UTF_8));
    output.flush();
    response=readResponse(input);
    Assert.assertEquals("200",response.getCode());
    Assert.assertEquals("POST /echo\r\n" + body,response.getBody());
  }
 }
