{
  TreeMap<String,Resource> prependedResourcesPath=new TreeMap<String,Resource>();
  TreeMap<String,Resource> appendedResourcesPath=new TreeMap<String,Resource>();
  Bundle bundle=(Bundle)context.getAttribute(OSGiWebappConstants.JETTY_OSGI_BUNDLE);
  if (bundle != null) {
    Set<Bundle> fragments=(Set<Bundle>)context.getAttribute(FRAGMENT_AND_REQUIRED_BUNDLES);
    if (fragments != null && !fragments.isEmpty()) {
      for (      Bundle frag : fragments) {
        String path=Util.getManifestHeaderValue(OSGiWebappConstants.JETTY_WAR_FRAGMENT_FOLDER_PATH,OSGiWebappConstants.JETTY_WAR_FRAGMENT_RESOURCE_PATH,frag.getHeaders());
        convertFragmentPathToResource(path,frag,appendedResourcesPath);
        path=Util.getManifestHeaderValue(OSGiWebappConstants.JETTY_WAR_PATCH_FRAGMENT_FOLDER_PATH,OSGiWebappConstants.JETTY_WAR_PREPEND_FRAGMENT_RESOURCE_PATH,frag.getHeaders());
        convertFragmentPathToResource(path,frag,prependedResourcesPath);
      }
      if (!appendedResourcesPath.isEmpty()) {
        LinkedHashSet<Resource> resources=new LinkedHashSet<Resource>();
        Set<Resource> resourceDirs=(Set<Resource>)context.getAttribute(WebInfConfiguration.RESOURCE_DIRS);
        if (resourceDirs != null && !resourceDirs.isEmpty())         resources.addAll(resourceDirs);
        resources.addAll(appendedResourcesPath.values());
        context.setAttribute(WebInfConfiguration.RESOURCE_DIRS,resources);
      }
    }
  }
  super.configure(context);
  if (!prependedResourcesPath.isEmpty()) {
    Resource[] resources=new Resource[1 + prependedResourcesPath.size()];
    System.arraycopy(prependedResourcesPath.values().toArray(new Resource[prependedResourcesPath.size()]),0,resources,0,prependedResourcesPath.size());
    resources[resources.length - 1]=context.getBaseResource();
    context.setBaseResource(new ResourceCollection(resources));
  }
}
