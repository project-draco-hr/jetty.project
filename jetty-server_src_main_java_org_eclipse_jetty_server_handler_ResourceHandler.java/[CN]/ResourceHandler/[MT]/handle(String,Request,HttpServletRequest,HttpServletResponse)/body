{
  if (baseRequest.isHandled())   return;
  boolean skipContentBody=false;
  if (!HttpMethod.GET.equals(request.getMethod())) {
    if (!HttpMethod.HEAD.equals(request.getMethod())) {
      super.handle(target,baseRequest,request,response);
      return;
    }
    skipContentBody=true;
  }
  Resource resource=getResource(request);
  if (resource == null || !resource.exists()) {
    if (target.endsWith("/jetty-dir.css")) {
      resource=getStylesheet();
      if (resource == null)       return;
      response.setContentType("text/css");
    }
 else {
      super.handle(target,baseRequest,request,response);
      return;
    }
  }
  if (!_aliases && resource.getAlias() != null) {
    LOG.info(resource + " aliased to " + resource.getAlias());
    return;
  }
  baseRequest.setHandled(true);
  if (resource.isDirectory()) {
    if (!request.getPathInfo().endsWith(URIUtil.SLASH)) {
      response.sendRedirect(response.encodeRedirectURL(URIUtil.addPaths(request.getRequestURI(),URIUtil.SLASH)));
      return;
    }
    Resource welcome=getWelcome(resource);
    if (welcome != null && welcome.exists())     resource=welcome;
 else {
      doDirectory(request,response,resource);
      baseRequest.setHandled(true);
      return;
    }
  }
  long last_modified=resource.lastModified();
  if (last_modified > 0) {
    long if_modified=request.getDateHeader(HttpHeader.IF_MODIFIED_SINCE.asString());
    if (if_modified > 0 && last_modified / 1000 <= if_modified / 1000) {
      response.setStatus(HttpStatus.NOT_MODIFIED_304);
      return;
    }
  }
  String mime=_mimeTypes.getMimeByExtension(resource.toString());
  if (mime == null)   mime=_mimeTypes.getMimeByExtension(request.getPathInfo());
  doResponseHeaders(response,resource,mime != null ? mime.toString() : null);
  response.setDateHeader(HttpHeader.LAST_MODIFIED.asString(),last_modified);
  if (skipContentBody)   return;
  OutputStream out=null;
  try {
    out=response.getOutputStream();
  }
 catch (  IllegalStateException e) {
    out=new WriterOutputStream(response.getWriter());
  }
{
    resource.writeTo(out,0,resource.length());
  }
}
