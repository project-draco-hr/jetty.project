{
  WebSocketPolicy policy=new WebSocketPolicy(WebSocketBehavior.SERVER);
  policy.setBufferSize(512);
  policy.setMaxPayloadSize(1024);
  byte utf[]=new byte[2048];
  Arrays.fill(utf,(byte)'a');
  Assert.assertThat("Must be a medium length payload",utf.length,allOf(greaterThan(0x7E),lessThan(0xFFFF)));
  ByteBuffer buf=ByteBuffer.allocate(utf.length + 8);
  buf.put((byte)0x81);
  buf.put((byte)(0x80 | 0x7E));
  buf.putShort((short)utf.length);
  MaskedByteBuffer.putMask(buf);
  MaskedByteBuffer.putPayload(buf,utf);
  buf.flip();
  Parser parser=new Parser(policy);
  FrameParseCapture capture=new FrameParseCapture();
  parser.setIncomingFramesHandler(capture);
  parser.parse(buf);
  capture.assertHasErrors(MessageTooLargeException.class,1);
  capture.assertHasNoFrames();
  MessageTooLargeException err=(MessageTooLargeException)capture.getErrors().get(0);
  Assert.assertThat("Error.closeCode",err.getStatusCode(),is(StatusCode.MESSAGE_TOO_LARGE));
}
