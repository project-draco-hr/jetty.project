{
  BlockheadClient client=new BlockheadClient(server.getServerUri());
  client.setProtocols("other");
  try {
    client.connect();
    client.sendStandardRequest();
    client.expectUpgradeResponse();
    int dataSize=1024 * 100;
    byte buf[]=new byte[dataSize];
    Arrays.fill(buf,(byte)'z');
    WebSocketFrame text=WebSocketFrame.text().setPayload(buf).setFin(true);
    ByteBuffer bb=generator.generate(text);
    try {
      client.writeRaw(bb);
      Assert.fail("Write should have failed due to terminated connection");
    }
 catch (    SocketException e) {
      Assert.assertThat("Exception",e.getMessage(),containsString("Broken pipe"));
    }
    IncomingFramesCapture capture=client.readFrames(1,TimeUnit.SECONDS,1);
    WebSocketFrame frame=capture.getFrames().poll();
    Assert.assertThat("frames[0].opcode",frame.getOpCode(),is(OpCode.CLOSE));
    CloseInfo close=new CloseInfo(frame);
    Assert.assertThat("Close Status Code",close.getStatusCode(),is(StatusCode.MESSAGE_TOO_LARGE));
  }
  finally {
    client.close();
  }
}
