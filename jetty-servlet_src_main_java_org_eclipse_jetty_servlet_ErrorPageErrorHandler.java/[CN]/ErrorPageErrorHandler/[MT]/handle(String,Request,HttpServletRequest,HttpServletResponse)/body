{
  String method=request.getMethod();
  if (!method.equals(HttpMethods.GET) && !method.equals(HttpMethods.POST) && !method.equals(HttpMethods.HEAD)) {
    AbstractHttpConnection.getCurrentConnection().getRequest().setHandled(true);
    return;
  }
  if (_errorPages != null) {
    String error_page=null;
    Class<?> exClass=(Class<?>)request.getAttribute(Dispatcher.ERROR_EXCEPTION_TYPE);
    if (ServletException.class.equals(exClass)) {
      error_page=(String)_errorPages.get(exClass.getName());
      if (error_page == null) {
        Throwable th=(Throwable)request.getAttribute(Dispatcher.ERROR_EXCEPTION);
        while (th instanceof ServletException)         th=((ServletException)th).getRootCause();
        if (th != null)         exClass=th.getClass();
      }
    }
    while (error_page == null && exClass != null) {
      error_page=(String)_errorPages.get(exClass.getName());
      exClass=exClass.getSuperclass();
    }
    if (error_page == null) {
      Integer code=(Integer)request.getAttribute(Dispatcher.ERROR_STATUS_CODE);
      if (code != null) {
        error_page=(String)_errorPages.get(Integer.toString(code));
        if ((error_page == null) && (_errorPageList != null)) {
          for (int i=0; i < _errorPageList.size(); i++) {
            ErrorCodeRange errCode=(ErrorCodeRange)_errorPageList.get(i);
            if (errCode.isInRange(code)) {
              error_page=errCode.getUri();
              break;
            }
          }
        }
      }
    }
    if (error_page != null) {
      String old_error_page=(String)request.getAttribute(ERROR_PAGE);
      if (old_error_page == null || !old_error_page.equals(error_page)) {
        request.setAttribute(ERROR_PAGE,error_page);
        Dispatcher dispatcher=(Dispatcher)_servletContext.getRequestDispatcher(error_page);
        try {
          if (dispatcher != null) {
            dispatcher.error(request,response);
            return;
          }
 else {
            LOG.warn("No error page " + error_page);
          }
        }
 catch (        ServletException e) {
          LOG.warn(Log.EXCEPTION,e);
          return;
        }
      }
    }
  }
  super.handle(target,baseRequest,request,response);
}
