{
  final AtomicReference<SessionData> _reference=new AtomicReference<SessionData>();
  final AtomicReference<Exception> _exception=new AtomicReference<Exception>();
  Runnable load=new Runnable(){
    public void run(){
      SessionData data=null;
      Connection connection=null;
      PreparedStatement statement=null;
      try {
        connection=getConnection();
        statement=connection.prepareStatement(__selectSession);
        statement.setString(1,id);
        statement.setString(2,canonicalContextPath);
        statement.setString(3,vhost);
        ResultSet result=statement.executeQuery();
        if (result.next()) {
          data=new SessionData(id);
          data.setRowId(result.getString(__sessionTableRowId));
          data.setCookieSet(result.getLong("cookieTime"));
          data.setLastAccessed(result.getLong("lastAccessTime"));
          data.setAccessed(result.getLong("accessTime"));
          data.setCreated(result.getLong("createTime"));
          data.setLastNode(result.getString("lastNode"));
          data.setLastSaved(result.getLong("lastSavedTime"));
          data.setExpiryTime(result.getLong("expiryTime"));
          data.setCanonicalContext(result.getString("contextPath"));
          data.setVirtualHost(result.getString("virtualHost"));
          InputStream is=((JDBCSessionIdManager)getSessionIdManager())._dbAdaptor.getBlobInputStream(result,"map");
          ClassLoadingObjectInputStream ois=new ClassLoadingObjectInputStream(is);
          Object o=ois.readObject();
          data.setAttributeMap((Map<String,Object>)o);
          ois.close();
          if (Log.isDebugEnabled())           Log.debug("LOADED session " + data);
        }
        _reference.set(data);
      }
 catch (      Exception e) {
        _exception.set(e);
      }
 finally {
        if (connection != null) {
          try {
            connection.close();
          }
 catch (          Exception e) {
            Log.warn(e);
          }
        }
      }
    }
  }
;
  if (_context == null)   load.run();
 else   _context.getContextHandler().handle(load);
  if (_exception.get() != null)   throw _exception.get();
  return _reference.get();
}
