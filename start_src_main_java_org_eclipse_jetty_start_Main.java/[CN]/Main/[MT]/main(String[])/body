{
  try {
    Main main=new Main();
    List<String> arguments=new ArrayList<String>(Arrays.asList(args));
    for (int i=0; i < arguments.size(); i++) {
      String arg=arguments.get(i);
      if (arg.equalsIgnoreCase("--help")) {
        usage();
      }
      if (arg.equalsIgnoreCase("--stop")) {
        int port=Integer.parseInt(main.getProperty("STOP.PORT","-1"));
        String key=main.getProperty("STOP.KEY",null);
        main.stop(port,key);
        return;
      }
      if (arg.equalsIgnoreCase("--version") || arg.equalsIgnoreCase("-v") || arg.equalsIgnoreCase("-info")) {
        arguments.remove(i--);
        main._showVersions=true;
      }
      if (arg.indexOf('=') >= 0) {
        arguments.remove(i--);
        String[] assign=arg.split("=",2);
        if (assign.length == 2)         main.setProperty(assign[0],assign[1]);
 else         main.setProperty(assign[0],null);
      }
    }
    DEBUG=Boolean.parseBoolean(main.getProperty("DEBUG","false"));
    main.start(arguments.toArray(new String[arguments.size()]));
  }
 catch (  Exception e) {
    e.printStackTrace();
    usage();
  }
}
