{
  Response response=getHttpChannel().getResponse();
  int sc=response.getStatus();
  if (sc > 0 && (sc < 200 || sc == 204 || sc == 205 || sc >= 300)) {
    LOG.debug("{} exclude by status {}",this,sc);
    noCompression();
    super.write(content,complete,callback);
    return;
  }
  String ct=getHttpChannel().getResponse().getContentType();
  if (ct != null) {
    ct=MimeTypes.getContentTypeWithoutCharset(ct);
    if (_factory.isExcludedMimeType(StringUtil.asciiToLowerCase(ct))) {
      LOG.debug("{} exclude by mimeType {}",this,ct);
      noCompression();
      super.write(content,complete,callback);
      return;
    }
  }
  String ce=getHttpChannel().getResponse().getHeader("Content-Encoding");
  if (ce != null) {
    LOG.debug("{} exclude by content-encoding {}",this,ce);
    noCompression();
    super.write(content,complete,callback);
    return;
  }
  if (_state.compareAndSet(GZState.MIGHT_COMPRESS,GZState.COMMITTING)) {
    HttpFields fields=response.getHttpFields();
    fields.add(_factory.getVaryField());
    long content_length=response.getContentLength();
    if (content_length < 0 && complete)     content_length=content.remaining();
    _deflater=_factory.getDeflater(getHttpChannel().getRequest(),content_length);
    if (_deflater == null) {
      LOG.debug("{} exclude no deflater",this);
      _state.set(GZState.NOT_COMPRESSING);
      super.write(content,complete,callback);
      return;
    }
    fields.put(CONTENT_ENCODING_GZIP);
    _crc.reset();
    _buffer=getHttpChannel().getByteBufferPool().acquire(_factory.getBufferSize(),false);
    BufferUtil.fill(_buffer,GZIP_HEADER,0,GZIP_HEADER.length);
    response.setContentLength(-1);
    String etag=fields.get(HttpHeader.ETAG);
    if (etag != null)     fields.put(HttpHeader.ETAG,etag.substring(0,etag.length() - 1) + AsyncGzipFilter.ETAG_GZIP + '"');
    LOG.debug("{} compressing {}",this,_deflater);
    _state.set(GZState.COMPRESSING);
    gzip(content,complete,callback);
  }
 else   callback.failed(new WritePendingException());
}
