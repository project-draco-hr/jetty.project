{
  _contextBranches.clear();
  if (getHandlers() == null) {
    _pathBranches=new ArrayTernaryTrie<>(false,16);
    return;
  }
  Map<String,Branch[]> map=new HashMap<>();
  for (  Handler handler : getHandlers()) {
    Branch branch=new Branch(handler);
    for (    String contextPath : branch.getContextPaths()) {
      Branch[] branches=map.get(contextPath);
      map.put(contextPath,ArrayUtil.addToArray(branches,branch,Branch.class));
    }
    for (    ContextHandler context : branch.getContextHandlers())     _contextBranches.putIfAbsent(context,branch.getHandler());
  }
  for (  Map.Entry<String,Branch[]> entry : map.entrySet()) {
    Branch[] branches=entry.getValue();
    Branch[] sorted=new Branch[branches.length];
    int i=0;
    for (    Branch branch : branches)     if (branch.hasVirtualHost())     sorted[i++]=branch;
    for (    Branch branch : branches)     if (!branch.hasVirtualHost())     sorted[i++]=branch;
    entry.setValue(sorted);
  }
  int capacity=512;
  Trie<Map.Entry<String,Branch[]>> trie;
  loop:   while (true) {
    trie=new ArrayTernaryTrie<>(false,capacity);
    for (    Map.Entry<String,Branch[]> entry : map.entrySet()) {
      if (!trie.put(entry.getKey().substring(1),entry)) {
        capacity+=512;
        continue loop;
      }
    }
    break loop;
  }
  if (LOG.isDebugEnabled()) {
    for (    String ctx : trie.keySet())     LOG.debug("{}->{}",ctx,Arrays.asList(trie.get(ctx).getValue()));
  }
  _pathBranches=trie;
}
