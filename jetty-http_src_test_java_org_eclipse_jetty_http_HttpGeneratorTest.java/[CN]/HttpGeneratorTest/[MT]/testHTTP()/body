{
  HttpFields fields=new HttpFields();
  HttpGenerator gen=new HttpGenerator();
  for (int v=9; v <= 11; v++) {
    for (int r=0; r < tr.length; r++) {
      for (int chunks=1; chunks <= 6; chunks++) {
        for (int c=0; c < (v == 11 ? connect.length : (connect.length - 1)); c++) {
          String t="v=" + v + ",r="+ r+ ",chunks="+ chunks+ ",connect="+ c+ ",tr="+ tr[r];
          gen.reset();
          fields.clear();
          String response=tr[r].build(v,gen,"OK\r\nTest",connect[c],null,chunks,fields);
          System.out.println("RESPONSE: " + t + "\n"+ response+ (gen.isPersistent() ? "...\n" : "---\n"));
          if (v == 9) {
            assertFalse(t,gen.isPersistent());
            if (tr[r]._body != null)             assertEquals(t,tr[r]._body,response);
            continue;
          }
        }
      }
    }
  }
}
