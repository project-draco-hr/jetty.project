{
  Xpp3Dom node=root.getChild("groupId");
  setGroupId(node == null ? null : node.getValue());
  node=root.getChild("artifactId");
  setArtifactId(node == null ? null : node.getValue());
  node=root.getChild("classifier");
  setClassifier(node == null ? null : node.getValue());
  node=root.getChild("targetPath");
  setTargetPath(node == null ? null : node.getValue());
  node=root.getChild("skip");
  setSkip(node == null ? false : Boolean.valueOf(node.getValue()));
  node=root.getChild("filtered");
  setFiltered(node == null ? false : Boolean.valueOf(node.getValue()));
  node=root.getChild("includes");
  List<String> includes=null;
  if (node != null && node.getChildCount() > 0) {
    Xpp3Dom[] list=node.getChildren("include");
    for (int j=0; list != null && j < list.length; j++) {
      if (includes == null)       includes=new ArrayList<String>();
      includes.add(list[j].getValue());
    }
  }
  if (includes == null && defaultIncludes != null) {
    includes=new ArrayList<String>();
    includes.addAll(defaultIncludes);
  }
  setIncludes(includes);
  node=root.getChild("excludes");
  List<String> excludes=null;
  if (node != null && node.getChildCount() > 0) {
    Xpp3Dom[] list=node.getChildren("exclude");
    for (int j=0; list != null && j < list.length; j++) {
      if (excludes == null)       excludes=new ArrayList<String>();
      excludes.add(list[j].getValue());
    }
  }
  if (excludes == null && defaultExcludes != null) {
    excludes=new ArrayList<String>();
    excludes.addAll(defaultExcludes);
  }
  setExcludes(excludes);
}
