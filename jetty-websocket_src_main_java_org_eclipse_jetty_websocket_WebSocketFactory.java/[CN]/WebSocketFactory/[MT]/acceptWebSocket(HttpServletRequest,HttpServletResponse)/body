{
  if ("websocket".equalsIgnoreCase(request.getHeader("Upgrade"))) {
    String origin=request.getHeader("Origin");
    if (origin == null)     origin=request.getHeader("Sec-WebSocket-Origin");
    if (!_acceptor.checkOrigin(request,origin)) {
      response.sendError(HttpServletResponse.SC_FORBIDDEN);
      return false;
    }
    WebSocket websocket=null;
    Enumeration<String> protocols=request.getHeaders("Sec-WebSocket-Protocol");
    String protocol=null;
    while (protocol == null && protocols != null && protocols.hasMoreElements()) {
      String candidate=protocols.nextElement();
      for (      String p : parseProtocols(candidate)) {
        websocket=_acceptor.doWebSocketConnect(request,p);
        if (websocket != null) {
          protocol=p;
          break;
        }
      }
    }
    if (websocket == null) {
      websocket=_acceptor.doWebSocketConnect(request,null);
      if (websocket == null) {
        response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE);
        return false;
      }
    }
    upgrade(request,response,websocket,protocol);
    return true;
  }
  return false;
}
