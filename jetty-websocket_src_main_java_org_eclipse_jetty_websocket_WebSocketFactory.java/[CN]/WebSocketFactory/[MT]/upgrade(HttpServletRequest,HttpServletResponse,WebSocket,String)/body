{
  if (!"websocket".equalsIgnoreCase(request.getHeader("Upgrade")))   throw new IllegalStateException("!Upgrade:websocket");
  if (!"HTTP/1.1".equals(request.getProtocol()))   throw new IllegalStateException("!HTTP/1.1");
  int draft=request.getIntHeader("Sec-WebSocket-Version");
  if (draft < 0)   draft=request.getIntHeader("Sec-WebSocket-Draft");
  HttpConnection http=HttpConnection.getCurrentConnection();
  ConnectedEndPoint endp=(ConnectedEndPoint)http.getEndPoint();
  List<String> extensions_requested=new ArrayList<String>();
  for (Enumeration e=request.getHeaders("Sec-WebSocket-Extensions"); e.hasMoreElements(); ) {
    QuotedStringTokenizer tok=new QuotedStringTokenizer((String)e.nextElement(),",");
    while (tok.hasMoreTokens())     extensions_requested.add(tok.nextToken());
  }
  final WebSocketConnection connection;
  final List<Extension> extensions;
switch (draft) {
case -1:
case 0:
    extensions=Collections.emptyList();
  connection=new WebSocketConnectionD00(websocket,endp,_buffers,http.getTimeStamp(),_maxIdleTime,protocol);
break;
case 6:
extensions=Collections.emptyList();
connection=new WebSocketConnectionD06(websocket,endp,_buffers,http.getTimeStamp(),_maxIdleTime,protocol);
break;
case 7:
case 8:
case 9:
case 10:
case 11:
case 12:
extensions=initExtensions(extensions_requested,8 - WebSocketConnectionD12.OP_EXT_DATA,16 - WebSocketConnectionD12.OP_EXT_CTRL,3);
connection=new WebSocketConnectionD12(websocket,endp,_buffers,http.getTimeStamp(),_maxIdleTime,protocol,extensions,draft);
break;
default :
LOG.warn("Unsupported Websocket version: " + draft);
throw new HttpException(400,"Unsupported draft specification: " + draft);
}
connection.handshake(request,response,protocol);
response.flushBuffer();
connection.fillBuffersFrom(((HttpParser)http.getParser()).getHeaderBuffer());
connection.fillBuffersFrom(((HttpParser)http.getParser()).getBodyBuffer());
request.setAttribute("org.eclipse.jetty.io.Connection",connection);
}
