{
  if (!"websocket".equalsIgnoreCase(request.getHeader("Upgrade")))   throw new IllegalStateException("!Upgrade:websocket");
  if (!"HTTP/1.1".equals(request.getProtocol()))   throw new IllegalStateException("!HTTP/1.1");
  int draft=request.getIntHeader("Sec-WebSocket-Version");
  if (draft < 0) {
    draft=request.getIntHeader("Sec-WebSocket-Draft");
  }
  AbstractHttpConnection http=AbstractHttpConnection.getCurrentConnection();
  if (http instanceof BlockingHttpConnection)   throw new IllegalStateException("Websockets not supported on blocking connectors");
  ConnectedEndPoint endp=(ConnectedEndPoint)http.getEndPoint();
  List<String> extensions_requested=new ArrayList<String>();
  @SuppressWarnings("unchecked") Enumeration<String> e=request.getHeaders("Sec-WebSocket-Extensions");
  while (e.hasMoreElements()) {
    QuotedStringTokenizer tok=new QuotedStringTokenizer(e.nextElement(),",");
    while (tok.hasMoreTokens()) {
      extensions_requested.add(tok.nextToken());
    }
  }
  final WebSocketServletConnection connection;
switch (draft) {
case -1:
case 0:
{
      connection=new WebSocketServletConnectionD00(this,websocket,endp,_buffers,http.getTimeStamp(),_maxIdleTime,protocol);
      break;
    }
case 1:
case 2:
case 3:
case 4:
case 5:
case 6:
{
    connection=new WebSocketServletConnectionD06(this,websocket,endp,_buffers,http.getTimeStamp(),_maxIdleTime,protocol);
    break;
  }
case 7:
case 8:
{
  List<Extension> extensions=initExtensions(extensions_requested,8 - WebSocketConnectionD08.OP_EXT_DATA,16 - WebSocketConnectionD08.OP_EXT_CTRL,3);
  connection=new WebSocketServletConnectionD08(this,websocket,endp,_buffers,http.getTimeStamp(),_maxIdleTime,protocol,extensions,draft);
  break;
}
case WebSocketConnectionRFC6455.VERSION:
{
List<Extension> extensions=initExtensions(extensions_requested,8 - WebSocketConnectionRFC6455.OP_EXT_DATA,16 - WebSocketConnectionRFC6455.OP_EXT_CTRL,3);
connection=new WebSocketServletConnectionRFC6455(this,websocket,endp,_buffers,http.getTimeStamp(),_maxIdleTime,protocol,extensions,draft);
break;
}
default :
{
LOG.warn("Unsupported Websocket version: " + draft);
response.setHeader("Sec-WebSocket-Version","13, 8, 6, 0");
throw new HttpException(400,"Unsupported websocket version specification: " + draft);
}
}
connection.getConnection().setMaxBinaryMessageSize(_maxBinaryMessageSize);
connection.getConnection().setMaxTextMessageSize(_maxTextMessageSize);
addConnection(connection);
connection.handshake(request,response,protocol);
response.flushBuffer();
connection.fillBuffersFrom(((HttpParser)http.getParser()).getHeaderBuffer());
connection.fillBuffersFrom(((HttpParser)http.getParser()).getBodyBuffer());
LOG.debug("Websocket upgrade {} {} {} {}",request.getRequestURI(),draft,protocol,connection);
request.setAttribute("org.eclipse.jetty.io.Connection",connection);
}
