{
  boolean handle=false;
  AsyncContextEvent event=null;
  try (Locker.Lock lock=_locker.lock()){
    boolean started=false;
    event=_event;
switch (_async) {
case STARTED:
      started=true;
    break;
case EXPIRING:
case ERRORED:
  break;
default :
throw new IllegalStateException(this.getStatusStringLocked());
}
_async=Async.COMPLETE;
if (started && _state == State.ASYNC_WAIT) {
handle=true;
_state=State.ASYNC_WOKEN;
}
}
 cancelTimeout(event);
if (handle) runInContext(event,_channel);
}
