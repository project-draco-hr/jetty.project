{
synchronized (this) {
switch (_state) {
case DISPATCHED:
case REDISPATCHED:
      _resumed=false;
    _expired=false;
  if (_event == null || request != _event.getSuppliedRequest() || response != _event.getSuppliedResponse() || context != _event.getServletContext())   _event=new AsyncEventState(context,request,response);
 else {
    _event._dispatchContext=null;
    _event._path=null;
  }
_state=State.ASYNCSTARTED;
List<AsyncListener> recycle=_lastAsyncListeners;
_lastAsyncListeners=_asyncListeners;
_asyncListeners=recycle;
if (_asyncListeners != null) _asyncListeners.clear();
break;
default :
throw new IllegalStateException(this.getStatusString());
}
}
if (_lastAsyncListeners != null) {
for (AsyncListener listener : _lastAsyncListeners) {
try {
listener.onStartAsync(_event);
}
 catch (Exception e) {
LOG.warn(e);
}
}
}
}
