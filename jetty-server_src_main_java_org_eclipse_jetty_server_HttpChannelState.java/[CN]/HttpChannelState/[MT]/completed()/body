{
  final List<AsyncListener> aListeners;
  final AsyncContextEvent event;
synchronized (this) {
switch (_state) {
case COMPLETING:
      _state=State.COMPLETED;
    aListeners=_asyncListeners;
  event=_event;
break;
default :
throw new IllegalStateException(this.getStatusString());
}
}
if (event != null) {
if (aListeners != null) {
if (event.getThrowable() != null) {
event.getSuppliedRequest().setAttribute(RequestDispatcher.ERROR_EXCEPTION,event.getThrowable());
event.getSuppliedRequest().setAttribute(RequestDispatcher.ERROR_MESSAGE,event.getThrowable().getMessage());
}
for (AsyncListener listener : aListeners) {
try {
if (event.getThrowable() != null) listener.onError(event);
 else listener.onComplete(event);
}
 catch (Exception e) {
LOG.warn(e);
}
}
}
event.completed();
}
_channel.onCompleted();
}
