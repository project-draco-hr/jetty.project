{
  final List<AsyncListener> aListeners;
synchronized (this) {
switch (_state) {
case COMPLETING:
      _state=State.COMPLETED;
    aListeners=_asyncListeners;
  break;
default :
throw new IllegalStateException(this.getStatusString());
}
}
if (aListeners != null) {
for (AsyncListener listener : aListeners) {
try {
if (_event != null && _event._cause != null) {
  _event.getSuppliedRequest().setAttribute(RequestDispatcher.ERROR_EXCEPTION,_event._cause);
  _event.getSuppliedRequest().setAttribute(RequestDispatcher.ERROR_MESSAGE,_event._cause.getMessage());
  listener.onError(_event);
}
 else listener.onComplete(_event);
}
 catch (Exception e) {
LOG.warn(e);
}
}
}
}
