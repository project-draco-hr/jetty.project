{
  final List<AsyncListener> aListeners;
synchronized (this) {
switch (_state) {
case ASYNCSTARTED:
case ASYNCWAIT:
      aListeners=_asyncListeners;
    break;
default :
  return;
}
_expired=true;
}
if (aListeners != null) {
for (AsyncListener listener : aListeners) {
try {
  listener.onTimeout(_event);
}
 catch (Exception e) {
  LOG.warn(e);
}
}
}
boolean complete;
synchronized (this) {
switch (_state) {
case ASYNCSTARTED:
case ASYNCWAIT:
complete=true;
break;
default :
complete=false;
break;
}
}
if (complete) complete();
scheduleDispatch();
}
