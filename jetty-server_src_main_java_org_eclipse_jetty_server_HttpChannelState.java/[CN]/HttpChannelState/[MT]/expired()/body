{
  final List<AsyncListener> aListeners;
  AsyncEvent event;
synchronized (this) {
switch (_state) {
case ASYNCSTARTED:
case ASYNCWAIT:
      _expired=true;
    event=_event;
  aListeners=_asyncListeners;
break;
default :
return;
}
}
if (aListeners != null) {
for (AsyncListener listener : aListeners) {
try {
listener.onTimeout(event);
}
 catch (Exception e) {
LOG.warn(e);
}
}
}
synchronized (this) {
switch (_state) {
case ASYNCSTARTED:
case ASYNCWAIT:
_state=State.REDISPATCH;
break;
default :
_expired=false;
break;
}
}
scheduleDispatch();
}
