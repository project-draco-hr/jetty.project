{
  final List<AsyncListener> aListeners;
  AsyncContextEvent event;
  try (Locker.Lock lock=_locker.lock()){
    if (_async != Async.STARTED)     return;
    _async=Async.EXPIRING;
    event=_event;
    aListeners=_asyncListeners;
  }
   if (aListeners != null) {
    for (    AsyncListener listener : aListeners) {
      try {
        listener.onTimeout(event);
      }
 catch (      Exception e) {
        LOG.debug(e);
        event.setThrowable(e);
        _channel.getRequest().setAttribute(RequestDispatcher.ERROR_EXCEPTION,e);
        break;
      }
    }
  }
  boolean dispatch=false;
  try (Locker.Lock lock=_locker.lock()){
    if (_async == Async.EXPIRING) {
      _async=Async.EXPIRED;
      if (_state == State.ASYNC_WAIT) {
        _state=State.ASYNC_WOKEN;
        dispatch=true;
      }
    }
  }
   if (dispatch)   scheduleDispatch();
}
