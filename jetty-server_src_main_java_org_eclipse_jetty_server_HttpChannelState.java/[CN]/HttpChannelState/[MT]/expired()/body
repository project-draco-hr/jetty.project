{
  final List<AsyncListener> aListeners;
  AsyncEvent event;
synchronized (this) {
    if (_async != Async.STARTED)     return;
    _async=Async.EXPIRING;
    event=_event;
    aListeners=_asyncListeners;
  }
  if (aListeners != null) {
    for (    AsyncListener listener : aListeners) {
      try {
        listener.onTimeout(event);
      }
 catch (      Exception e) {
        LOG.warn(e);
      }
    }
  }
  boolean dispatch=false;
synchronized (this) {
    if (_async == Async.EXPIRING) {
      _async=Async.EXPIRED;
      if (_state == State.ASYNCWAIT)       dispatch=true;
    }
  }
  if (dispatch)   scheduleDispatch();
}
