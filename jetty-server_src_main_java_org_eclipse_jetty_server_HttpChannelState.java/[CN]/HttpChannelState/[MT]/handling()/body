{
synchronized (this) {
switch (_state) {
case IDLE:
      _initial=true;
    _state=State.DISPATCHED;
  if (_lastAsyncListeners != null)   _lastAsyncListeners.clear();
if (_asyncListeners != null) _asyncListeners.clear();
 else {
  _asyncListeners=_lastAsyncListeners;
  _lastAsyncListeners=null;
}
_responseWrapped=false;
return Action.REQUEST_DISPATCH;
case COMPLETECALLED:
_state=State.COMPLETING;
return Action.COMPLETE;
case COMPLETING:
return Action.COMPLETE;
case ASYNCWAIT:
if (_asyncIO) {
_asyncIO=false;
return Action.IO_CALLBACK;
}
return Action.WAIT;
case COMPLETED:
return Action.RECYCLE;
case REDISPATCH:
_state=State.REDISPATCHED;
_responseWrapped=false;
return _expired ? Action.ASYNC_EXPIRED : Action.ASYNC_DISPATCH;
default :
throw new IllegalStateException(this.getStatusString());
}
}
}
