{
synchronized (this) {
switch (_state) {
case REDISPATCHED:
case DISPATCHED:
      _state=State.UNCOMPLETED;
    return true;
case IDLE:
  throw new IllegalStateException(this.getStatusString());
case ASYNCSTARTED:
_initial=false;
_state=State.ASYNCWAIT;
scheduleTimeout();
if (_state == State.ASYNCWAIT) return true;
 else if (_state == State.COMPLETING) {
_state=State.UNCOMPLETED;
return true;
}
_initial=false;
_state=State.REDISPATCHED;
return false;
case REDISPATCHING:
_initial=false;
_state=State.REDISPATCHED;
return false;
case COMPLETING:
_initial=false;
_state=State.UNCOMPLETED;
return true;
default :
throw new IllegalStateException(this.getStatusString());
}
}
}
