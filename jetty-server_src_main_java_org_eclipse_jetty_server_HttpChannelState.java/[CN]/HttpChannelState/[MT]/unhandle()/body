{
synchronized (this) {
switch (_state) {
case REDISPATCHED:
case DISPATCHED:
      _state=State.COMPLETING;
    return Next.COMPLETE;
case IDLE:
  throw new IllegalStateException(this.getStatusString());
case ASYNCSTARTED:
_initial=false;
_state=State.ASYNCWAIT;
scheduleTimeout();
if (_state == State.ASYNCWAIT) return Next.WAIT;
 else if (_state == State.COMPLETECALLED) {
_state=State.COMPLETING;
return Next.COMPLETE;
}
_initial=false;
_state=State.REDISPATCHED;
return Next.CONTINUE;
case REDISPATCHING:
_initial=false;
_state=State.REDISPATCHED;
return Next.CONTINUE;
case COMPLETECALLED:
_initial=false;
_state=State.COMPLETING;
return Next.COMPLETE;
default :
throw new IllegalStateException(this.getStatusString());
}
}
}
