{
synchronized (this) {
    if (_asyncIO) {
      _asyncIO=false;
      return Action.IO_CALLBACK;
    }
switch (_state) {
case REDISPATCHED:
case DISPATCHED:
      _state=State.COMPLETING;
    return Action.COMPLETE;
case IDLE:
  throw new IllegalStateException(this.getStatusString());
case ASYNCSTARTED:
_initial=false;
_state=State.ASYNCWAIT;
scheduleTimeout();
return Action.WAIT;
case REDISPATCHING:
_initial=false;
_state=State.REDISPATCHED;
return _expired ? Action.ASYNC_EXPIRED : Action.ASYNC_DISPATCH;
case COMPLETECALLED:
_initial=false;
_state=State.COMPLETING;
return Action.COMPLETE;
default :
throw new IllegalStateException(this.getStatusString());
}
}
}
