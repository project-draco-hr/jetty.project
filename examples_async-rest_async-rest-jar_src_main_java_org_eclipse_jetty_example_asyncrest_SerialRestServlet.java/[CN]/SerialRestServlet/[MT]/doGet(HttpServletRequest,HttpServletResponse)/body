{
  long start=System.nanoTime();
  String[] keywords=sanitize(request.getParameter(ITEMS_PARAM)).split(",");
  Queue<Map<String,String>> results=new LinkedList<Map<String,String>>();
  for (  String itemName : keywords) {
    URL url=new URL(restURL(itemName));
    HttpURLConnection connection=(HttpURLConnection)url.openConnection();
    connection.setRequestMethod("GET");
    Map query=(Map)JSON.parse(new BufferedReader(new InputStreamReader(connection.getInputStream())));
    Object[] auctions=(Object[])query.get("Item");
    if (auctions != null) {
      for (      Object o : auctions)       results.add((Map)o);
    }
  }
  String thumbs=generateThumbs(results);
  response.setContentType("text/html");
  PrintWriter out=response.getWriter();
  out.println("<html><head>");
  out.println(STYLE);
  out.println("</head><body><small>");
  long now=System.nanoTime();
  long total=now - start;
  out.print("<b>Blocking: " + sanitize(request.getParameter(ITEMS_PARAM)) + "</b><br/>");
  out.print("Total Time: " + ms(total) + "ms<br/>");
  out.print("Thread held (<span class='red'>red</span>): " + ms(total) + "ms<br/>");
  out.println("<img border='0px' src='asyncrest/red.png'   height='20px' width='" + width(total) + "px'>");
  out.println("<hr />");
  out.println(thumbs);
  out.println("</small>");
  out.println("</body></html>");
  out.close();
}
