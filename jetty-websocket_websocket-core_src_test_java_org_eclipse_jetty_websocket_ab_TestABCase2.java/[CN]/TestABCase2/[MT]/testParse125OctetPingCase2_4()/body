{
  byte[] bytes=new byte[125];
  for (int i=0; i < bytes.length; ++i) {
    bytes[i]=Integer.valueOf(Integer.toOctalString(i)).byteValue();
  }
  ByteBuffer expected=ByteBuffer.allocate(bytes.length + 32);
  expected.put(new byte[]{(byte)0x89});
  byte b=0x00;
  b|=bytes.length & 0x7F;
  expected.put(b);
  expected.put(bytes);
  expected.flip();
  Parser parser=new Parser(policy);
  FrameParseCapture capture=new FrameParseCapture();
  parser.addListener(capture);
  parser.parse(expected);
  capture.assertNoErrors();
  capture.assertHasFrame(PingFrame.class,1);
  PingFrame pActual=(PingFrame)capture.getFrames().get(0);
  Assert.assertThat("PingFrame.payloadLength",pActual.getPayloadLength(),is(bytes.length));
  ByteBufferAssert.assertSize("PingFrame.payload",bytes.length,pActual.getPayload());
}
