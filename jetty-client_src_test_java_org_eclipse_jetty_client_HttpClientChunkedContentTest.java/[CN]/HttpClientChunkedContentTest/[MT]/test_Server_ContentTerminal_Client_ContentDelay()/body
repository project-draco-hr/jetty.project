{
  startClient();
  try (ServerSocket server=new ServerSocket()){
    server.bind(new InetSocketAddress("localhost",0));
    final AtomicReference<Callback> callbackRef=new AtomicReference<>();
    final CountDownLatch firstContentLatch=new CountDownLatch(1);
    final AtomicReference<Result> resultRef=new AtomicReference<>();
    final CountDownLatch completeLatch=new CountDownLatch(1);
    client.newRequest("localhost",server.getLocalPort()).onResponseContentAsync(new Response.AsyncContentListener(){
      @Override public void onContent(      Response response,      ByteBuffer content,      Callback callback){
        if (callbackRef.compareAndSet(null,callback))         firstContentLatch.countDown();
 else         callback.succeeded();
      }
    }
).timeout(5,TimeUnit.SECONDS).send(new Response.CompleteListener(){
      @Override public void onComplete(      Result result){
        resultRef.set(result);
        completeLatch.countDown();
      }
    }
);
    try (Socket socket=server.accept()){
      consumeRequestHeaders(socket);
      OutputStream output=socket.getOutputStream();
      String response="" + "HTTP/1.1 200 OK\r\n" + "Transfer-Encoding: chunked\r\n"+ "\r\n"+ "8\r\n"+ "01234567\r\n"+ "0\r\n"+ "\r\n";
      output.write(response.getBytes(StandardCharsets.UTF_8));
      output.flush();
      assertTrue(firstContentLatch.await(5,TimeUnit.SECONDS));
      Thread.sleep(1000);
      callbackRef.get().succeeded();
      Thread.sleep(1000);
      assertTrue(completeLatch.await(5,TimeUnit.SECONDS));
      Result result=resultRef.get();
      assertTrue(result.isSucceeded());
      Assert.assertEquals(200,result.getResponse().getStatus());
      Request request=client.newRequest("localhost",server.getLocalPort()).timeout(5,TimeUnit.SECONDS);
      FutureResponseListener listener=new FutureResponseListener(request);
      request.send(listener);
      consumeRequestHeaders(socket);
      output.write(response.getBytes(StandardCharsets.UTF_8));
      output.flush();
      Assert.assertEquals(200,listener.get(5,TimeUnit.SECONDS).getStatus());
    }
   }
 }
