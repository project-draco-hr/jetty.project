{
  while (buffer.hasRemaining()) {
    byte b=buffer.get();
    if (b < 0) {
      int index=NBitInteger.decode(buffer,7);
      Entry entry=_context.get(index);
      if (entry.isInReferenceSet())       _context.get(index).removeFromRefSet();
 else       if (entry.isStatic()) {
        _builder.emit(entry.getHttpField());
        Entry new_entry=_context.add(entry.getHttpField());
        if (new_entry != null)         _context.addToRefSet(new_entry);
      }
 else {
        _builder.emit(entry.getHttpField());
        _context.addToRefSet(entry);
      }
    }
 else {
      int f=(b & 0xF0) >> 4;
      String name;
      HttpHeader header;
      String value;
      if (f <= 1 || f >= 4) {
        boolean indexed=f >= 4;
        int bits=indexed ? 6 : 4;
        int name_index=NBitInteger.decode(buffer,bits);
        if (name_index > 0) {
          Entry name_entry=_context.get(name_index);
          name=name_entry.getHttpField().getName();
          header=name_entry.getHttpField().getHeader();
        }
 else {
          boolean huffman=(buffer.get() & 0x80) == 0x80;
          int length=NBitInteger.decode(buffer,7);
          if (huffman)           name=Huffman.decode(buffer,length);
 else           name=toASCIIString(buffer,length);
          header=HttpHeader.CACHE.get(name);
        }
        boolean huffman=(buffer.get() & 0x80) == 0x80;
        int length=NBitInteger.decode(buffer,7);
        if (huffman)         value=Huffman.decode(buffer,length);
 else         value=toASCIIString(buffer,length);
        HttpField field;
switch (name) {
case ":method":
          HttpMethod method=HttpMethod.CACHE.get(value);
        if (method != null)         field=new StaticValueHttpField(header,name,method.asString(),method);
 else         field=new AuthorityHttpField(value);
      break;
case ":status":
    Integer code=Integer.getInteger(value);
  field=new StaticValueHttpField(header,name,value,code);
break;
case ":scheme":
HttpScheme scheme=HttpScheme.CACHE.get(value);
if (scheme != null) field=new StaticValueHttpField(header,name,scheme.asString(),scheme);
 else field=new AuthorityHttpField(value);
break;
case ":authority":
field=new AuthorityHttpField(value);
break;
default :
field=new HttpField(header,name,value);
break;
}
_builder.emit(field);
if (indexed) {
Entry new_entry=_context.add(field);
if (new_entry != null) _context.addToRefSet(new_entry);
}
}
 else if (f == 2) {
int size=NBitInteger.decode(buffer,4);
_context.resize(size);
}
 else if (f == 3) {
_context.clearReferenceSet();
}
}
}
_context.emitUnusedReferences(_builder);
return _builder.build();
}
