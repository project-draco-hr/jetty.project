{
  Map<String,Bundle> bundlesIndexedBySymbolicName=new HashMap<String,Bundle>();
  for (  Bundle b : bundleContext.getBundles()) {
    bundlesIndexedBySymbolicName.put(b.getSymbolicName(),b);
  }
  Bundle websocketServer=bundlesIndexedBySymbolicName.get("org.eclipse.jetty.websocket.server");
  Assert.assertNotNull("Could not find the org.eclipse.jetty.websocket.server bundle",websocketServer);
  Assert.assertEquals(Bundle.RESOLVED,websocketServer.getState());
  Bundle osgiBoot=bundlesIndexedBySymbolicName.get("org.eclipse.jetty.osgi.boot");
  Assert.assertNotNull("Could not find the org.eclipse.jetty.osgi.boot bundle",osgiBoot);
  Assert.assertEquals(Bundle.ACTIVE,osgiBoot.getState());
  Bundle osgiBootJsp=bundlesIndexedBySymbolicName.get("org.eclipse.jetty.osgi.boot.jsp");
  Assert.assertNotNull("Could not find the org.eclipse.jetty.osgi.boot.jsp bundle",osgiBootJsp);
  Assert.assertEquals("The fragment jsp is not correctly resolved.",Bundle.RESOLVED,osgiBootJsp.getState());
  Bundle testWebBundle=bundlesIndexedBySymbolicName.get("org.eclipse.jetty.test-jetty-webapp");
  Assert.assertNotNull("Could not find the org.eclipse.jetty.test-jetty-webappp bundle",osgiBootJsp);
  Assert.assertEquals("The test-jetty-webapp is not correctly resolved",Bundle.ACTIVE,testWebBundle.getState());
  HttpClient client=new HttpClient();
  try {
    client.start();
    Response response=client.GET("http://127.0.0.1:9876/jsp/dump.jsp").get(5,TimeUnit.SECONDS);
    Assert.assertEquals(HttpStatus.OK_200,response.status());
    String content=new String(((HttpContentResponse)response).content());
    Assert.assertTrue(content.indexOf("<tr><th>ServletPath:</th><td>/jsp/dump.jsp</td></tr>") != -1);
  }
  finally {
    client.stop();
  }
}
