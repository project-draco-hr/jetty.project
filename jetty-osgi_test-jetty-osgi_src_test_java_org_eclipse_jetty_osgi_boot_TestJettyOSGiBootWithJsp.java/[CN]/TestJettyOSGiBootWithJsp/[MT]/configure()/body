{
  File testrealm=new File("src/test/config/etc/jetty-testrealm.xml");
  ArrayList<Option> options=new ArrayList<Option>();
  options.addAll(TestJettyOSGiBootCore.provisionCoreJetty());
  if (LOGGING_ENABLED) {
    options.addAll(Arrays.asList(options(systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"))));
  }
  if (REMOTE_DEBUGGING) {
    options.addAll(Arrays.asList(options(PaxRunnerOptions.vmOption("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006"))));
  }
  options.addAll(Arrays.asList(options(PaxRunnerOptions.vmOption("-Djetty.port=9876 -D" + OSGiServerConstants.MANAGED_JETTY_XML_CONFIG_URLS + "=etc/jetty.xml;"+ testrealm.getAbsolutePath()),mavenBundle().groupId("org.eclipse.jetty.orbit").artifactId("javax.servlet.jsp").versionAsInProject(),mavenBundle().groupId("org.eclipse.jetty.orbit").artifactId("javax.servlet.jsp.jstl").versionAsInProject(),mavenBundle().groupId("org.eclipse.jetty.orbit").artifactId("javax.el").versionAsInProject(),mavenBundle().groupId("org.eclipse.jetty.orbit").artifactId("com.sun.el").versionAsInProject(),mavenBundle().groupId("org.eclipse.jetty.orbit").artifactId("org.apache.jasper.glassfish").versionAsInProject(),mavenBundle().groupId("org.eclipse.jetty.orbit").artifactId("org.apache.taglibs.standard.glassfish").versionAsInProject(),mavenBundle().groupId("org.eclipse.jetty.orbit").artifactId("org.eclipse.jdt.core").versionAsInProject(),mavenBundle().groupId("org.eclipse.jetty.osgi").artifactId("jetty-osgi-boot").versionAsInProject().start(),mavenBundle().groupId("org.eclipse.jetty.osgi").artifactId("jetty-osgi-boot-jsp").versionAsInProject().start(),mavenBundle().groupId("org.eclipse.jetty").artifactId("test-jetty-webapp").classifier("webbundle").versionAsInProject())));
  return options.toArray(new Option[options.size()]);
}
