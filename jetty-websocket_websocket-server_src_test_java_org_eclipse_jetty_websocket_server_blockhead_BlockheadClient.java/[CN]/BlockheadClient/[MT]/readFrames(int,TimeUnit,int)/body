{
  LOG.debug("Read: waiting for {} frame(s) from server",expectedCount);
  int startCount=incomingFrameQueue.size();
  ByteBuffer buf=bufferPool.acquire(policy.getBufferSize(),false);
  BufferUtil.clearToFill(buf);
  try {
    long msDur=TimeUnit.MILLISECONDS.convert(timeoutDuration,timeoutUnit);
    long now=System.currentTimeMillis();
    long expireOn=now + msDur;
    LOG.debug("Now: {} - expireOn: {} ({} ms)",now,expireOn,msDur);
    int len=0;
    while (incomingFrameQueue.size() < (startCount + expectedCount)) {
      BufferUtil.clearToFill(buf);
      len=read(buf);
      if (len > 0) {
        LOG.debug("Read {} bytes",len);
        BufferUtil.flipToFlush(buf,0);
        parser.parse(buf);
      }
      try {
        TimeUnit.MILLISECONDS.sleep(20);
      }
 catch (      InterruptedException gnore) {
      }
      if (!debug && (System.currentTimeMillis() > expireOn)) {
        throw new TimeoutException(String.format("Timeout reading all %d expected frames. (managed to only read %d frame(s))",expectedCount,incomingFrameQueue.size()));
      }
    }
  }
  finally {
    bufferPool.release(buf);
  }
  return incomingFrameQueue;
}
