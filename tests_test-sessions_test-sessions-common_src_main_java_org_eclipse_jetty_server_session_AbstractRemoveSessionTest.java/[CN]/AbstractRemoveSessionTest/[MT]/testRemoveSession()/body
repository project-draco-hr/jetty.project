{
  String contextPath="";
  String servletMapping="/server";
  int scavengePeriod=3;
  AbstractTestServer server=createServer(0,1,scavengePeriod);
  ServletContextHandler context=server.addContext(contextPath);
  context.addServlet(TestServlet.class,servletMapping);
  TestEventListener testListener=new TestEventListener();
  context.getSessionHandler().addEventListener(testListener);
  server.start();
  int port=server.getPort();
  try {
    HttpClient client=new HttpClient();
    client.start();
    try {
      Future<ContentResponse> future=client.GET("http://localhost:" + port + contextPath+ servletMapping+ "?action=create");
      ContentResponse response=future.get();
      assertEquals(HttpServletResponse.SC_OK,response.status());
      String sessionCookie=response.headers().getStringField("Set-Cookie");
      assertTrue(sessionCookie != null);
      sessionCookie=sessionCookie.replaceFirst("(\\W)(P|p)ath=","$1\\$Path=");
      assertTrue(testListener.isCreated());
      Request request=client.newRequest("http://localhost:" + port + contextPath+ servletMapping+ "?action=delete");
      request.header("Cookie",sessionCookie);
      future=request.send();
      response=future.get();
      assertEquals(HttpServletResponse.SC_OK,response.status());
      assertTrue(testListener.isDestroyed());
      request=client.newRequest("http://localhost:" + port + contextPath+ servletMapping+ "?action=check");
      request.header("Cookie",sessionCookie);
      future=request.send();
      response=future.get();
      assertEquals(HttpServletResponse.SC_OK,response.status());
    }
  finally {
      client.stop();
    }
  }
  finally {
    server.stop();
  }
}
