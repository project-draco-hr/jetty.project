{
  List<String> requestLines=readRequestLines();
  List<ExtensionConfig> extensionConfigs=parseExtensions(requestLines);
  String key=parseWebSocketKey(requestLines);
  LOG.debug("Client Request Extensions: {}",extensionConfigs);
  LOG.debug("Client Request Key: {}",key);
  Assert.assertThat("Request: Sec-WebSocket-Key",key,notNullValue());
  ExtensionStack extensionStack=new ExtensionStack(extensionRegistry);
  extensionStack.negotiate(extensionConfigs);
  extensionStack.setNextIncoming(this);
  extensionStack.setNextOutgoing(this);
  extensionStack.configure(parser);
  extensionStack.configure(generator);
  try {
    extensionStack.start();
  }
 catch (  Exception e) {
    throw new IOException("Unable to start Extension Stack");
  }
  parser.setIncomingFramesHandler(extensionStack);
  StringBuilder resp=new StringBuilder();
  resp.append("HTTP/1.1 101 Upgrade\r\n");
  resp.append("Connection: upgrade\r\n");
  resp.append("Sec-WebSocket-Accept: ");
  resp.append(AcceptHash.hashKey(key)).append("\r\n");
  if (!extensionStack.hasNegotiatedExtensions()) {
    resp.append("Sec-WebSocket-Extensions: ");
    boolean delim=false;
    for (    ExtensionConfig ext : extensionStack.getNegotiatedExtensions()) {
      if (delim) {
        resp.append(", ");
      }
      resp.append(ext.getParameterizedName());
      delim=true;
    }
    resp.append("\r\n");
  }
  if (extraResponseHeaders.size() > 0) {
    for (    Map.Entry<String,String> xheader : extraResponseHeaders.entrySet()) {
      resp.append(xheader.getKey());
      resp.append(": ");
      resp.append(xheader.getValue());
      resp.append("\r\n");
    }
  }
  resp.append("\r\n");
  LOG.debug("Response: {}",resp.toString());
  write(resp.toString().getBytes());
}
