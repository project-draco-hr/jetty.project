{
  List<ExtensionConfig> extensionConfigs=new ArrayList<>();
  Pattern patExts=Pattern.compile("^Sec-WebSocket-Extensions: (.*)$",Pattern.CASE_INSENSITIVE);
  Pattern patKey=Pattern.compile("^Sec-WebSocket-Key: (.*)$",Pattern.CASE_INSENSITIVE);
  Matcher mat;
  String key="not sent";
  BufferedReader in=new BufferedReader(new InputStreamReader(getInputStream()));
  for (String line=in.readLine(); line != null; line=in.readLine()) {
    if (line.length() == 0) {
      break;
    }
    mat=patExts.matcher(line);
    if (mat.matches()) {
      String econf=mat.group(1);
      ExtensionConfig config=ExtensionConfig.parse(econf);
      extensionConfigs.add(config);
      continue;
    }
    mat=patKey.matcher(line);
    if (mat.matches()) {
      key=mat.group(1);
    }
  }
  ExtensionStack extensionStack=new ExtensionStack(extensionRegistry);
  extensionStack.negotiate(extensionConfigs);
  extensionStack.setNextIncoming(this);
  extensionStack.setNextOutgoing(this);
  extensionStack.configure(parser);
  extensionStack.configure(generator);
  try {
    extensionStack.start();
  }
 catch (  Exception e) {
    throw new IOException("Unable to start Extension Stack");
  }
  parser.setIncomingFramesHandler(extensionStack);
  StringBuilder resp=new StringBuilder();
  resp.append("HTTP/1.1 101 Upgrade\r\n");
  resp.append("Sec-WebSocket-Accept: ");
  resp.append(AcceptHash.hashKey(key)).append("\r\n");
  if (!extensionStack.hasNegotiatedExtensions()) {
    resp.append("Sec-WebSocket-Extensions: ");
    boolean delim=false;
    for (    ExtensionConfig ext : extensionStack.getNegotiatedExtensions()) {
      if (delim) {
        resp.append(", ");
      }
      resp.append(ext.getParameterizedName());
      delim=true;
    }
    resp.append("\r\n");
  }
  if (extraResponseHeaders.size() > 0) {
    for (    Map.Entry<String,String> xheader : extraResponseHeaders.entrySet()) {
      resp.append(xheader.getKey());
      resp.append(": ");
      resp.append(xheader.getValue());
      resp.append("\r\n");
    }
  }
  resp.append("\r\n");
  write(resp.toString().getBytes());
}
