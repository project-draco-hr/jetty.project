{
  String usageResource="org/eclipse/jetty/start/usage.txt";
  InputStream usageStream=getClass().getClassLoader().getResourceAsStream(usageResource);
  if (usageStream == null) {
    System.err.println("ERROR: detailed usage resource unavailable");
    usageExit(EXIT_USAGE);
  }
  BufferedReader buf=null;
  try {
    buf=new BufferedReader(new InputStreamReader(usageStream));
    String line;
    while ((line=buf.readLine()) != null) {
      if (line.endsWith("@") && line.indexOf('@') != line.lastIndexOf('@')) {
        String indent=line.substring(0,line.indexOf("@"));
        String info=line.substring(line.indexOf('@'),line.lastIndexOf('@'));
        if (info.equals("@OPTIONS")) {
          List<String> sortedOptions=new ArrayList<String>();
          sortedOptions.addAll(_config.getSectionIds());
          Collections.sort(sortedOptions);
          for (          String option : sortedOptions) {
            if ("*".equals(option) || option.trim().length() == 0)             continue;
            System.out.print(indent);
            System.out.println(option);
          }
        }
 else         if (info.equals("@CONFIGS")) {
          File etc=new File(System.getProperty("jetty.home","."),"etc");
          if (!etc.exists() || !etc.isDirectory()) {
            System.out.print(indent);
            System.out.println("Unable to find/list " + etc);
            continue;
          }
          File configs[]=etc.listFiles(new FileFilter(){
            public boolean accept(            File path){
              if (!path.isFile()) {
                return false;
              }
              String name=path.getName(Locale.ENGLISH).toLowerCase();
              return (name.startsWith("jetty") && name.endsWith(".xml"));
            }
          }
);
          List<File> configFiles=new ArrayList<File>();
          configFiles.addAll(Arrays.asList(configs));
          Collections.sort(configFiles);
          for (          File configFile : configFiles) {
            System.out.print(indent);
            System.out.print("etc/");
            System.out.println(configFile.getName());
          }
        }
 else         if (info.equals("@STARTINI")) {
          List<String> ini=loadStartIni(new File(_jettyHome,"start.ini"));
          if (ini != null && ini.size() > 0) {
            for (            String a : ini) {
              System.out.print(indent);
              System.out.println(a);
            }
          }
 else {
            System.out.print(indent);
            System.out.println("none");
          }
        }
      }
 else {
        System.out.println(line);
      }
    }
  }
 catch (  IOException e) {
    usageExit(e,EXIT_USAGE);
  }
 finally {
    close(buf);
  }
  System.exit(EXIT_USAGE);
}
