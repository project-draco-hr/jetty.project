{
  File start_d=baseHome.getFile("start.d");
  Modules modules=args.getAllModules();
  Module module=modules.get(name);
  if (module == null) {
    StartLog.warn("ERROR: No known module for %s",name);
    return;
  }
  Set<String> sources=module.getSources();
  boolean explictly_enabled=sources != null && sources.size() > 0;
  File ini=new File(start_d,name + ".ini");
  String short_ini=baseHome.toShortForm(ini);
  if (ini.exists()) {
    if (new StartIni(ini).getLineMatches(Pattern.compile("--module=(.*, *)*" + name)).size() == 0)     StartLog.warn("WARNING: %s not initialised in %s!",name,short_ini);
 else     StartLog.warn("%-15s initialised in %s",name,short_ini);
  }
 else   if (topLevel || (module.getInitialise().size() > 0 && !explictly_enabled)) {
    if (!ini.createNewFile()) {
      StartLog.warn("ERROR: %s cannot be initialised in %s! ",name,short_ini);
      return;
    }
    StartLog.warn("%-15s initialised in %s (created)",name,short_ini);
    try (PrintWriter out=new PrintWriter(ini)){
      out.println("# Initialize module " + name);
      out.println("--module=" + name);
      for (      String line : module.getInitialise())       out.println(line);
    }
     StartIni start_ini=new StartIni(ini);
    args.parse(baseHome,start_ini);
    for (    String enable : start_ini.getLineMatches(Pattern.compile("--module=.*"))) {
      modules.enable(enable.substring(enable.indexOf('=') + 1).trim(),Collections.singletonList(short_ini));
    }
  }
  for (  String source : sources) {
    if (!short_ini.equals(source))     StartLog.warn("%-15s enabled in     %s",name,baseHome.toShortForm(source));
  }
  for (  String download : module.getDownloads())   download(StartArgs.toDownloadArg(download));
  if (module != null && topLevel) {
    for (    String parent : modules.resolveParentModulesOf(name))     if (!name.equals(parent))     initialize(args,parent,false);
  }
}
