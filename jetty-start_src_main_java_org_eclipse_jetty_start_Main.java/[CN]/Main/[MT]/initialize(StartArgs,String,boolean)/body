{
  File start_d=baseHome.getBaseFile("start.d");
  Modules modules=args.getAllModules();
  Module module=modules.get(name);
  if (module == null) {
    StartLog.warn("ERROR: No known module for %s",name);
    return;
  }
  File ini=new File(start_d,name + ".ini");
  String short_ini=baseHome.toShortForm(ini);
  StartIni start_ini=null;
  if (ini.exists()) {
    start_ini=new StartIni(ini);
    if (start_ini.getLineMatches(Pattern.compile("--module=(.*, *)*" + name)).size() == 0) {
      StartLog.warn("ERROR: %s is not enabled in %s!",name,short_ini);
      return;
    }
  }
  boolean transitive=module.isEnabled() && module.getSources().size() == 0;
  boolean has_ini_lines=module.getInitialise().size() > 0;
  if (!module.isEnabled() || (transitive && has_ini_lines) || (topLevel && !ini.exists())) {
    if (!start_d.exists())     start_d.mkdirs();
    if (!ini.createNewFile()) {
      StartLog.warn("ERROR: %s cannot be initialised in %s! ",name,short_ini);
      return;
    }
    StartLog.warn("%-15s initialised in %s (created)",name,short_ini);
    try (PrintWriter out=new PrintWriter(ini)){
      out.println("# Initialize module " + name);
      out.println("--module=" + name);
      for (      String line : module.getInitialise())       out.println(line);
    }
     start_ini=new StartIni(ini);
    args.parse(baseHome,start_ini);
    for (    String enable : start_ini.getLineMatches(Pattern.compile("--module=.*"))) {
      modules.enable(enable.substring(enable.indexOf('=') + 1).trim(),Collections.singletonList(short_ini));
    }
  }
 else   if (ini.exists()) {
    StartLog.info("%-15s initialised in %s",name,short_ini);
  }
  for (  String source : module.getSources()) {
    if (!short_ini.equals(source))     StartLog.warn("%-15s enabled in     %s",name,baseHome.toShortForm(source));
  }
  for (  String download : module.getDownloads())   download(StartArgs.toDownloadArg(download));
  if (topLevel) {
    List<Module> parents=new ArrayList<>();
    for (    String parent : modules.resolveParentModulesOf(name)) {
      if (!name.equals(parent)) {
        Module m=modules.get(parent);
        m.setEnabled(true);
        parents.add(m);
      }
    }
    Collections.sort(parents,Collections.reverseOrder(new Module.DepthComparator()));
    for (    Module m : parents) {
      initialize(args,m.getName(),false);
    }
  }
}
