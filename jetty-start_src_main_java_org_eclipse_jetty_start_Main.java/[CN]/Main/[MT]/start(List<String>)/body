{
  startMonitor();
  if (_secure) {
    _config.addActiveOption("secure");
    _config.addActiveOption("security");
  }
  if (xmls.isEmpty()) {
    if (_fromDaemon) {
      xmls.add("etc/jetty-logging.xml");
    }
    xmls.add("etc/jetty.xml");
  }
  initConfig(xmls);
  xmls=resolveXmlConfigs(xmls);
  Classpath classpath=_config.getActiveClasspath();
  System.setProperty("java.class.path",classpath.toString());
  ClassLoader cl=classpath.getClassLoader();
  if (Config.isDebug()) {
    System.err.println("java.class.path=" + System.getProperty("java.class.path"));
    System.err.println("jetty.home=" + System.getProperty("jetty.home"));
    System.err.println("java.home=" + System.getProperty("java.home"));
    System.err.println("java.io.tmpdir=" + System.getProperty("java.io.tmpdir"));
    System.err.println("java.class.path=" + classpath);
    System.err.println("classloader=" + cl);
    System.err.println("classloader.parent=" + cl.getParent());
  }
  if (_showUsage) {
    usage();
    return;
  }
  if (_dumpVersions) {
    showClasspathWithVersions(classpath);
    showActiveSecurityPolicies(cl);
    return;
  }
  if (_listOptions) {
    showAllOptionsWithVersions(classpath);
    return;
  }
  if (_dryRun) {
    showDryRun(classpath,xmls);
    return;
  }
  Thread.currentThread().setContextClassLoader(cl);
  initSecurity(cl);
  try {
    String classname=_config.getMainClassname();
    String mainClass=System.getProperty("jetty.server");
    if (mainClass != null)     classname=mainClass;
    mainClass=System.getProperty("main.class");
    if (mainClass != null)     classname=mainClass;
    Config.debug("main.class=" + classname);
    invokeMain(cl,classname,xmls);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
