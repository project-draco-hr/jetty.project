{
  StartArgs args=new StartArgs(cmdLine);
  baseHome.initialize(args);
  StartLog.getInstance().initialize(baseHome,args);
  StartLog.debug("jetty.home=%s",baseHome.getHome());
  StartLog.debug("jetty.base=%s",baseHome.getBase());
  File start_ini=baseHome.getBaseFile("start.ini");
  if (FS.canReadFile(start_ini)) {
    StartLog.debug("Reading ${jetty.base}/start.ini) - %s",start_ini);
    args.parse(new StartIni(start_ini));
  }
  File start_d=baseHome.getBaseFile("start.d");
  if (FS.canReadDirectory(start_d)) {
    List<File> files=new ArrayList<>();
    for (    File file : start_d.listFiles(new FS.IniFilter())) {
      files.add(file);
    }
    Collections.sort(files,new NaturalSort.Files());
    for (    File file : files) {
      StartLog.debug("Reading ${jetty.base}/start.d/%s - %s",file.getName(),file);
      args.parse(new StartIni(file));
    }
  }
  StartLog.debug("Parsing collected arguments");
  args.parseCommandLine();
  Modules modules=new Modules();
  StartLog.debug("Registering all modules");
  modules.registerAll(baseHome);
  for (  String enabledModule : args.getEnabledModules()) {
    StartLog.debug("Enabling module: %s",enabledModule);
    modules.enable(enabledModule);
  }
  StartLog.debug("Building Module Graph");
  modules.buildGraph();
  List<Module> activeModules=modules.resolveEnabled();
  args.expandModules(baseHome,activeModules);
  args.resolveExtraXmls(baseHome);
  return args;
}
