{
  try {
    List<String> arguments=new ArrayList<String>();
    boolean has_args=false;
    for (    String arg : args)     has_args|=!arg.startsWith("-");
    if (!has_args)     arguments.addAll(loadStartIni());
    for (    String arg : args) {
      if ("%start.ini".equals(arg)) {
        arguments.addAll(loadStartIni());
        continue;
      }
      arguments.add(arg);
    }
    List<String> xmls=new ArrayList<String>();
    for (    String arg : arguments) {
      if ("--help".equals(arg) || "-?".equals(arg)) {
        _showUsage=true;
        continue;
      }
      if ("--stop".equals(arg)) {
        int port=Integer.parseInt(_config.getProperty("STOP.KEY",System.getProperty("STOP.PORT","-1")));
        String key=_config.getProperty("STOP.KETY",System.getProperty("STOP.KEY",null));
        stop(port,key);
        return;
      }
      if ("--version".equals(arg) || "-v".equals(arg) || "--info".equals(arg)) {
        _dumpVersions=true;
        continue;
      }
      if ("--list-modes".equals(arg) || "--list-options".equals(arg)) {
        _listOptions=true;
        continue;
      }
      if ("--exec-print".equals(arg) || "--dry-run".equals(arg)) {
        _dryRun=true;
        continue;
      }
      if ("--exec".equals(arg)) {
        _exec=true;
        continue;
      }
      if ("--fromDaemon".equals(arg)) {
        _fromDaemon=true;
        PrintStream logger=new PrintStream(new RedirectedStreamLogger("daemon_yyyy_mm_dd.log",false,90,TimeZone.getTimeZone("GMT")));
        System.setOut(logger);
        System.setErr(logger);
        continue;
      }
      if ("--secure".equals(arg)) {
        _secure=true;
        continue;
      }
      if (arg.startsWith("-D")) {
        String[] assign=arg.substring(2).split("=",2);
        _sysProps.add(assign[0]);
switch (assign.length) {
case 2:
          System.setProperty(assign[0],assign[1]);
        break;
case 1:
      System.setProperty(assign[0],"");
    break;
default :
  break;
}
continue;
}
if (arg.startsWith("-")) {
_jvmArgs.add(arg);
continue;
}
if (arg.indexOf('=') >= 0) {
String[] assign=arg.split("=",2);
switch (assign.length) {
case 2:
if ("OPTIONS".equals(assign[0])) {
  String opts[]=assign[1].split(",");
  for (  String opt : opts)   _config.addActiveOption(opt);
}
 else this._config.setProperty(assign[0],assign[1]);
break;
case 1:
this._config.setProperty(assign[0],null);
break;
default :
break;
}
continue;
}
xmls.add(arg);
}
start(xmls);
}
 catch (Throwable t) {
t.printStackTrace(System.err);
System.out.println("Use java -jar start.jar --help for usage information.");
}
}
