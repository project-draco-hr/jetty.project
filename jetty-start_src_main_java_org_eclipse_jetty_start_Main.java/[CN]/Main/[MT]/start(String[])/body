{
  InputStream cpcfg=null;
  try {
    int port=Integer.parseInt(getProperty("STOP.PORT","-1"));
    String key=getProperty("STOP.KEY",null);
    Monitor.monitor(port,key);
    String config=getProperty("START","org/eclipse/jetty/start/start.config");
    if (DEBUG) {
      System.err.println("config=" + config);
      System.err.println("properties=" + _properties);
    }
    cpcfg=getClass().getClassLoader().getResourceAsStream(config);
    if (cpcfg == null)     cpcfg=new FileInputStream(config);
    configure(cpcfg,args.length);
    String jetty_home=System.getProperty("jetty.home");
    if (jetty_home != null) {
      File file=new File(jetty_home);
      String canonical=file.getCanonicalPath();
      System.setProperty("jetty.home",canonical);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    System.exit(1);
  }
 finally {
    try {
      cpcfg.close();
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
  System.setProperty("java.class.path",_classpath.toString());
  ClassLoader cl=_classpath.getClassLoader();
  if (DEBUG) {
    System.err.println("java.class.path=" + System.getProperty("java.class.path"));
    System.err.println("jetty.home=" + System.getProperty("jetty.home"));
    System.err.println("java.io.tmpdir=" + System.getProperty("java.io.tmpdir"));
    System.err.println("java.class.path=" + _classpath);
    System.err.println("classloader=" + cl);
    System.err.println("classloader.parent=" + cl.getParent());
  }
  Thread.currentThread().setContextClassLoader(cl);
  try {
    if (_activeOptions.contains("policy")) {
      Class jettyPolicy=cl.loadClass("org.eclipse.jetty.policy.JettyPolicy");
      Constructor c=jettyPolicy.getConstructor(new Class[]{Set.class,Map.class});
      Object policyClass=c.newInstance(_policies,_properties);
      Policy.setPolicy((Policy)policyClass);
      System.setSecurityManager(new SecurityManager());
    }
 else {
      Policy policy=Policy.getPolicy();
      if (policy != null)       policy.refresh();
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  try {
    for (int i=0; i < args.length; i++) {
      if (args[i] == null)       continue;
      _xml.add(args[i]);
    }
    args=(String[])_xml.toArray(args);
    String mainClass=System.getProperty("jetty.server");
    if (mainClass != null)     _classname=mainClass;
    mainClass=System.getProperty("main.class");
    if (mainClass != null)     _classname=mainClass;
    if (DEBUG)     System.err.println("main.class=" + _classname);
    invokeMain(cl,_classname,args);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
