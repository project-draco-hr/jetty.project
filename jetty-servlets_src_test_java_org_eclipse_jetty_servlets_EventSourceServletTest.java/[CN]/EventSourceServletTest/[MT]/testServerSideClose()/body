{
  final AtomicReference<EventSource.Emitter> emitterRef=new AtomicReference<EventSource.Emitter>();
  final CountDownLatch emitterLatch=new CountDownLatch(1);
class S extends EventSourceServlet {
    @Override protected EventSource newEventSource(    HttpServletRequest request){
      return new EventSource(){
        public void onOpen(        Emitter emitter) throws IOException {
          emitterRef.set(emitter);
          emitterLatch.countDown();
        }
        public void onClose(){
        }
      }
;
    }
  }
  String servletPath="/eventsource";
  context.addServlet(new ServletHolder(new S()),servletPath);
  Socket socket=new Socket("localhost",connector.getLocalPort());
  writeHTTPRequest(socket,servletPath);
  BufferedReader reader=readAndDiscardHTTPResponse(socket);
  Assert.assertTrue(emitterLatch.await(1,TimeUnit.SECONDS));
  EventSource.Emitter emitter=emitterRef.get();
  Assert.assertNotNull(emitter);
  String comment="foo";
  emitter.comment(comment);
  String line=reader.readLine();
  String received="";
  while (line != null) {
    received+=line;
    if (line.length() == 0)     break;
    line=reader.readLine();
  }
  Assert.assertEquals(": " + comment,received);
  emitter.close();
  line=reader.readLine();
  Assert.assertNull(line);
  socket.close();
}
