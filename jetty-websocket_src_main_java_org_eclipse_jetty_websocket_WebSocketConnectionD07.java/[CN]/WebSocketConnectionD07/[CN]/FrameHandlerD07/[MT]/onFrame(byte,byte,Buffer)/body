{
  boolean lastFrame=isLastFrame(flags);
synchronized (WebSocketConnectionD07.this) {
    if (_closedIn)     return;
    try {
      byte[] array=buffer.array();
      if (_onFrame != null) {
        if (_onFrame.onFrame(flags,opcode,array,buffer.getIndex(),buffer.length()))         return;
      }
      if (_onControl != null && isControlFrame(opcode)) {
        if (_onControl.onControl(opcode,array,buffer.getIndex(),buffer.length()))         return;
      }
switch (opcode) {
case WebSocketConnectionD07.OP_CONTINUATION:
{
          if (_opcode == WebSocketConnectionD07.OP_TEXT && _connection.getMaxTextMessageSize() >= 0) {
            if (_utf8.append(buffer.array(),buffer.getIndex(),buffer.length(),_connection.getMaxTextMessageSize())) {
              if (lastFrame && _onTextMessage != null) {
                _opcode=-1;
                String msg=_utf8.toString();
                _utf8.reset();
                _onTextMessage.onMessage(msg);
              }
            }
 else {
              _connection.close(WebSocketConnectionD07.CLOSE_LARGE,"Text message size > " + _connection.getMaxTextMessageSize() + " chars");
              _utf8.reset();
              _opcode=-1;
            }
          }
 else           if (_opcode >= 0 && _connection.getMaxBinaryMessageSize() >= 0) {
            if (_aggregate.space() < _aggregate.length()) {
              _connection.close(WebSocketConnectionD07.CLOSE_LARGE,"Message size > " + _connection.getMaxBinaryMessageSize());
              _aggregate.clear();
              _opcode=-1;
            }
 else {
              _aggregate.put(buffer);
              if (lastFrame && _onBinaryMessage != null) {
                try {
                  _onBinaryMessage.onMessage(_aggregate.array(),_aggregate.getIndex(),_aggregate.length());
                }
  finally {
                  _opcode=-1;
                  _aggregate.clear();
                }
              }
            }
          }
          break;
        }
case WebSocketConnectionD07.OP_PING:
{
        Log.debug("PING {}",this);
        if (!_closedOut)         _connection.sendControl(WebSocketConnectionD07.OP_PONG,buffer.array(),buffer.getIndex(),buffer.length());
        break;
      }
case WebSocketConnectionD07.OP_PONG:
{
      Log.debug("PONG {}",this);
      break;
    }
case WebSocketConnectionD07.OP_CLOSE:
{
    int code=-1;
    String message=null;
    if (buffer.length() >= 2) {
      code=buffer.array()[buffer.getIndex()] * 0xff + buffer.array()[buffer.getIndex() + 1];
      if (buffer.length() > 2)       message=new String(buffer.array(),buffer.getIndex() + 2,buffer.length() - 2,StringUtil.__UTF8);
    }
    closeIn(code,message);
    break;
  }
case WebSocketConnectionD07.OP_TEXT:
{
  if (_onTextMessage != null) {
    if (lastFrame) {
      _onTextMessage.onMessage(buffer.toString(StringUtil.__UTF8));
    }
 else {
      if (_connection.getMaxTextMessageSize() >= 0) {
        if (_utf8.append(buffer.array(),buffer.getIndex(),buffer.length(),_connection.getMaxTextMessageSize()))         _opcode=WebSocketConnectionD07.OP_TEXT;
 else {
          _utf8.reset();
          _opcode=-1;
          _connection.close(WebSocketConnectionD07.CLOSE_LARGE,"Text message size > " + _connection.getMaxTextMessageSize() + " chars");
        }
      }
    }
  }
  break;
}
default :
{
if (_onBinaryMessage != null) {
  if (lastFrame) {
    _onBinaryMessage.onMessage(array,buffer.getIndex(),buffer.length());
  }
 else {
    if (_connection.getMaxBinaryMessageSize() >= 0) {
      if (buffer.length() > _connection.getMaxBinaryMessageSize()) {
        _connection.close(WebSocketConnectionD07.CLOSE_LARGE,"Message size > " + _connection.getMaxBinaryMessageSize());
        if (_aggregate != null)         _aggregate.clear();
        _opcode=-1;
      }
 else {
        _opcode=opcode;
        if (_aggregate == null)         _aggregate=new ByteArrayBuffer(_connection.getMaxBinaryMessageSize());
        _aggregate.put(buffer);
      }
    }
  }
}
}
}
}
 catch (ThreadDeath th) {
throw th;
}
catch (Throwable th) {
Log.warn(th);
}
}
}
