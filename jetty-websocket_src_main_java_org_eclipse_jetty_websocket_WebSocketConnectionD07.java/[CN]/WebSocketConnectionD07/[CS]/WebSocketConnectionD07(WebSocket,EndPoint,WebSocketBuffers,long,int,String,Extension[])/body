{
  super(endpoint,timestamp);
  if (endpoint instanceof AsyncEndPoint)   ((AsyncEndPoint)endpoint).cancelIdle();
  _endp.setMaxIdleTime(maxIdleTime);
  _webSocket=websocket;
  _onFrame=_webSocket instanceof OnFrame ? (OnFrame)_webSocket : null;
  _onTextMessage=_webSocket instanceof OnTextMessage ? (OnTextMessage)_webSocket : null;
  _onBinaryMessage=_webSocket instanceof OnBinaryMessage ? (OnBinaryMessage)_webSocket : null;
  _onControl=_webSocket instanceof OnControl ? (OnControl)_webSocket : null;
  _generator=new WebSocketGeneratorD07(buffers,_endp,null);
  if (extensions != null) {
    byte data_op=OP_EXT_DATA;
    byte ctrl_op=OP_EXT_CTRL;
    byte flag_mask=0x4;
    for (int e=0; e < extensions.length; e++) {
      byte[] data_ops=new byte[extensions[e].getDataOpcodes()];
      for (int i=0; i < data_ops.length; i++)       data_ops[i]=data_op++;
      byte[] ctrl_ops=new byte[extensions[e].getControlOpcodes()];
      for (int i=0; i < ctrl_ops.length; i++)       ctrl_ops[i]=ctrl_op++;
      byte[] flag_masks=new byte[extensions[e].getReservedBits()];
      for (int i=0; i < flag_masks.length; i++) {
        flag_masks[i]=flag_mask;
        flag_mask=(byte)(flag_mask >> 1);
      }
      extensions[e].init(e == extensions.length - 1 ? _frameHandler : extensions[e + 1],e == 0 ? _generator : extensions[e - 1],data_ops,ctrl_ops,flag_masks);
    }
  }
  _outbound=(extensions == null || extensions.length == 0) ? _generator : extensions[extensions.length - 1];
  _inbound=(extensions == null || extensions.length == 0) ? _frameHandler : extensions[0];
  _parser=new WebSocketParserD07(buffers,endpoint,_inbound,true);
  _protocol=protocol;
  if (_endp instanceof SelectChannelEndPoint) {
    final SelectChannelEndPoint scep=(SelectChannelEndPoint)_endp;
    scep.cancelIdle();
    _idle=new IdleCheck(){
      public void access(      EndPoint endp){
        scep.scheduleIdle();
      }
    }
;
    scep.scheduleIdle();
  }
 else {
    _idle=new IdleCheck(){
      public void access(      EndPoint endp){
      }
    }
;
  }
  _maxTextMessageSize=buffers.getBufferSize();
  _maxBinaryMessageSize=-1;
}
