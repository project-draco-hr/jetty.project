{
  _origins=new HashMap<String,OriginInfo>();
  List<String> orderedLibs=new ArrayList<String>();
  for (  Resource webInfJar : _orderedWebInfJars) {
    String fullname=webInfJar.getName();
    int i=fullname.indexOf(".jar");
    int j=fullname.lastIndexOf("/",i);
    orderedLibs.add(fullname.substring(j + 1,i + 4));
  }
  context.setAttribute(ORDERED_LIBS,orderedLibs);
  for (  DescriptorProcessor p : _descriptorProcessors) {
    p.process(context,getWebDefault());
    p.process(context,getWebXml());
    p.process(context,getOverrideWeb());
  }
  for (  DiscoveredAnnotation a : _annotations)   a.apply();
  List<Resource> resources=getOrderedWebInfJars();
  for (  Resource r : resources) {
    FragmentDescriptor fd=_webFragmentResourceMap.get(r);
    if (fd != null) {
      for (      DescriptorProcessor p : _descriptorProcessors) {
        p.process(context,fd);
      }
    }
    List<DiscoveredAnnotation> fragAnnotations=_webFragmentAnnotations.get(r);
    if (fragAnnotations != null) {
      for (      DiscoveredAnnotation a : fragAnnotations)       a.apply();
    }
  }
}
