{
  Log.debug("metadata resolve {}",context);
  _origins.clear();
  if (_ordering != null) {
    List<String> orderedLibs=new ArrayList<String>();
    for (    Resource webInfJar : _orderedWebInfJars) {
      String fullname=webInfJar.getName();
      int i=fullname.indexOf(".jar");
      int j=fullname.lastIndexOf("/",i);
      orderedLibs.add(fullname.substring(j + 1,i + 4));
    }
    context.setAttribute(ORDERED_LIBS,orderedLibs);
  }
  for (  DescriptorProcessor p : _descriptorProcessors) {
    p.process(context,getWebDefault());
    p.process(context,getWebXml());
    for (    WebDescriptor wd : getOverrideWebs()) {
      Log.debug("process {} {}",context,wd);
      p.process(context,wd);
    }
  }
  for (  DiscoveredAnnotation a : _annotations) {
    Log.debug("apply {}",a);
    a.apply();
  }
  List<Resource> resources=getOrderedWebInfJars();
  for (  Resource r : resources) {
    FragmentDescriptor fd=_webFragmentResourceMap.get(r);
    if (fd != null) {
      for (      DescriptorProcessor p : _descriptorProcessors) {
        Log.debug("process {} {}",context,fd);
        p.process(context,fd);
      }
    }
    List<DiscoveredAnnotation> fragAnnotations=_webFragmentAnnotations.get(r);
    if (fragAnnotations != null) {
      for (      DiscoveredAnnotation a : fragAnnotations) {
        Log.debug("apply {}",a);
        a.apply();
      }
    }
  }
}
