{
  String contextPath="";
  String servletMapping="/server";
  int scavengePeriod=10;
  AbstractTestServer server=createServer(0,20,scavengePeriod);
  ServletContextHandler context=server.addContext(contextPath);
  InputStream is=this.getClass().getClassLoader().getResourceAsStream("proxy-serialization.jar");
  File testDir=MavenTestingUtils.getTargetTestingDir("proxy-serialization");
  testDir.mkdirs();
  File extractedJar=new File(testDir,"proxy-serialization.jar");
  extractedJar.createNewFile();
  IO.copy(is,new FileOutputStream(extractedJar));
  URLClassLoader loader=new URLClassLoader(new URL[]{extractedJar.toURI().toURL()},Thread.currentThread().getContextClassLoader());
  context.setClassLoader(loader);
  context.addServlet("TestServlet",servletMapping);
  customizeContext(context);
  try {
    server.start();
    int port=server.getPort();
    HttpClient client=new HttpClient();
    client.start();
    try {
      ContentResponse response=client.GET("http://localhost:" + port + contextPath+ servletMapping+ "?action=create");
      assertEquals(HttpServletResponse.SC_OK,response.getStatus());
      String sessionCookie=response.getHeaders().getStringField("Set-Cookie");
      assertTrue(sessionCookie != null);
      sessionCookie=sessionCookie.replaceFirst("(\\W)(P|p)ath=","$1\\$Path=");
      context.stop();
      context.start();
      Request request=client.newRequest("http://localhost:" + port + contextPath+ servletMapping+ "?action=test");
      request.header("Cookie",sessionCookie);
      response=request.send();
      assertEquals(HttpServletResponse.SC_OK,response.getStatus());
    }
  finally {
      client.stop();
    }
  }
  finally {
    server.stop();
  }
}
