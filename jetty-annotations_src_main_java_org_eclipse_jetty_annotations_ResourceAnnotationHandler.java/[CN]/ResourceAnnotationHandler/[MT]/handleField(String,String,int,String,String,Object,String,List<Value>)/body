{
  try {
    if ((access & org.objectweb.asm.Opcodes.ACC_STATIC) > 0) {
      Log.warn("Skipping Resource annotation on " + className + "."+ fieldName+ ": cannot be static");
      return;
    }
    if ((access & org.objectweb.asm.Opcodes.ACC_FINAL) > 0) {
      Log.warn("Skipping Resource annotation on " + className + "."+ fieldName+ ": cannot be final");
      return;
    }
    String name=className + "/" + fieldName;
    String mappedName=null;
    org.objectweb.asm.Type resourceType=null;
    if (values != null) {
      for (      Value val : values) {
        if (val.getName().equals("name") && !"".equals((String)val.getValue()))         name=(String)(val.getValue());
 else         if (val.getName().equals("mappedName") && !"".equals((String)val.getValue()))         mappedName=(String)val.getValue();
 else         if (val.getName().equals("type")) {
          resourceType=(org.objectweb.asm.Type)(val.getValue());
        }
      }
    }
    Injection webXmlInjection=_injections.getInjection(name,className,fieldName);
    if (webXmlInjection == null) {
      try {
        boolean bound=org.eclipse.jetty.plus.jndi.NamingEntryUtil.bindToENC(_wac,name,mappedName);
        if (!bound)         bound=org.eclipse.jetty.plus.jndi.NamingEntryUtil.bindToENC(_wac.getServer(),name,mappedName);
        if (!bound)         bound=org.eclipse.jetty.plus.jndi.NamingEntryUtil.bindToENC(null,name,mappedName);
        if (!bound) {
          try {
            InitialContext ic=new InitialContext();
            String nameInEnvironment=(mappedName != null ? mappedName : name);
            ic.lookup("java:comp/env/" + nameInEnvironment);
            bound=true;
          }
 catch (          NameNotFoundException e) {
            bound=false;
          }
        }
        if (bound) {
          Log.debug("Bound " + (mappedName == null ? name : mappedName) + " as "+ name);
          Injection injection=new Injection();
          injection.setTarget(className,fieldName,Util.asCanonicalName(resourceType));
          injection.setJndiName(name);
          injection.setMappingName(mappedName);
          _injections.add(injection);
        }
 else         if (!Util.isEnvEntryType(fieldType)) {
          System.err.println(fieldType);
          throw new IllegalStateException("No resource at " + (mappedName == null ? name : mappedName));
        }
      }
 catch (      NamingException e) {
        if (!Util.isEnvEntryType(fieldType))         throw new IllegalStateException(e);
      }
    }
  }
 catch (  Exception e) {
    Log.warn(e);
  }
}
