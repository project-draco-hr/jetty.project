{
  _bytes=new ByteArrayBuffer(2048);
  Buffers buffers=new SimpleBuffers(new ByteArrayBuffer(1024),new ByteArrayBuffer(1024));
  ByteArrayEndPoint endp=new ByteArrayEndPoint();
  AbstractGenerator generator=new AbstractGenerator(buffers,endp){
    @Override public boolean isRequest(){
      return false;
    }
    @Override public boolean isResponse(){
      return true;
    }
    @Override public void completeHeader(    HttpFields fields,    boolean allContentAdded) throws IOException {
    }
    @Override public int flushBuffer() throws IOException {
      return 0;
    }
    @Override public int prepareUncheckedAddContent() throws IOException {
      return 1024;
    }
    public void addContent(    Buffer content,    boolean last) throws IOException {
      _bytes.put(content);
      content.clear();
    }
    public boolean addContent(    byte b) throws IOException {
      return false;
    }
  }
;
  AbstractHttpConnection connection=new AbstractHttpConnection(null,endp,new Server(),null,generator,null){
    @Override public Connection handle() throws IOException {
      return null;
    }
  }
;
  endp.setMaxIdleTime(60000);
  HttpOutput httpOut=new HttpOutput(connection);
  _writer=new HttpWriter(httpOut);
}
