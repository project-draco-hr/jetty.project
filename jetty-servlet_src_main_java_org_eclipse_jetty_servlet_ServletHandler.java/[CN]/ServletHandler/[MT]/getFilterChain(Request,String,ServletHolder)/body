{
  String key=pathInContext == null ? servletHolder.getName() : pathInContext;
  int dispatch=FilterMapping.dispatch(baseRequest.getDispatcherType());
  if (_filterChainsCached && _chainCache != null) {
    FilterChain chain=(FilterChain)_chainCache[dispatch].get(key);
    if (chain != null)     return chain;
  }
  List<FilterHolder> filters=new ArrayList<>();
  if (pathInContext != null && _filterPathMappings != null) {
    for (    FilterMapping filterPathMapping : _filterPathMappings) {
      if (filterPathMapping.appliesTo(pathInContext,dispatch))       filters.add(filterPathMapping.getFilterHolder());
    }
  }
  if (servletHolder != null && _filterNameMappings != null && _filterNameMappings.size() > 0) {
    if (_filterNameMappings.size() > 0) {
      Object o=_filterNameMappings.get(servletHolder.getName());
      for (int i=0; i < LazyList.size(o); i++) {
        FilterMapping mapping=(FilterMapping)LazyList.get(o,i);
        if (mapping.appliesTo(dispatch))         filters.add(mapping.getFilterHolder());
      }
      o=_filterNameMappings.get("*");
      for (int i=0; i < LazyList.size(o); i++) {
        FilterMapping mapping=(FilterMapping)LazyList.get(o,i);
        if (mapping.appliesTo(dispatch))         filters.add(mapping.getFilterHolder());
      }
    }
  }
  if (filters.isEmpty())   return null;
  FilterChain chain=null;
  if (_filterChainsCached) {
    if (filters.size() > 0)     chain=new CachedChain(filters,servletHolder);
    final Map<String,FilterChain> cache=_chainCache[dispatch];
    final Queue<String> lru=_chainLRU[dispatch];
    while (_maxFilterChainsCacheSize > 0 && cache.size() >= _maxFilterChainsCacheSize) {
      String k=lru.poll();
      if (k == null) {
        cache.clear();
        break;
      }
      cache.remove(k);
    }
    cache.put(key,chain);
    lru.add(key);
  }
 else   if (filters.size() > 0)   chain=new Chain(baseRequest,filters,servletHolder);
  return chain;
}
