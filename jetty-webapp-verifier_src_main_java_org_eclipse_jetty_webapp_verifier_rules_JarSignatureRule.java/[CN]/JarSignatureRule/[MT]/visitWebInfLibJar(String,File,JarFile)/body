{
  try {
    if (jar.getManifest() == null) {
      error(jar.toString(),"missing manifest.mf, can not be signed");
    }
    List<JarEntry> entries=resolveJar(jar);
    for (    JarEntry jarEntry : entries) {
      if (!jarEntry.isDirectory() && !jarEntry.getName().startsWith("META-INF")) {
        Certificate[] certs=jarEntry.getCertificates();
        if (certs == null || certs.length == 0) {
          error(jarEntry.getName(),"entry has not been signed");
        }
 else {
          X509Certificate[] chainRoots=getChainRoots(certs);
          boolean signed=false;
          for (int i=0; i < chainRoots.length; i++) {
            if (isTrusted(chainRoots[i])) {
              signed=true;
              break;
            }
          }
          if (!signed) {
            error(jarEntry.getName(),"Untrusted provider's JAR");
          }
        }
      }
    }
  }
 catch (  Exception e) {
    exception(jar.getName(),e.getMessage(),e);
  }
}
