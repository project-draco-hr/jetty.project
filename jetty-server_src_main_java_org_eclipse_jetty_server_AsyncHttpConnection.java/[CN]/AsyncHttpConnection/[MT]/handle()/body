{
  Connection connection=this;
  boolean some_progress=false;
  boolean progress=true;
  try {
    setCurrentConnection(this);
    boolean more_in_buffer=false;
    while (_endp.isOpen() && (more_in_buffer || progress)) {
      progress=false;
      try {
        LOG.debug("async request",_request);
        if (_request._async.isAsync() && !_request._async.isComplete())         handleRequest();
 else         if (!_parser.isComplete() && _parser.parseAvailable() > 0)         progress=true;
        if (_generator.isCommitted() && !_generator.isComplete() && _generator.flushBuffer() > 0)         progress=true;
        if (_endp.isBufferingOutput())         _endp.flush();
      }
 catch (      HttpException e) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("uri=" + _uri);
          LOG.debug("fields=" + _requestFields);
          LOG.debug(e);
        }
        _generator.sendError(e.getStatus(),e.getReason(),null,true);
        _parser.reset();
        _endp.close();
      }
 finally {
        if (_endp.isInputShutdown() && (_parser.isIdle() || _parser.isComplete())) {
          LOG.debug("complete half close {}",this);
          more_in_buffer=false;
          _endp.close();
          reset(true);
        }
 else         if (_parser.isComplete() && _generator.isComplete() && !_endp.isBufferingOutput()) {
          if (_response.getStatus() == HttpStatus.SWITCHING_PROTOCOLS_101) {
            Connection switched=(Connection)_request.getAttribute("org.eclipse.jetty.io.Connection");
            if (switched != null) {
              _parser.reset();
              _generator.reset(true);
              return switched;
            }
          }
          progress=true;
          reset(false);
          more_in_buffer=_parser.isMoreInBuffer() || _endp.isBufferingInput();
        }
 else         if (_request.isAsyncStarted()) {
          LOG.debug("suspended {}",this);
          more_in_buffer=false;
          progress=false;
        }
 else         more_in_buffer=_parser.isMoreInBuffer() || _endp.isBufferingInput();
        some_progress|=progress | ((SelectChannelEndPoint)_endp).isProgressing();
      }
    }
  }
  finally {
    setCurrentConnection(null);
    _parser.returnBuffers();
    if (_generator.isCommitted() && !_generator.isComplete())     ((AsyncEndPoint)_endp).scheduleWrite();
 else     _generator.returnBuffers();
    if (!some_progress) {
      _total_no_progress++;
      if (NO_PROGRESS_INFO > 0 && _total_no_progress % NO_PROGRESS_INFO == 0 && (NO_PROGRESS_CLOSE <= 0 || _total_no_progress < NO_PROGRESS_CLOSE))       LOG.info("EndPoint making no progress: " + _total_no_progress + " "+ _endp);
      if (NO_PROGRESS_CLOSE > 0 && _total_no_progress > NO_PROGRESS_CLOSE) {
        LOG.warn("Closing EndPoint making no progress: " + _total_no_progress + " "+ _endp);
        _endp.close();
      }
    }
  }
  return connection;
}
