{
  Connection connection=this;
  boolean some_progress=false;
  boolean progress=true;
  try {
    setCurrentConnection(this);
    _asyncEndp.setCheckForIdle(false);
    while (progress && connection == this) {
      progress=false;
      try {
        if (_request._async.isAsync()) {
          if (_request._async.isDispatchable())           handleRequest();
        }
 else         if (!_parser.isComplete() && _parser.parseAvailable())         progress=true;
        if (_generator.isCommitted() && !_generator.isComplete() && !_endp.isOutputShutdown()&& !_request.getAsyncContinuation().isAsyncStarted())         if (_generator.flushBuffer() > 0)         progress=true;
        _endp.flush();
        if (_asyncEndp.hasProgressed())         progress=true;
      }
 catch (      HttpException e) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("uri=" + _uri);
          LOG.debug("fields=" + _requestFields);
          LOG.debug(e);
        }
        progress=true;
        _generator.sendError(e.getStatus(),e.getReason(),null,true);
      }
 finally {
        some_progress|=progress;
        boolean parserComplete=_parser.isComplete();
        boolean generatorComplete=_generator.isComplete();
        boolean complete=parserComplete && generatorComplete;
        if (parserComplete) {
          if (generatorComplete) {
            progress=true;
            if (_response.getStatus() == HttpStatus.SWITCHING_PROTOCOLS_101) {
              Connection switched=(Connection)_request.getAttribute("org.eclipse.jetty.io.Connection");
              if (switched != null)               connection=switched;
            }
            reset();
            if (!_generator.isPersistent() && !_endp.isOutputShutdown()) {
              LOG.warn("Safety net oshut!!!  IF YOU SEE THIS, PLEASE RAISE BUGZILLA");
              _endp.shutdownOutput();
            }
          }
 else {
            _readInterested=false;
            LOG.debug("Disabled read interest while writing response {}",_endp);
          }
        }
        if (!complete && _request.getAsyncContinuation().isAsyncStarted()) {
          LOG.debug("suspended {}",this);
          progress=false;
        }
      }
    }
  }
  finally {
    setCurrentConnection(null);
    if (!_request.getAsyncContinuation().isAsyncStarted()) {
      _parser.returnBuffers();
      _generator.returnBuffers();
      _asyncEndp.setCheckForIdle(true);
    }
    if (some_progress)     _total_no_progress=0;
 else {
      _total_no_progress++;
      if (NO_PROGRESS_INFO > 0 && _total_no_progress % NO_PROGRESS_INFO == 0 && (NO_PROGRESS_CLOSE <= 0 || _total_no_progress < NO_PROGRESS_CLOSE))       LOG.info("EndPoint making no progress: " + _total_no_progress + " "+ _endp+ " "+ this);
      if (NO_PROGRESS_CLOSE > 0 && _total_no_progress == NO_PROGRESS_CLOSE) {
        LOG.warn("Closing EndPoint making no progress: " + _total_no_progress + " "+ _endp+ " "+ this);
        if (_endp instanceof SelectChannelEndPoint)         ((SelectChannelEndPoint)_endp).getChannel().close();
      }
    }
  }
  return connection;
}
