{
  String contextPath="";
  String servletMapping="/server";
  long purgeDelay=1000;
  long purgeInvalidAge=1000;
  long purgeValidAge=1000;
  MongoTestServer server=createServer(0,1,0);
  ServletContextHandler context=server.addContext(contextPath);
  context.addServlet(TestServlet.class,servletMapping);
  MongoSessionManager sessionManager=(MongoSessionManager)context.getSessionHandler().getSessionManager();
  MongoSessionIdManager idManager=(MongoSessionIdManager)server.getServer().getSessionIdManager();
  idManager.setPurge(true);
  idManager.setPurgeDelay(purgeDelay);
  idManager.setPurgeInvalidAge(purgeInvalidAge);
  idManager.setPurgeValidAge(purgeValidAge);
  server.start();
  int port=server.getPort();
  try {
    HttpClient client=new HttpClient();
    client.start();
    try {
      ContentResponse response=client.GET("http://localhost:" + port + contextPath+ servletMapping+ "?action=create");
      assertEquals(HttpServletResponse.SC_OK,response.getStatus());
      String sessionCookie=response.getHeaders().getStringField("Set-Cookie");
      assertTrue(sessionCookie != null);
      sessionCookie=sessionCookie.replaceFirst("(\\W)(P|p)ath=","$1\\$Path=");
      Request request=client.newRequest("http://localhost:" + port + contextPath+ servletMapping+ "?action=invalidate");
      request.header("Cookie",sessionCookie);
      response=request.send();
      assertEquals(HttpServletResponse.SC_OK,response.getStatus());
      Thread.currentThread().sleep(3 * purgeDelay);
      request=client.newRequest("http://localhost:" + port + contextPath+ servletMapping+ "?action=test");
      request.header("Cookie",sessionCookie);
      response=request.send();
      assertEquals(HttpServletResponse.SC_OK,response.getStatus());
    }
  finally {
      client.stop();
    }
  }
  finally {
    server.stop();
  }
}
