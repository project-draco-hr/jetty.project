{
  HttpTester.Request request=HttpTester.newRequest();
  HttpTester.Response response;
  request.setMethod("POST");
  request.setURI("/dump/");
  request.setVersion("HTTP/1.1");
  request.setHeader("Host","tester");
  request.setHeader("Connection","close");
  String boundary="XyXyXy";
  request.setHeader("Content-Type","multipart/form-data; boundary=" + boundary);
  String crocMsg="See ya later, aligator.";
  String aligMsg="In a while, crocodile.";
  StringBuilder content=new StringBuilder();
  content.append("--").append(boundary).append("\r\n");
  content.append("Content-Disposition: form-data; name=\"same\"; filename=\"crocodile.dat\"\r\n");
  content.append("Content-Type: application/octet-stream\r\n");
  content.append("\r\n");
  content.append(crocMsg).append("\r\n");
  content.append("--").append(boundary).append("\r\n");
  content.append("Content-Disposition: form-data; name=\"same\"; filename=\"aligator.dat\"\r\n");
  content.append("Content-Type: application/octet-stream\r\n");
  content.append("\r\n");
  content.append(aligMsg).append("\r\n");
  content.append("--").append(boundary).append("--\r\n");
  content.append("\r\n");
  request.setContent(content.toString());
  response=HttpTester.parseResponse(connector.getResponses(request.generate()));
  assertThat("Response status",response.getStatus(),is(HttpServletResponse.SC_OK));
  assertEquals(HttpServletResponse.SC_OK,response.getStatus());
  String responseContents=response.getContent();
  assertThat("response.contents",responseContents,containsString(String.format("Got part: name=same, size=%d, filename=crocodile.dat",crocMsg.length())));
  assertThat("response.contents",responseContents,containsString(String.format("Got part: name=same, size=%d, filename=aligator.dat",aligMsg.length())));
}
