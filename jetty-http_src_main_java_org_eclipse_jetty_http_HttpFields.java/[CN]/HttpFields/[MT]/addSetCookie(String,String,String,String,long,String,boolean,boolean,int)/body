{
  if (name == null || name.length() == 0)   throw new IllegalArgumentException("Bad cookie name");
  StringBuilder buf=new StringBuilder(128);
  String name_value_params;
  QuotedStringTokenizer.quoteIfNeeded(buf,name);
  buf.append('=');
  if (value != null && value.length() > 0)   QuotedStringTokenizer.quoteIfNeeded(buf,value);
  if (version > 0) {
    buf.append(";Version=");
    buf.append(version);
    if (comment != null && comment.length() > 0) {
      buf.append(";Comment=");
      QuotedStringTokenizer.quoteIfNeeded(buf,comment);
    }
  }
  if (path != null && path.length() > 0) {
    buf.append(";Path=");
    if (path.trim().startsWith("\""))     buf.append(path);
 else     QuotedStringTokenizer.quoteIfNeeded(buf,path);
  }
  if (domain != null && domain.length() > 0) {
    buf.append(";Domain=");
    QuotedStringTokenizer.quoteIfNeeded(buf,domain.toLowerCase());
  }
  if (maxAge >= 0) {
    if (version == 0) {
      buf.append(";Expires=");
      if (maxAge == 0)       buf.append(__01Jan1970);
 else       formatCookieDate(buf,System.currentTimeMillis() + 1000L * maxAge);
    }
 else {
      buf.append(";Max-Age=");
      buf.append(maxAge);
    }
  }
 else   if (version > 0) {
    buf.append(";Discard");
  }
  if (isSecure)   buf.append(";Secure");
  if (isHttpOnly)   buf.append(";HttpOnly");
  name_value_params=buf.toString();
  put(HttpHeaders.EXPIRES_BUFFER,__01Jan1970_BUFFER);
  add(HttpHeaders.SET_COOKIE_BUFFER,new ByteArrayBuffer(name_value_params));
}
