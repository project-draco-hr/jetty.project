{
  Map<String,Bundle> bundlesIndexedBySymbolicName=new HashMap<String,Bundle>();
  for (  Bundle b : bundleContext.getBundles()) {
    bundlesIndexedBySymbolicName.put(b.getSymbolicName(),b);
  }
  Bundle osgiBoot=bundlesIndexedBySymbolicName.get("org.eclipse.jetty.osgi.boot");
  Assert.assertNotNull("Could not find the org.eclipse.jetty.osgi.boot bundle",osgiBoot);
  Assert.assertTrue(osgiBoot.getState() == Bundle.ACTIVE);
  Bundle httpServiceOSGiBundle=bundlesIndexedBySymbolicName.get("org.eclipse.jetty.osgi.httpservice");
  Assert.assertNotNull(httpServiceOSGiBundle);
  Assert.assertTrue(httpServiceOSGiBundle.getState() == Bundle.ACTIVE);
  Bundle equinoxServlet=bundlesIndexedBySymbolicName.get("org.eclipse.equinox.http.servlet");
  Assert.assertNotNull(equinoxServlet);
  Assert.assertTrue(equinoxServlet.getState() == Bundle.ACTIVE);
  ServiceReference sr=bundleContext.getServiceReference(HttpService.class.getName());
  Assert.assertNotNull("The httpServiceOSGiBundle is started and should have deployed a service reference for HttpService",sr);
  HttpService http=(HttpService)bundleContext.getService(sr);
  http.registerServlet("/greetings",new HttpServlet(){
    private static final long serialVersionUID=1L;
    @Override protected void doGet(    HttpServletRequest req,    HttpServletResponse resp) throws ServletException, IOException {
      resp.getWriter().write("Hello");
    }
  }
,null,null);
  HttpClient client=new HttpClient();
  try {
    client.start();
    Response response=client.GET("http://127.0.0.1:9876/greetings").get(5,TimeUnit.SECONDS);
    ;
    Assert.assertEquals(HttpStatus.OK_200,response.status());
    String content=new String(((HttpContentResponse)response).content());
    Assert.assertEquals("Hello",content);
  }
  finally {
    client.stop();
  }
}
