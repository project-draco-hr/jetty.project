{
  File homeDir=MavenTestingUtils.getTestResourceDir("usecases/home");
  File baseDir=testdir.getEmptyDir();
  String cmdLine[]=new String[]{"jetty.version=TEST"};
  CommandLineConfigSource cmdLineSource=new CommandLineConfigSource(cmdLine);
  ConfigSources config=new ConfigSources();
  config.add(cmdLineSource);
  config.add(new JettyHomeConfigSource(homeDir.toPath()));
  config.add(new JettyBaseConfigSource(baseDir.toPath()));
  BaseHome basehome=new BaseHome();
  basehome.initialize(config);
  StartArgs args=new StartArgs();
  args.parse(config);
  Modules modules=new Modules();
  modules.registerAll(basehome,args);
  modules.buildGraph();
  modules.enable("server",TEST_SOURCE);
  modules.enable("http",TEST_SOURCE);
  List<Module> active=modules.resolveEnabled();
  List<String> expectedNames=new ArrayList<>();
  expectedNames.add("base");
  expectedNames.add("xml");
  expectedNames.add("server");
  expectedNames.add("http");
  List<String> actualNames=new ArrayList<>();
  for (  Module actual : active) {
    actualNames.add(actual.getName());
  }
  Assert.assertThat("Resolved Names: " + actualNames,actualNames,contains(expectedNames.toArray()));
  List<String> expectedLibs=new ArrayList<>();
  expectedLibs.add("lib/jetty-util-${jetty.version}.jar");
  expectedLibs.add("lib/jetty-io-${jetty.version}.jar");
  expectedLibs.add("lib/jetty-xml-${jetty.version}.jar");
  expectedLibs.add("lib/servlet-api-3.1.jar");
  expectedLibs.add("lib/jetty-schemas-3.1.jar");
  expectedLibs.add("lib/jetty-http-${jetty.version}.jar");
  expectedLibs.add("lib/jetty-continuation-${jetty.version}.jar");
  expectedLibs.add("lib/jetty-server-${jetty.version}.jar");
  List<String> actualLibs=modules.normalizeLibs(active);
  Assert.assertThat("Resolved Libs: " + actualLibs,actualLibs,contains(expectedLibs.toArray()));
  List<String> expectedXmls=new ArrayList<>();
  expectedXmls.add("etc/jetty.xml");
  expectedXmls.add("etc/jetty-http.xml");
  List<String> actualXmls=modules.normalizeXmls(active);
  Assert.assertThat("Resolved XMLs: " + actualXmls,actualXmls,contains(expectedXmls.toArray()));
}
