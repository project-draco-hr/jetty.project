{
  File homeDir=MavenTestingUtils.getTestResourceDir("dist-home");
  File baseDir=testdir.getEmptyDir();
  String cmdLine[]=new String[]{"jetty.version=TEST"};
  CommandLineConfigSource cmdLineSource=new CommandLineConfigSource(cmdLine);
  ConfigSources config=new ConfigSources();
  config.add(cmdLineSource);
  config.add(new JettyHomeConfigSource(homeDir.toPath()));
  config.add(new JettyBaseConfigSource(baseDir.toPath()));
  BaseHome basehome=new BaseHome(config);
  StartArgs args=new StartArgs();
  args.parse(config);
  Modules modules=new Modules(basehome,args);
  modules.registerAll();
  List<String> moduleNames=new ArrayList<>();
  for (  Module mod : modules) {
    if (mod.getName().equals("alpn-boot")) {
      continue;
    }
    moduleNames.add(mod.getName());
  }
  List<String> expected=new ArrayList<>();
  expected.add("jmx");
  expected.add("client");
  expected.add("cdi");
  expected.add("continuation");
  expected.add("gzip");
  expected.add("hawtio");
  expected.add("jamon");
  expected.add("jaspi");
  expected.add("jminix");
  expected.add("jmx-remote");
  expected.add("jolokia");
  expected.add("jstl");
  expected.add("jvm");
  expected.add("quickstart");
  expected.add("servlets");
  expected.add("setuid");
  expected.add("spring");
  expected.add("home-base-warning");
  expected.add("http2");
  expected.add("fcgi");
  expected.add("stats");
  expected.add("deploy");
  expected.add("debug");
  expected.add("security");
  expected.add("ext");
  expected.add("websocket");
  expected.add("rewrite");
  expected.add("ipaccess");
  expected.add("xinetd");
  expected.add("proxy");
  expected.add("webapp");
  expected.add("jndi");
  expected.add("lowresources");
  expected.add("https");
  expected.add("plus");
  expected.add("requestlog");
  expected.add("jsp");
  expected.add("monitor");
  expected.add("ssl");
  expected.add("protonego");
  expected.add("servlet");
  expected.add("jaas");
  expected.add("http");
  expected.add("server");
  expected.add("annotations");
  expected.add("resources");
  expected.add("logging");
  ConfigurationAssert.assertContainsUnordered("All Modules",expected,moduleNames);
}
