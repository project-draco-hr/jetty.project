{
  jettyRequest.setHandled(true);
  try {
    boolean proceed=handleAuthentication(request,response,serverAddress);
    if (!proceed) {
      LOG.debug("Missing proxy authentication");
      sendConnectResponse(request,response,HttpServletResponse.SC_PROXY_AUTHENTICATION_REQUIRED);
      return;
    }
    String host=serverAddress;
    int port=80;
    int colon=serverAddress.indexOf(':');
    if (colon > 0) {
      host=serverAddress.substring(0,colon);
      port=Integer.parseInt(serverAddress.substring(colon + 1));
    }
    if (!validateDestination(host,port)) {
      LOG.debug("Destination {}:{} forbidden",host,port);
      sendConnectResponse(request,response,HttpServletResponse.SC_FORBIDDEN);
      return;
    }
    SocketChannel channel=SocketChannel.open();
    channel.socket().setTcpNoDelay(true);
    channel.configureBlocking(false);
    InetSocketAddress address=new InetSocketAddress(host,port);
    channel.connect(address);
    AsyncContext asyncContext=request.startAsync();
    asyncContext.setTimeout(0);
    LOG.debug("Connecting to {}",address);
    ConnectContext connectContext=new ConnectContext(request,response,asyncContext,HttpConnection.getCurrentConnection());
    selector.connect(channel,connectContext);
  }
 catch (  Exception x) {
    onConnectFailure(request,response,null,x);
  }
}
