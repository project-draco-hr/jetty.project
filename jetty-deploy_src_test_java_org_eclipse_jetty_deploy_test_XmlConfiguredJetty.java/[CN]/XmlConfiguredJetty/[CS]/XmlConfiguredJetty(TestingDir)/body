{
  _xmlConfigurations=new ArrayList<URL>();
  Properties properties=new Properties();
  String jettyHomeBase=testdir.getDir().getAbsolutePath();
  int idx=0;
  _jettyHome=new File(jettyHomeBase + "#" + idx);
  while (_jettyHome.exists()) {
    idx++;
    _jettyHome=new File(jettyHomeBase + "#" + idx);
  }
  deleteContents(_jettyHome);
  _jettyHome.mkdirs();
  File logsDir=new File(_jettyHome,"logs");
  logsDir.mkdirs();
  File etcDir=new File(_jettyHome,"etc");
  etcDir.mkdirs();
  IO.copyFile(MavenTestingUtils.getTestResourceFile("etc/realm.properties"),new File(etcDir,"realm.properties"));
  IO.copyFile(MavenTestingUtils.getTestResourceFile("etc/webdefault.xml"),new File(etcDir,"webdefault.xml"));
  File contextsDir=new File(_jettyHome,"contexts");
  if (contextsDir.exists()) {
    deleteContents(contextsDir);
  }
  contextsDir.mkdirs();
  File webappsDir=new File(_jettyHome,"webapps");
  if (webappsDir.exists()) {
    deleteContents(webappsDir);
  }
  webappsDir.mkdirs();
  File tmpDir=new File(_jettyHome,"tmp");
  if (tmpDir.exists()) {
    deleteContents(tmpDir);
  }
  tmpDir.mkdirs();
  File workishDir=new File(_jettyHome,"workish");
  if (workishDir.exists()) {
    deleteContents(workishDir);
  }
  workishDir.mkdirs();
  System.setProperty("java.io.tmpdir",tmpDir.getAbsolutePath());
  properties.setProperty("jetty.home",_jettyHome.getAbsolutePath());
  System.setProperty("jetty.home",_jettyHome.getAbsolutePath());
  properties.setProperty("test.basedir",MavenTestingUtils.getBasedir().getAbsolutePath());
  properties.setProperty("test.resourcesdir",MavenTestingUtils.getTestResourcesDir().getAbsolutePath());
  properties.setProperty("test.webapps",webappsDir.getAbsolutePath());
  properties.setProperty("test.targetdir",MavenTestingUtils.getTargetDir().getAbsolutePath());
  properties.setProperty("test.workdir",workishDir.getAbsolutePath());
  File testConfig=new File(_jettyHome,"xml-configured-jetty.properties");
  FileOutputStream out=new FileOutputStream(testConfig);
  properties.store(out,"Generated by " + XmlConfiguredJetty.class.getName());
  for (  Object key : properties.keySet())   _properties.put(String.valueOf(key),String.valueOf(properties.get(key)));
}
