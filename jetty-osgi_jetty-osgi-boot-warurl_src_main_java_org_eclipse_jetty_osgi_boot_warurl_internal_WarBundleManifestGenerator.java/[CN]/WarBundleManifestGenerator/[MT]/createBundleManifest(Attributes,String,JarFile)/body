{
  HashMap<String,String> res=new HashMap<String,String>();
  for (  Entry<Object,Object> entries : originalManifest.entrySet()) {
    res.put(entries.getKey().toString(),String.valueOf(entries.getValue()));
  }
  MultiMap<String> params=parseQueryString(url);
  String version=params.getString(Constants.BUNDLE_VERSION);
  if (version != null) {
    res.put(Constants.BUNDLE_VERSION,version);
  }
 else {
    String versionInManifest=(String)res.get(Constants.BUNDLE_VERSION);
    if (versionInManifest == null) {
      res.put(Constants.BUNDLE_VERSION,MISSING_VERSION);
    }
  }
  String manversion=params.getString(Constants.BUNDLE_MANIFESTVERSION);
  if (manversion != null) {
    res.put(Constants.BUNDLE_MANIFESTVERSION,manversion);
  }
 else {
    int manv=2;
    try {
      String versionInManifest=(String)res.get(Constants.BUNDLE_MANIFESTVERSION);
      if (versionInManifest != null) {
        manv=Integer.parseInt(versionInManifest.trim());
      }
    }
 catch (    NumberFormatException nfe) {
    }
    res.put(Constants.BUNDLE_MANIFESTVERSION,String.valueOf(manv < 2 ? 2 : manv));
  }
  String symbname=params.getString(Constants.BUNDLE_SYMBOLICNAME);
  if (symbname != null) {
    res.put(Constants.BUNDLE_SYMBOLICNAME,symbname);
  }
 else {
    symbname=(String)res.get(Constants.BUNDLE_SYMBOLICNAME);
    if (symbname == null) {
      int lastSlash=url.lastIndexOf('/');
      int beforeQueryString=url.indexOf(lastSlash,'?');
      if (beforeQueryString == -1) {
        beforeQueryString=url.indexOf(lastSlash,'#');
        if (beforeQueryString == -1) {
          beforeQueryString=url.length();
        }
      }
      symbname=url.substring(lastSlash + 1,beforeQueryString);
      res.put(Constants.BUNDLE_SYMBOLICNAME,symbname);
    }
  }
  String extraBundleClasspath=params.getString(Constants.BUNDLE_CLASSPATH);
  String alreadyBundleClasspath=res.get(Constants.BUNDLE_CLASSPATH);
  if (alreadyBundleClasspath == null) {
    StringBuilder bundleClasspath=new StringBuilder();
    if (jarFile == null || jarFile.getJarEntry("WEB-INF/classes/") != null) {
      bundleClasspath.append("WEB-INF/classes");
    }
    if (jarFile != null) {
      List<String> libs=getJarsInWebInfLib(jarFile);
      if (extraBundleClasspath != null) {
        libs.add(extraBundleClasspath);
      }
      for (      String lib : libs) {
        if (bundleClasspath.length() != 0) {
          bundleClasspath.append(",");
        }
        bundleClasspath.append(lib);
      }
    }
    alreadyBundleClasspath=bundleClasspath.toString();
  }
  res.put(Constants.BUNDLE_CLASSPATH,alreadyBundleClasspath + (extraBundleClasspath == null ? "" : "," + extraBundleClasspath));
  String extraImportPackage=params.getString(Constants.IMPORT_PACKAGE);
  String alreadyImportPackage=res.get(Constants.IMPORT_PACKAGE);
  if (alreadyImportPackage == null) {
    alreadyImportPackage="javax.servlet; version=\"2.5\"," + "javax.servlet.http;version=\"2.5\"," + "javax.el;version=\"1.0\""+ "javax.jsp;version=\"2.1\";resolution:=optional,"+ "javax.jsp.tagext;version=\"2.1\";resolution:=optional";
  }
  if (extraImportPackage != null) {
    res.put(Constants.IMPORT_PACKAGE,(alreadyImportPackage == null ? "" : alreadyImportPackage + ",") + extraImportPackage);
  }
  String extraExportPackage=params.getString(Constants.EXPORT_PACKAGE);
  String alreadyExportPackage=res.get(Constants.EXPORT_PACKAGE);
  if (extraExportPackage != null) {
    res.put(Constants.EXPORT_PACKAGE,(alreadyExportPackage == null ? "" : alreadyExportPackage + ",") + extraImportPackage);
  }
  String webContextPath=params.getString("Web-ContextPath");
  if (webContextPath != null) {
    res.put("Web-ContextPath",webContextPath);
  }
 else {
    webContextPath=res.get("Web-ContextPath");
    if (webContextPath == null) {
      if (symbname.endsWith(".war")) {
        webContextPath="/" + symbname.substring(0,symbname.length() - ".war".length());
      }
 else {
        webContextPath="/" + symbname;
      }
      res.put("Web-ContextPath",webContextPath);
    }
  }
  String jspExtractLocation=params.getString("Web-JSPExtractLocation");
  if (jspExtractLocation != null) {
    res.put("Web-JSPExtractLocation",jspExtractLocation);
  }
 else {
  }
  Attributes newAttrs=new Attributes();
  for (  Entry<String,String> e : res.entrySet()) {
    newAttrs.putValue(e.getKey(),e.getValue());
  }
  return newAttrs;
}
