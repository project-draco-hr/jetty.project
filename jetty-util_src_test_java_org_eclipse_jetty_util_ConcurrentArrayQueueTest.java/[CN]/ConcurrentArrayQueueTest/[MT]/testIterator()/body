{
  int blockSize=2;
  ConcurrentArrayQueue<Integer> queue=newConcurrentArrayQueue(blockSize);
  queue.offer(1);
  Iterator<Integer> iterator=queue.iterator();
  Assert.assertTrue(iterator.hasNext());
  Assert.assertEquals(1,(int)iterator.next());
  Assert.assertFalse(iterator.hasNext());
  try {
    iterator.next();
    Assert.fail();
  }
 catch (  NoSuchElementException ignored) {
  }
  queue=newConcurrentArrayQueue(blockSize);
  for (int i=0; i < blockSize * 2; ++i)   queue.offer(i);
  queue.poll();
  iterator=queue.iterator();
  Assert.assertTrue(iterator.hasNext());
  Assert.assertEquals(1,(int)iterator.next());
  Assert.assertTrue(iterator.hasNext());
  Assert.assertEquals(2,(int)iterator.next());
  Assert.assertTrue(iterator.hasNext());
  Assert.assertEquals(3,(int)iterator.next());
  Assert.assertFalse(iterator.hasNext());
  try {
    iterator.next();
    Assert.fail();
  }
 catch (  NoSuchElementException ignored) {
  }
}
