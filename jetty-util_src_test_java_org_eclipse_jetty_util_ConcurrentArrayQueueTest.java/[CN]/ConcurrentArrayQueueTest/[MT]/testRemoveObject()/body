{
  int blockSize=2;
  ConcurrentArrayQueue<Integer> queue=newConcurrentArrayQueue(blockSize);
  queue.add(1);
  queue.add(2);
  queue.add(3);
  Assert.assertFalse(queue.remove(4));
  int size=queue.size();
  Assert.assertTrue(queue.remove(2));
  --size;
  Assert.assertEquals(size,queue.size());
  Iterator<Integer> iterator=queue.iterator();
  Assert.assertTrue(iterator.hasNext());
  Assert.assertEquals(1,(int)iterator.next());
  Assert.assertTrue(iterator.hasNext());
  Assert.assertEquals(3,(int)iterator.next());
  queue.offer(4);
  ++size;
  Assert.assertTrue(queue.remove(3));
  --size;
  Assert.assertEquals(size,queue.size());
  iterator=queue.iterator();
  Assert.assertTrue(iterator.hasNext());
  Assert.assertEquals(1,(int)iterator.next());
  Assert.assertTrue(iterator.hasNext());
  Assert.assertEquals(4,(int)iterator.next());
  Assert.assertTrue(queue.remove(1));
  --size;
  Assert.assertTrue(queue.remove(4));
  --size;
  iterator=queue.iterator();
  Assert.assertFalse(iterator.hasNext());
}
