{
  startServer(new HttpServlet(){
  }
);
  String host="localhost";
  int port=connector.getLocalPort();
  PingFrame frame=new PingFrame(new byte[8],false);
  ByteBufferPool.Lease lease=new ByteBufferPool.Lease(byteBufferPool);
  generator.control(lease,frame);
  lease.getByteBuffers().get(0).putShort(0,(short)7);
  lease.prepend(ByteBuffer.wrap(PrefaceParser.PREFACE_BYTES),false);
  final CountDownLatch latch=new CountDownLatch(1);
  try (Socket client=new Socket(host,port)){
    OutputStream output=client.getOutputStream();
    for (    ByteBuffer buffer : lease.getByteBuffers()) {
      output.write(BufferUtil.toArray(buffer));
    }
    Parser parser=new Parser(byteBufferPool,new Parser.Listener.Adapter(){
      @Override public boolean onGoAway(      GoAwayFrame frame){
        Assert.assertEquals(ErrorCode.FRAME_SIZE_ERROR,frame.getError());
        latch.countDown();
        return false;
      }
    }
);
    parseResponse(client,parser);
    Assert.assertTrue(latch.await(5,TimeUnit.SECONDS));
  }
 }
