{
  final CountDownLatch serverLatch=new CountDownLatch(1);
  startServer(new HttpServlet(){
    @Override protected void service(    HttpServletRequest request,    HttpServletResponse response) throws ServletException, IOException {
      serverLatch.countDown();
    }
  }
);
  generator=new Generator(byteBufferPool,4096,4);
  ByteBufferPool.Lease lease=frames.call();
  try (Socket client=new Socket("localhost",connector.getLocalPort())){
    OutputStream output=client.getOutputStream();
    for (    ByteBuffer buffer : lease.getByteBuffers())     output.write(BufferUtil.toArray(buffer));
    output.flush();
    Assert.assertTrue(serverLatch.await(5,TimeUnit.SECONDS));
    final CountDownLatch clientLatch=new CountDownLatch(1);
    Parser parser=new Parser(byteBufferPool,new Parser.Listener.Adapter(){
      @Override public void onHeaders(      HeadersFrame frame){
        if (frame.isEndStream())         clientLatch.countDown();
      }
    }
,4096,8192);
    boolean closed=parseResponse(client,parser);
    Assert.assertTrue(clientLatch.await(5,TimeUnit.SECONDS));
    Assert.assertFalse(closed);
  }
 }
