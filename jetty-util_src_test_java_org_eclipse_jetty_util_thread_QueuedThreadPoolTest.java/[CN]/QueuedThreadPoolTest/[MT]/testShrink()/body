{
  final AtomicInteger sleep=new AtomicInteger(100);
  Runnable job=new Runnable(){
    public void run(){
      try {
        Thread.sleep(sleep.get());
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
;
  QueuedThreadPool tp=new QueuedThreadPool();
  tp.setMinThreads(2);
  tp.setMaxThreads(10);
  tp.setMaxIdleTimeMs(400);
  tp.setThreadsPriority(Thread.NORM_PRIORITY - 1);
  tp.start();
  waitForIdle(tp,2);
  waitForThreads(tp,2);
  sleep.set(200);
  tp.dispatch(job);
  tp.dispatch(job);
  for (int i=0; i < 20; i++)   tp.dispatch(job);
  waitForThreads(tp,10);
  waitForIdle(tp,0);
  sleep.set(5);
  for (int i=0; i < 500; i++) {
    tp.dispatch(job);
    Thread.sleep(10);
  }
  waitForThreads(tp,2);
  waitForIdle(tp,2);
}
