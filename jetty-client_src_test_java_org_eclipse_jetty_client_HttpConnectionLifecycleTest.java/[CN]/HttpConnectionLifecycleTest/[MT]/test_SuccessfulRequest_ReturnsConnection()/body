{
  start(new EmptyServerHandler());
  String scheme="http";
  String host="localhost";
  int port=connector.getLocalPort();
  HttpDestination destination=(HttpDestination)client.getDestination(scheme,host,port);
  final BlockingQueue<Connection> idleConnections=destination.getIdleConnections();
  Assert.assertEquals(0,idleConnections.size());
  final BlockingQueue<Connection> activeConnections=destination.getActiveConnections();
  Assert.assertEquals(0,activeConnections.size());
  final CountDownLatch headersLatch=new CountDownLatch(1);
  final CountDownLatch successLatch=new CountDownLatch(3);
  client.newRequest(host,port).listener(new Request.Listener.Empty(){
    @Override public void onSuccess(    Request request){
      successLatch.countDown();
    }
  }
).send(new Response.Listener.Empty(){
    @Override public void onHeaders(    Response response){
      Assert.assertEquals(0,idleConnections.size());
      Assert.assertEquals(1,activeConnections.size());
      headersLatch.countDown();
    }
    @Override public void onSuccess(    Response response){
      successLatch.countDown();
    }
    @Override public void onComplete(    Result result){
      Assert.assertFalse(result.isFailed());
      successLatch.countDown();
    }
  }
);
  Assert.assertTrue(headersLatch.await(5,TimeUnit.SECONDS));
  Assert.assertTrue(successLatch.await(5,TimeUnit.SECONDS));
  Assert.assertEquals(1,idleConnections.size());
  Assert.assertEquals(0,activeConnections.size());
}
