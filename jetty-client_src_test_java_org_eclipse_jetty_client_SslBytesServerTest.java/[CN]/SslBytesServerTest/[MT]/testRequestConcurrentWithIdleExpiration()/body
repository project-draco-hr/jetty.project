{
  final SSLSocket client=newClient();
  final OutputStream clientOutput=client.getOutputStream();
  final CountDownLatch latch=new CountDownLatch(1);
  idleHook=new Runnable(){
    public void run(){
      try {
        clientOutput.write(("" + "GET / HTTP/1.1\r\n" + "Host: localhost\r\n"+ "\r\n").getBytes("UTF-8"));
        clientOutput.flush();
        latch.countDown();
      }
 catch (      Exception x) {
        x.printStackTrace();
      }
    }
  }
;
  SimpleProxy.AutomaticFlow automaticProxyFlow=proxy.startAutomaticFlow();
  client.startHandshake();
  Assert.assertTrue(automaticProxyFlow.stop(5,TimeUnit.SECONDS));
  Assert.assertTrue(latch.await(idleTimeout * 2,TimeUnit.MILLISECONDS));
  TLSRecord record=proxy.readFromServer();
  Assert.assertNotNull(record);
  Assert.assertEquals(TLSRecord.Type.ALERT,record.getType());
  record=proxy.readFromClient();
  Assert.assertEquals(TLSRecord.Type.APPLICATION,record.getType());
  proxy.flushToServer(record,0);
  TimeUnit.MILLISECONDS.sleep(500);
  Assert.assertThat(sslHandles.get(),lessThan(20));
  Assert.assertThat(sslFlushes.get(),lessThan(20));
  Assert.assertThat(httpParses.get(),lessThan(50));
}
