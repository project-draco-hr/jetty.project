{
  final CountDownLatch failedCalledLatch=new CountDownLatch(1);
  final CountDownLatch writeCalledLatch=new CountDownLatch(1);
  final CountDownLatch writeCompleteLatch=new CountDownLatch(1);
  final WriteFlusher writeFlusher=new WriteFlusher(_endPointMock){
    @Override public void write(    Callback callback,    ByteBuffer... buffers){
      super.write(callback,buffers);
      writeCompleteLatch.countDown();
    }
    @Override protected void onIncompleteFlush(){
    }
  }
;
  endPointFlushExpectation(writeCalledLatch,failedCalledLatch);
  ExposingStateCallback callback=new ExposingStateCallback();
  executor.submit(new Writer(writeFlusher,callback));
  assertThat("Write has been called.",writeCalledLatch.await(5,TimeUnit.SECONDS),is(true));
  executor.submit(new FailedCaller(writeFlusher,failedCalledLatch)).get();
  assertThat("write complete",writeCompleteLatch.await(5,TimeUnit.SECONDS),is(true));
  try {
    callback.get(5,TimeUnit.SECONDS);
    assertThat("callback completed",callback.isCompleted(),is(true));
    assertThat("callback failed",callback.isFailed(),is(false));
  }
 catch (  ExecutionException e) {
    assertThat("callback failed",callback.isFailed(),is(true));
  }
  assertThat("callback completed",callback.isDone(),is(true));
}
