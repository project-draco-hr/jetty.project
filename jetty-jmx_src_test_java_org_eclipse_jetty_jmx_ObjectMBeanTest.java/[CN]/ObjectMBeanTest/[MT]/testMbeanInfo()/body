{
  Derived derived=new Derived();
  ObjectMBean mbean=(ObjectMBean)ObjectMBean.mbeanFor(derived);
  ObjectMBean managed=(ObjectMBean)ObjectMBean.mbeanFor(derived.getManagedInstance());
  mbean.setMBeanContainer(container);
  managed.setMBeanContainer(container);
  container.addBean(mbean);
  container.addBean(managed);
  MBeanInfo toss=managed.getMBeanInfo();
  Assert.assertNotNull(mbean.getMBeanInfo());
  MBeanInfo info=mbean.getMBeanInfo();
  Assert.assertEquals("name does not match","com.acme.Derived",info.getClassName());
  Assert.assertEquals("description does not match","Test the mbean stuff",info.getDescription());
  for (  MBeanAttributeInfo i : info.getAttributes()) {
    LOG.debug(i.toString());
  }
  Assert.assertEquals("attribute count does not match",9,info.getAttributes().length);
  Assert.assertEquals("attribute values does not match","Full Name",mbean.getAttribute("fname"));
  mbean.setAttribute(new Attribute("fname","Fuller Name"));
  Assert.assertEquals("set attribute value does not match","Fuller Name",mbean.getAttribute("fname"));
  Assert.assertEquals("proxy attribute values do not match","goop",mbean.getAttribute("goop"));
  Assert.assertEquals("operation count does not match",5,info.getOperations().length);
  MBeanOperationInfo[] opinfos=info.getOperations();
  boolean publish=false;
  boolean doodle=false;
  boolean good=false;
  for (int i=0; i < opinfos.length; ++i) {
    MBeanOperationInfo opinfo=opinfos[i];
    LOG.debug(opinfo.getName());
    if ("publish".equals(opinfo.getName())) {
      publish=true;
      Assert.assertEquals("description doesn't match","publish something",opinfo.getDescription());
    }
    if ("doodle".equals(opinfo.getName())) {
      doodle=true;
      Assert.assertEquals("description doesn't match","Doodle something",opinfo.getDescription());
      MBeanParameterInfo[] pinfos=opinfo.getSignature();
      Assert.assertEquals("parameter description doesn't match","A description of the argument",pinfos[0].getDescription());
      Assert.assertEquals("parameter name doesn't match","doodle",pinfos[0].getName());
    }
    if ("good".equals(opinfo.getName())) {
      good=true;
      Assert.assertEquals("description does not match","test of proxy operations",opinfo.getDescription());
      Assert.assertEquals("execution contexts wrong","not bad",mbean.invoke("good",new Object[]{},new String[]{}));
    }
  }
  Assert.assertTrue("publish operation was not not found",publish);
  Assert.assertTrue("doodle operation was not not found",doodle);
  Assert.assertTrue("good operation was not not found",good);
  Managed managedInstance=(Managed)mbean.getAttribute("managedInstance");
  Assert.assertNotNull(managedInstance);
  Assert.assertEquals("managed instance returning nonsense","foo",managedInstance.getManaged());
}
