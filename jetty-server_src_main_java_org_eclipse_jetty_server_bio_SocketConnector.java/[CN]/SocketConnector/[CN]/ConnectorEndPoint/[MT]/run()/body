{
  try {
    connectionOpened(_connection);
synchronized (_connections) {
      _connections.add(this);
    }
    while (isStarted() && !isClosed()) {
      if (_connection.isIdle()) {
        if (isLowResources())         setMaxIdleTime(getLowResourcesMaxIdleTime());
      }
      _connection=_connection.handle();
    }
  }
 catch (  EofException e) {
    Log.debug("EOF",e);
    try {
      close();
    }
 catch (    IOException e2) {
      Log.ignore(e2);
    }
  }
catch (  HttpException e) {
    Log.debug("BAD",e);
    try {
      close();
    }
 catch (    IOException e2) {
      Log.ignore(e2);
    }
  }
catch (  Exception e) {
    Log.warn("handle failed?",e);
    try {
      close();
    }
 catch (    IOException e2) {
      Log.ignore(e2);
    }
  }
 finally {
    connectionClosed(_connection);
synchronized (_connections) {
      _connections.remove(this);
    }
    try {
      if (!_socket.isClosed()) {
        long timestamp=System.currentTimeMillis();
        int max_idle=getMaxIdleTime();
        _socket.setSoTimeout(getMaxIdleTime());
        int c=0;
        do {
          c=_socket.getInputStream().read();
        }
 while (c >= 0 && (System.currentTimeMillis() - timestamp) < max_idle);
        if (!_socket.isClosed())         _socket.close();
      }
    }
 catch (    IOException e) {
      Log.ignore(e);
    }
  }
}
