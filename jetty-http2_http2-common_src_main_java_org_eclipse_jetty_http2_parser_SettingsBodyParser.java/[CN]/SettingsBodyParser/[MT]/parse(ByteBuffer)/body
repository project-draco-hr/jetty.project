{
  while (buffer.hasRemaining()) {
switch (state) {
case PREPARE:
{
        if (getStreamId() != 0) {
          return notifyConnectionFailure(ErrorCode.PROTOCOL_ERROR,"invalid_settings_frame");
        }
        length=getBodyLength();
        settings=new HashMap<>();
        state=State.SETTING_ID;
        break;
      }
case SETTING_ID:
{
      settingId=buffer.get() & 0xFF;
      state=State.SETTING_VALUE;
      --length;
      if (length <= 0) {
        return notifyConnectionFailure(ErrorCode.PROTOCOL_ERROR,"invalid_settings_frame");
      }
      break;
    }
case SETTING_VALUE:
{
    if (buffer.remaining() >= 4) {
      settingValue=buffer.getInt();
      settings.put(settingId,settingValue);
      state=State.SETTING_ID;
      length-=4;
      if (length == 0) {
        return onSettings(settings);
      }
    }
 else {
      cursor=4;
      settingValue=0;
      state=State.SETTING_VALUE_BYTES;
    }
    break;
  }
case SETTING_VALUE_BYTES:
{
  int currByte=buffer.get() & 0xFF;
  --cursor;
  settingValue+=currByte << (8 * cursor);
  --length;
  if (cursor > 0 && length <= 0) {
    return notifyConnectionFailure(ErrorCode.PROTOCOL_ERROR,"invalid_settings_frame");
  }
  if (cursor == 0) {
    settings.put(settingId,settingValue);
    state=State.SETTING_ID;
    if (length == 0) {
      return onSettings(settings);
    }
  }
  break;
}
default :
{
throw new IllegalStateException();
}
}
}
return Result.PENDING;
}
