{
  List<String> cmdLineArgs=new ArrayList<>();
  File homePath=MavenTestingUtils.getTestResourceDir("usecases/home").getAbsoluteFile();
  cmdLineArgs.add("jetty.home=" + homePath);
  cmdLineArgs.add("user.dir=" + homePath);
  cmdLineArgs.add("--exec");
  cmdLineArgs.add("-Xms1024m");
  cmdLineArgs.add("-Xmx1024m");
  Path extraJar=MavenTestingUtils.getTestResourceFile("extra-libs/example.jar").toPath().normalize();
  Path extraDir=MavenTestingUtils.getTestResourceDir("extra-resources").toPath().normalize();
  extraJar=extraJar.toAbsolutePath();
  extraDir=extraDir.toAbsolutePath();
  assertThat("Extra Jar exists: " + extraJar,Files.exists(extraJar),is(true));
  assertThat("Extra Dir exists: " + extraDir,Files.exists(extraDir),is(true));
  StringBuilder lib=new StringBuilder();
  lib.append("--lib=");
  lib.append(extraJar.toString());
  lib.append(File.pathSeparator);
  lib.append(extraDir.toString());
  cmdLineArgs.add(lib.toString());
  cmdLineArgs.add("jetty.xml");
  cmdLineArgs.add("jetty-jmx.xml");
  cmdLineArgs.add("jetty-logging.xml");
  Main main=new Main();
  StartArgs args=main.processCommandLine(cmdLineArgs.toArray(new String[cmdLineArgs.size()]));
  BaseHome baseHome=main.getBaseHome();
  assertThat("jetty.home",baseHome.getHome(),is(homePath.getAbsolutePath()));
  assertThat("jetty.base",baseHome.getBase(),is(homePath.getAbsolutePath()));
  ConfigurationAssert.assertConfiguration(baseHome,args,"assert-home-with-jvm.txt");
}
