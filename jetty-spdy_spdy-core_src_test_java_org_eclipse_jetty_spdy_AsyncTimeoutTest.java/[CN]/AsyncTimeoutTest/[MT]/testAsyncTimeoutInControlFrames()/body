{
  final long timeout=1000;
  final TimeUnit unit=TimeUnit.MILLISECONDS;
  ByteBufferPool bufferPool=new StandardByteBufferPool();
  Executor threadPool=Executors.newCachedThreadPool();
  ScheduledExecutorService scheduler=Executors.newSingleThreadScheduledExecutor();
  Generator generator=new Generator(new StandardByteBufferPool(),new StandardCompressionFactory.StandardCompressor());
  Session session=new StandardSession(SPDY.V2,bufferPool,threadPool,scheduler,new TestController(),null,1,null,generator){
    @Override public void flush(){
      try {
        unit.sleep(2 * timeout);
        super.flush();
      }
 catch (      InterruptedException x) {
        throw new SPDYException(x);
      }
    }
  }
;
  final CountDownLatch failedLatch=new CountDownLatch(1);
  session.syn(new SynInfo(true),null,timeout,unit,new Callback<Stream>(){
    @Override public void completed(    Stream stream){
    }
    @Override public void failed(    Stream context,    Throwable x){
      failedLatch.countDown();
    }
  }
);
  Assert.assertTrue(failedLatch.await(2 * timeout,unit));
}
