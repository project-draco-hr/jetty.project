{
  if (LOG.isDebugEnabled()) {
    LOG.debug("onBinaryFrame({}, {})",BufferUtil.toDetailString(buffer),fin);
    LOG.debug("events.onBinary={}",events.hasBinary());
    LOG.debug("events.onBinaryStream={}",events.hasBinaryStream());
  }
  boolean handled=false;
  if (events.hasBinary()) {
    handled=true;
    if (activeMessage == null) {
      if (events.isBinaryPartialSupported()) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Partial Binary Message: fin={}",fin);
        }
        activeMessage=new BinaryPartialOnMessage(this);
      }
 else {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Whole Binary Message");
        }
        activeMessage=new SimpleBinaryMessage(this);
      }
    }
  }
  if (events.hasBinaryStream()) {
    handled=true;
    if (activeMessage == null) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Binary Message InputStream");
      }
      final MessageInputStream stream=new MessageInputStream();
      activeMessage=stream;
      dispatch(new Runnable(){
        @Override public void run(){
          try {
            events.callBinaryStream(jsrsession.getAsyncRemote(),websocket,stream);
          }
 catch (          Throwable e) {
            onFatalError(e);
          }
        }
      }
);
    }
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("handled = {}",handled);
  }
  if (handled && (activeMessage != null)) {
    appendMessage(buffer,fin);
  }
}
