{
  try {
    if (LOG.isDebugEnabled())     LOG.debug("Parsing {}",buffer);
    while (true) {
switch (state) {
case HEADER:
{
          if (!headerParser.parse(buffer))           return false;
          state=State.BODY;
          break;
        }
case BODY:
{
        int type=headerParser.getFrameType();
        if (LOG.isDebugEnabled())         LOG.debug("Parsing {} frame",FrameType.from(type));
        if (type < 0 || type >= bodyParsers.length) {
          notifyConnectionFailure(ErrorCodes.PROTOCOL_ERROR,"unknown_frame_type_" + type);
          return false;
        }
        BodyParser bodyParser=bodyParsers[type];
        if (headerParser.getLength() == 0) {
          boolean async=bodyParser.emptyBody();
          reset();
          if (async)           return true;
          if (!buffer.hasRemaining())           return false;
        }
 else {
          BodyParser.Result result=bodyParser.parse(buffer);
switch (result) {
case PENDING:
{
              return false;
            }
case ASYNC:
{
            if (LOG.isDebugEnabled())             LOG.debug("Parsed {} frame, asynchronous processing",FrameType.from(type));
            return true;
          }
case COMPLETE:
{
          if (LOG.isDebugEnabled())           LOG.debug("Parsed {} frame, synchronous processing",FrameType.from(type));
          reset();
          break;
        }
default :
{
        throw new IllegalStateException();
      }
  }
}
break;
}
default :
{
throw new IllegalStateException();
}
}
}
}
 catch (Throwable x) {
LOG.debug(x);
notifyConnectionFailure(ErrorCodes.PROTOCOL_ERROR,"parser_error: " + x);
return false;
}
}
