{
  this.listener=listener;
  HeaderBlockParser headerBlockParser=new HeaderBlockParser(byteBufferPool,new HpackDecoder());
  bodyParsers[FrameType.DATA.getType()]=new DataBodyParser(headerParser,listener);
  bodyParsers[FrameType.HEADERS.getType()]=new HeadersBodyParser(headerParser,listener,headerBlockParser);
  bodyParsers[FrameType.PRIORITY.getType()]=new PriorityBodyParser(headerParser,listener);
  bodyParsers[FrameType.RST_STREAM.getType()]=new ResetBodyParser(headerParser,listener);
  bodyParsers[FrameType.SETTINGS.getType()]=new SettingsBodyParser(headerParser,listener);
  bodyParsers[FrameType.PUSH_PROMISE.getType()]=null;
  bodyParsers[FrameType.PING.getType()]=new PingBodyParser(headerParser,listener);
  bodyParsers[FrameType.GO_AWAY.getType()]=new GoAwayBodyParser(headerParser,listener);
  bodyParsers[FrameType.WINDOW_UPDATE.getType()]=new WindowUpdateBodyParser(headerParser,listener);
  bodyParsers[FrameType.CONTINUATION.getType()]=null;
  bodyParsers[FrameType.ALTSVC.getType()]=null;
  bodyParsers[FrameType.BLOCKED.getType()]=null;
}
