{
  ByteBuffer header=BufferUtil.allocate(4096);
  ByteBuffer buffer=BufferUtil.allocate(16);
  ByteBuffer content0=BufferUtil.toBuffer("Hello World! ");
  ByteBuffer content1=BufferUtil.toBuffer("The quick brown fox jumped over the lazy dog. ");
  HttpFields fields=new HttpFields();
  HttpGenerator gen=new HttpGenerator();
  gen.setVersion(HttpVersion.HTTP_1_1);
  gen.setRequest("POST","/index.html");
  fields.add("Host","something");
  fields.add("User-Agent","test");
  fields.add("Content-Length","59");
  gen.setContentLength(59);
  HttpGenerator.Result result=gen.prepareContent(null,null,content0);
  assertEquals(HttpGenerator.Result.NEED_BUFFER,result);
  assertEquals(HttpGenerator.State.START,gen.getState());
  result=gen.prepareContent(null,buffer,content0);
  assertEquals(HttpGenerator.Result.OK,result);
  assertEquals(HttpGenerator.State.START,gen.getState());
  assertEquals("Hello World! ",BufferUtil.toString(buffer));
  assertEquals(0,content0.remaining());
  result=gen.prepareContent(null,buffer,content1);
  assertEquals(HttpGenerator.Result.NEED_COMMIT,result);
  assertEquals(HttpGenerator.State.START,gen.getState());
  assertEquals("Hello World! The",BufferUtil.toString(buffer));
  assertEquals(43,content1.remaining());
  result=gen.commit(fields,header,buffer,content1,false);
  assertEquals(HttpGenerator.Result.FLUSH,result);
  assertEquals(HttpGenerator.State.COMMITTED,gen.getState());
  assertEquals("Hello World! The",BufferUtil.toString(buffer));
  assertEquals(43,content1.remaining());
  assertTrue(!gen.isChunking());
  String head=BufferUtil.toString(header);
  BufferUtil.clear(header);
  String body=BufferUtil.toString(buffer);
  BufferUtil.clear(buffer);
  result=gen.prepareContent(null,buffer,content1);
  assertEquals(HttpGenerator.Result.FLUSH,result);
  assertEquals(HttpGenerator.State.COMMITTED,gen.getState());
  assertEquals(" quick brown fox",BufferUtil.toString(buffer));
  assertEquals(27,content1.remaining());
  body+=BufferUtil.toString(buffer);
  BufferUtil.clear(buffer);
  result=gen.prepareContent(null,buffer,content1);
  assertEquals(HttpGenerator.Result.FLUSH,result);
  assertEquals(HttpGenerator.State.COMMITTED,gen.getState());
  assertEquals(" jumped over the",BufferUtil.toString(buffer));
  assertEquals(11,content1.remaining());
  body+=BufferUtil.toString(buffer);
  BufferUtil.clear(buffer);
  result=gen.prepareContent(null,buffer,content1);
  assertEquals(HttpGenerator.Result.OK,result);
  assertEquals(HttpGenerator.State.COMMITTED,gen.getState());
  assertEquals(" lazy dog. ",BufferUtil.toString(buffer));
  assertEquals(0,content1.remaining());
  result=gen.complete(null,buffer);
  assertEquals(HttpGenerator.Result.FLUSH,result);
  assertEquals(HttpGenerator.State.COMPLETING,gen.getState());
  assertEquals(" lazy dog. ",BufferUtil.toString(buffer));
  body+=BufferUtil.toString(buffer);
  BufferUtil.clear(buffer);
  result=gen.complete(null,buffer);
  assertEquals(HttpGenerator.Result.OK,result);
  assertEquals(HttpGenerator.State.END,gen.getState());
  assertEquals(0,buffer.remaining());
  assertEquals(59,gen.getContentWritten());
  assertThat(head,containsString("POST /index.html HTTP/1.1"));
  assertThat(head,containsString("Host: something"));
  assertThat(head,containsString("Content-Length: 59"));
  assertThat(head,not(containsString("chunked")));
  assertTrue(head.endsWith("\r\n\r\n"));
}
