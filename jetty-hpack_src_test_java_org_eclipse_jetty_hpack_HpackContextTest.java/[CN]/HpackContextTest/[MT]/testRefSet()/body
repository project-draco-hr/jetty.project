{
  HpackContext ctx=new HpackContext(38 * 5);
  HttpField[] field={new HttpField("fo0","b0r"),new HttpField("fo1","b1r"),new HttpField("fo2","b2r"),new HttpField("fo3","b3r"),new HttpField("fo4","b4r"),new HttpField("fo5","b5r"),new HttpField("fo6","b6r"),new HttpField("fo7","b7r"),new HttpField("fo8","b8r"),new HttpField("fo9","b9r"),new HttpField("foA","bAr")};
  Entry[] entry=new Entry[field.length];
  for (int i=0; i <= 4; i++)   entry[i]=ctx.add(field[i]);
  ctx.addToRefSet(ctx.get(3));
  ctx.addToRefSet(ctx.get(1));
  ctx.addToRefSet(ctx.get(5));
  HashSet<HttpField> fields=new HashSet<>();
  for (  Entry e : ctx.getReferenceSet())   fields.add(e.getHttpField());
  assertEquals(3,fields.size());
  assertTrue(fields.contains(field[0]));
  assertTrue(fields.contains(field[2]));
  assertTrue(fields.contains(field[4]));
  ctx.addToRefSet(ctx.get(1));
  fields.clear();
  for (  Entry e : ctx.getReferenceSet())   fields.add(e.getHttpField());
  assertEquals(3,fields.size());
  assertTrue(fields.contains(field[0]));
  assertTrue(fields.contains(field[2]));
  assertTrue(fields.contains(field[4]));
  ctx.get(3).removeFromRefSet();
  fields.clear();
  for (  Entry e : ctx.getReferenceSet())   fields.add(e.getHttpField());
  assertEquals(2,fields.size());
  assertTrue(fields.contains(field[0]));
  assertTrue(fields.contains(field[4]));
  Iterator<Entry> iter=ctx.iterateReferenceSet();
  iter.next();
  iter.remove();
  fields.clear();
  for (  Entry e : ctx.getReferenceSet())   fields.add(e.getHttpField());
  assertEquals(1,fields.size());
  for (int i=5; i <= 9; i++)   entry[i]=ctx.add(field[i]);
  fields.clear();
  for (  Entry e : ctx.getReferenceSet())   fields.add(e.getHttpField());
  assertEquals(0,fields.size());
}
