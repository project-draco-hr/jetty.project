{
  final DispatcherType dispatch=baseRequest.getDispatcherType();
  final boolean new_context=baseRequest.takeNewContext();
  try {
    if (new_context) {
      if (!_requestAttributeListeners.isEmpty())       for (      ServletRequestAttributeListener l : _requestAttributeListeners)       baseRequest.addEventListener(l);
      if (!_requestListeners.isEmpty()) {
        final ServletRequestEvent sre=new ServletRequestEvent(_scontext,request);
        for (        ServletRequestListener l : _requestListeners)         l.requestInitialized(sre);
      }
    }
    if (DispatcherType.REQUEST.equals(dispatch) && isProtectedTarget(target)) {
      response.sendError(HttpServletResponse.SC_NOT_FOUND);
      baseRequest.setHandled(true);
      return;
    }
    if (never())     nextHandle(target,baseRequest,request,response);
 else     if (_nextScope != null && _nextScope == _handler)     _nextScope.doHandle(target,baseRequest,request,response);
 else     if (_handler != null)     _handler.handle(target,baseRequest,request,response);
  }
  finally {
    if (new_context) {
      if (!_requestListeners.isEmpty()) {
        final ServletRequestEvent sre=new ServletRequestEvent(_scontext,request);
        ListIterator<ServletRequestListener> iter=_requestListeners.listIterator(_requestListeners.size());
        while (iter.hasNext())         iter.next();
        while (iter.hasPrevious())         iter.previous().requestDestroyed(sre);
      }
      if (!_requestAttributeListeners.isEmpty()) {
        ListIterator<ServletRequestAttributeListener> iter=_requestAttributeListeners.listIterator(_requestAttributeListeners.size());
        while (iter.hasNext())         iter.next();
        while (iter.hasPrevious())         baseRequest.removeEventListener(iter.previous());
      }
    }
  }
}
