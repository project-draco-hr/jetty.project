{
  final DispatcherType dispatch=baseRequest.getDispatcherType();
  final boolean new_context=baseRequest.takeNewContext();
  try {
    if (new_context) {
      if (!_servletRequestAttributeListeners.isEmpty())       for (      ServletRequestAttributeListener l : _servletRequestAttributeListeners)       baseRequest.addEventListener(l);
      if (!_servletRequestListeners.isEmpty()) {
        final ServletRequestEvent sre=new ServletRequestEvent(_scontext,request);
        for (        ServletRequestListener l : _servletRequestListeners)         l.requestInitialized(sre);
      }
    }
    if (DispatcherType.REQUEST.equals(dispatch) && isProtectedTarget(target)) {
      response.sendError(HttpServletResponse.SC_NOT_FOUND);
      baseRequest.setHandled(true);
      return;
    }
    if (never())     nextHandle(target,baseRequest,request,response);
 else     if (_nextScope != null && _nextScope == _handler)     _nextScope.doHandle(target,baseRequest,request,response);
 else     if (_handler != null)     _handler.handle(target,baseRequest,request,response);
  }
  finally {
    if (new_context) {
      if (!_servletRequestListeners.isEmpty()) {
        final ServletRequestEvent sre=new ServletRequestEvent(_scontext,request);
        for (int i=_servletRequestListeners.size(); i-- > 0; )         _servletRequestListeners.get(i).requestDestroyed(sre);
      }
      if (!_servletRequestAttributeListeners.isEmpty()) {
        for (int i=_servletRequestAttributeListeners.size(); i-- > 0; )         baseRequest.removeEventListener(_servletRequestAttributeListeners.get(i));
      }
    }
  }
}
