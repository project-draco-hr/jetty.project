{
  LOG.debug("newConnection({},{},{})",channel,endPoint,attachment);
  ConnectPromise connectPromise=(ConnectPromise)attachment;
  try {
    String scheme=connectPromise.getRequest().getRequestURI().getScheme();
    if ("wss".equalsIgnoreCase(scheme)) {
      SslContextFactory sslContextFactory=getSslContextFactory();
      if (sslContextFactory != null) {
        SSLEngine engine=newSSLEngine(sslContextFactory,channel);
        SslConnection sslConnection=new SslConnection(bufferPool,getExecutor(),endPoint,engine);
        sslConnection.setRenegotiationAllowed(sslContextFactory.isRenegotiationAllowed());
        EndPoint sslEndPoint=sslConnection.getDecryptedEndPoint();
        Connection connection=newUpgradeConnection(channel,sslEndPoint,connectPromise);
        sslEndPoint.setIdleTimeout(connectPromise.getClient().getMaxIdleTimeout());
        sslEndPoint.setConnection(connection);
        connectionOpened(connection);
        return sslConnection;
      }
 else {
        throw new IOException("Cannot init SSL");
      }
    }
 else {
      endPoint.setIdleTimeout(connectPromise.getClient().getMaxIdleTimeout());
      return newUpgradeConnection(channel,endPoint,connectPromise);
    }
  }
 catch (  IOException e) {
    LOG.debug(e);
    connectPromise.failed(e);
    throw e;
  }
}
