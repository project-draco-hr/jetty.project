{
  final String data="success";
  start(new AbstractHandler(){
    @Override public void handle(    String target,    Request baseRequest,    HttpServletRequest request,    HttpServletResponse response) throws IOException, ServletException {
      baseRequest.setHandled(true);
      if (request.getRequestURI().endsWith("/done")) {
        IO.copy(request.getInputStream(),new ByteArrayOutputStream());
        response.getOutputStream().print(data);
      }
 else {
        response.sendRedirect("/done");
      }
    }
  }
);
  byte[] content=new byte[10240];
  final CountDownLatch latch=new CountDownLatch(1);
  client.newRequest("localhost",connector.getLocalPort()).scheme(scheme).method(HttpMethod.POST).path("/redirect").header(HttpHeader.EXPECT.asString(),HttpHeaderValue.CONTINUE.asString()).content(new BytesContentProvider(content)).send(new BufferingResponseListener(){
    @Override public void onComplete(    Result result){
      Assert.assertTrue(result.isFailed());
      Assert.assertNotNull(result.getRequestFailure());
      Assert.assertNull(result.getResponseFailure());
      Assert.assertEquals(302,result.getResponse().status());
      latch.countDown();
    }
  }
);
  Assert.assertTrue(latch.await(5,TimeUnit.SECONDS));
}
