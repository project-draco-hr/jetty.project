{
  PathMappings<String> p=new PathMappings<>();
  p.put(new ServletPathSpec("/abs/path"),"1");
  p.put(new ServletPathSpec("/abs/path/longer"),"2");
  p.put(new ServletPathSpec("/animal/bird/*"),"3");
  p.put(new ServletPathSpec("/animal/fish/*"),"4");
  p.put(new ServletPathSpec("/animal/*"),"5");
  p.put(new ServletPathSpec("*.tar.gz"),"6");
  p.put(new ServletPathSpec("*.gz"),"7");
  p.put(new ServletPathSpec("/"),"8");
  p.put(new ServletPathSpec(""),"10");
  p.put(new ServletPathSpec("/\u20ACuro/*"),"11");
  assertEquals("pathMatch exact","/Foo/bar",new ServletPathSpec("/Foo/bar").getPathMatch("/Foo/bar"));
  assertEquals("pathMatch prefix","/Foo",new ServletPathSpec("/Foo/*").getPathMatch("/Foo/bar"));
  assertEquals("pathMatch prefix","/Foo",new ServletPathSpec("/Foo/*").getPathMatch("/Foo/"));
  assertEquals("pathMatch prefix","/Foo",new ServletPathSpec("/Foo/*").getPathMatch("/Foo"));
  assertEquals("pathMatch suffix","/Foo/bar.ext",new ServletPathSpec("*.ext").getPathMatch("/Foo/bar.ext"));
  assertEquals("pathMatch default","/Foo/bar.ext",new ServletPathSpec("/").getPathMatch("/Foo/bar.ext"));
  assertEquals("pathInfo exact",null,new ServletPathSpec("/Foo/bar").getPathInfo("/Foo/bar"));
  assertEquals("pathInfo prefix","/bar",new ServletPathSpec("/Foo/*").getPathInfo("/Foo/bar"));
  assertEquals("pathInfo prefix","/*",new ServletPathSpec("/Foo/*").getPathInfo("/Foo/*"));
  assertEquals("pathInfo prefix","/",new ServletPathSpec("/Foo/*").getPathInfo("/Foo/"));
  assertEquals("pathInfo prefix",null,new ServletPathSpec("/Foo/*").getPathInfo("/Foo"));
  assertEquals("pathInfo suffix",null,new ServletPathSpec("*.ext").getPathInfo("/Foo/bar.ext"));
  assertEquals("pathInfo default",null,new ServletPathSpec("/").getPathInfo("/Foo/bar.ext"));
  p.put(new ServletPathSpec("/*"),"0");
  assertEquals("Match absolute path","/abs/path",p.getMatch("/abs/path").getPathSpec().pathSpec);
  assertEquals("Match absolute path","1",p.getMatch("/abs/path").getResource());
  assertEquals("Mismatch absolute path","0",p.getMatch("/abs/path/xxx").getResource());
  assertEquals("Mismatch absolute path","0",p.getMatch("/abs/pith").getResource());
  assertEquals("Match longer absolute path","2",p.getMatch("/abs/path/longer").getResource());
  assertEquals("Not exact absolute path","0",p.getMatch("/abs/path/").getResource());
  assertEquals("Not exact absolute path","0",p.getMatch("/abs/path/xxx").getResource());
  assertEquals("Match longest prefix","3",p.getMatch("/animal/bird/eagle/bald").getResource());
  assertEquals("Match longest prefix","4",p.getMatch("/animal/fish/shark/grey").getResource());
  assertEquals("Match longest prefix","5",p.getMatch("/animal/insect/bug").getResource());
  assertEquals("mismatch exact prefix","5",p.getMatch("/animal").getResource());
  assertEquals("mismatch exact prefix","5",p.getMatch("/animal/").getResource());
  assertEquals("Match longest suffix","0",p.getMatch("/suffix/path.tar.gz").getResource());
  assertEquals("Match longest suffix","0",p.getMatch("/suffix/path.gz").getResource());
  assertEquals("prefix rather than suffix","5",p.getMatch("/animal/path.gz").getResource());
  assertEquals("default","0",p.getMatch("/Other/path").getResource());
  assertEquals("pathMatch /*","",new ServletPathSpec("/*").getPathMatch("/xxx/zzz"));
  assertEquals("pathInfo /*","/xxx/zzz",new ServletPathSpec("/*").getPathInfo("/xxx/zzz"));
  assertTrue("match /",new ServletPathSpec("/").matches("/anything"));
  assertTrue("match /*",new ServletPathSpec("/*").matches("/anything"));
  assertTrue("match /foo",new ServletPathSpec("/foo").matches("/foo"));
  assertTrue("!match /foo",!new ServletPathSpec("/foo").matches("/bar"));
  assertTrue("match /foo/*",new ServletPathSpec("/foo/*").matches("/foo"));
  assertTrue("match /foo/*",new ServletPathSpec("/foo/*").matches("/foo/"));
  assertTrue("match /foo/*",new ServletPathSpec("/foo/*").matches("/foo/anything"));
  assertTrue("!match /foo/*",!new ServletPathSpec("/foo/*").matches("/bar"));
  assertTrue("!match /foo/*",!new ServletPathSpec("/foo/*").matches("/bar/"));
  assertTrue("!match /foo/*",!new ServletPathSpec("/foo/*").matches("/bar/anything"));
  assertTrue("match *.foo",new ServletPathSpec("*.foo").matches("anything.foo"));
  assertTrue("!match *.foo",!new ServletPathSpec("*.foo").matches("anything.bar"));
  assertEquals("match / with ''","10",p.getMatch("/").getResource());
  assertTrue("match \"\"",new ServletPathSpec("").matches("/"));
}
