{
  Request baseRequest=(request instanceof Request) ? ((Request)request) : HttpConnection.getCurrentConnection().getRequest();
  Response base_response=baseRequest.getResponse();
  response.resetBuffer();
  base_response.fwdReset();
  request.removeAttribute(__JSP_FILE);
  if (!(request instanceof HttpServletRequest))   request=new ServletRequestHttpWrapper(request);
  if (!(response instanceof HttpServletResponse))   response=new ServletResponseHttpWrapper(response);
  final String old_uri=baseRequest.getRequestURI();
  final String old_context_path=baseRequest.getContextPath();
  final String old_servlet_path=baseRequest.getServletPath();
  final String old_path_info=baseRequest.getPathInfo();
  final String old_query=baseRequest.getQueryString();
  final Attributes old_attr=baseRequest.getAttributes();
  final DispatcherType old_type=baseRequest.getDispatcherType();
  MultiMap<String> old_params=baseRequest.getParameters();
  try {
    baseRequest.setDispatcherType(dispatch);
    if (_named != null)     _contextHandler.handle(_named,baseRequest,(HttpServletRequest)request,(HttpServletResponse)response);
 else {
      String query=_dQuery;
      if (query != null) {
        if (old_params == null) {
          baseRequest.extractParameters();
          old_params=baseRequest.getParameters();
        }
        baseRequest.mergeQueryString(query);
      }
      ForwardAttributes attr=new ForwardAttributes(old_attr);
      if (old_attr.getAttribute(FORWARD_REQUEST_URI) != null) {
        attr._pathInfo=(String)old_attr.getAttribute(FORWARD_PATH_INFO);
        attr._query=(String)old_attr.getAttribute(FORWARD_QUERY_STRING);
        attr._requestURI=(String)old_attr.getAttribute(FORWARD_REQUEST_URI);
        attr._contextPath=(String)old_attr.getAttribute(FORWARD_CONTEXT_PATH);
        attr._servletPath=(String)old_attr.getAttribute(FORWARD_SERVLET_PATH);
      }
 else {
        attr._pathInfo=old_path_info;
        attr._query=old_query;
        attr._requestURI=old_uri;
        attr._contextPath=old_context_path;
        attr._servletPath=old_servlet_path;
      }
      baseRequest.setRequestURI(_uri);
      baseRequest.setContextPath(_contextHandler.getContextPath());
      baseRequest.setAttributes(attr);
      _contextHandler.handle(_path,baseRequest,(HttpServletRequest)request,(HttpServletResponse)response);
      if (baseRequest.getResponse().isWriting()) {
        try {
          response.getWriter().close();
        }
 catch (        IllegalStateException e) {
          response.getOutputStream().close();
        }
      }
 else {
        try {
          response.getOutputStream().close();
        }
 catch (        IllegalStateException e) {
          response.getWriter().close();
        }
      }
    }
  }
  finally {
    baseRequest.setRequestURI(old_uri);
    baseRequest.setContextPath(old_context_path);
    baseRequest.setServletPath(old_servlet_path);
    baseRequest.setPathInfo(old_path_info);
    baseRequest.setAttributes(old_attr);
    baseRequest.setParameters(old_params);
    baseRequest.setQueryString(old_query);
    baseRequest.setDispatcherType(old_type);
  }
}
