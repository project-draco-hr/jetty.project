{
  Request baseRequest=(request instanceof Request) ? ((Request)request) : HttpChannel.getCurrentHttpChannel().getRequest();
  if (!(request instanceof HttpServletRequest))   request=new ServletRequestHttpWrapper(request);
  if (!(response instanceof HttpServletResponse))   response=new ServletResponseHttpWrapper(response);
  final DispatcherType old_type=baseRequest.getDispatcherType();
  final Attributes old_attr=baseRequest.getAttributes();
  MultiMap<String> old_params=baseRequest.getParameters();
  try {
    baseRequest.setDispatcherType(DispatcherType.INCLUDE);
    baseRequest.getResponse().include();
    if (_named != null)     _contextHandler.handle(_named,baseRequest,(HttpServletRequest)request,(HttpServletResponse)response);
 else {
      String query=_dQuery;
      if (query != null) {
        if (old_params == null) {
          baseRequest.extractParameters();
          old_params=baseRequest.getParameters();
        }
        MultiMap<String> parameters=new MultiMap<>();
        UrlEncoded.decodeTo(query,parameters,baseRequest.getCharacterEncoding(),-1);
        if (old_params != null) {
          parameters.addAllValues(old_params);
        }
        baseRequest.setParameters(parameters);
      }
      IncludeAttributes attr=new IncludeAttributes(old_attr);
      attr._requestURI=_uri;
      attr._contextPath=_contextHandler.getContextPath();
      attr._servletPath=null;
      attr._pathInfo=_path;
      attr._query=query;
      baseRequest.setAttributes(attr);
      _contextHandler.handle(_path,baseRequest,(HttpServletRequest)request,(HttpServletResponse)response);
    }
  }
  finally {
    baseRequest.setAttributes(old_attr);
    baseRequest.getResponse().included();
    baseRequest.setParameters(old_params);
    baseRequest.setDispatcherType(old_type);
  }
}
