{
  JSON json=new JSON();
  json.addConvertor(Date.class,new JSONDateConvertor("MM/dd/yyyy HH:mm:ss zzz",TimeZone.getTimeZone("GMT"),false));
  json.addConvertor(Object.class,new JSONObjectConvertor());
  Woggle w0=new Woggle();
  Gizmo g0=new Gizmo();
  w0.name="woggle0";
  w0.nested=g0;
  w0.number=100;
  g0.name="woggle1";
  g0.nested=null;
  g0.number=-101;
  g0.tested=true;
  HashMap map=new HashMap();
  Date dummyDate=new Date(1);
  map.put("date",dummyDate);
  map.put("w0",w0);
  StringBuffer buf=new StringBuffer();
  json.append(buf,map);
  String js=buf.toString();
  assertTrue(js.indexOf("\"date\":\"01/01/1970 00:00:00 GMT\"") >= 0);
  assertTrue(js.indexOf("org.eclipse.jetty.util.ajax.JSONTest$Woggle") >= 0);
  assertTrue(js.indexOf("org.eclipse.jetty.util.ajax.JSONTest$Gizmo") < 0);
  assertTrue(js.indexOf("\"tested\":true") >= 0);
  TimeZone tzone=TimeZone.getTimeZone("JST");
  String tzone3Letter=tzone.getDisplayName(false,TimeZone.SHORT);
  String format="EEE MMMMM dd HH:mm:ss zzz yyyy";
  Locale l=new Locale("ja","JP");
  if (l != null) {
    json.addConvertor(Date.class,new JSONDateConvertor(format,tzone,false,l));
    buf=new StringBuffer();
    json.append(buf,map);
    js=buf.toString();
    assertTrue(js.indexOf("\"date\":\"\u6728 1\u6708 01 09:00:00 JST 1970\"") >= 0);
    assertTrue(js.indexOf("org.eclipse.jetty.util.ajax.JSONTest$Woggle") >= 0);
    assertTrue(js.indexOf("org.eclipse.jetty.util.ajax.JSONTest$Gizmo") < 0);
    assertTrue(js.indexOf("\"tested\":true") >= 0);
  }
  json.addConvertor(Date.class,new JSONDateConvertor(true));
  w0.nested=null;
  buf=new StringBuffer();
  json.append(buf,map);
  js=buf.toString();
  assertTrue(js.indexOf("\"date\":\"Thu Jan 01 00:00:00 GMT 1970\"") < 0);
  assertTrue(js.indexOf("org.eclipse.jetty.util.ajax.JSONTest$Woggle") >= 0);
  assertTrue(js.indexOf("org.eclipse.jetty.util.ajax.JSONTest$Gizmo") < 0);
  map=(HashMap)json.parse(new JSON.StringSource(js));
  assertTrue(map.get("date") instanceof Date);
  assertTrue(map.get("w0") instanceof Woggle);
}
