{
  Pattern section=Pattern.compile("\\s*\\[([^]]*)\\]\\s*");
  if (!FS.canReadFile(file)) {
    StartLog.debug("Skipping read of missing file: %s",basehome.toShortForm(file));
    return;
  }
  try (BufferedReader buf=Files.newBufferedReader(file,StandardCharsets.UTF_8)){
    String sectionType="";
    String line;
    while ((line=buf.readLine()) != null) {
      line=line.trim();
      Matcher sectionMatcher=section.matcher(line);
      if (sectionMatcher.matches()) {
        sectionType=sectionMatcher.group(1).trim().toUpperCase(Locale.ENGLISH);
      }
 else {
        if ((line.length() == 0) || line.startsWith("#")) {
          if ("INI-TEMPLATE".equals(sectionType)) {
            defaultConfig.add(line);
          }
        }
 else {
switch (sectionType) {
case "":
            break;
case "DEPEND":
          parentNames.add(line);
        break;
case "FILES":
      files.add(line);
    break;
case "DEFAULTS":
case "INI-TEMPLATE":
  defaultConfig.add(line);
break;
case "LIB":
libs.add(line);
break;
case "LICENSE":
case "LICENCE":
license.add(line);
break;
case "NAME":
logicalName=line;
break;
case "OPTIONAL":
optionalParentNames.add(line);
break;
case "EXEC":
jvmArgs.add(line);
break;
case "XML":
xmls.add(line);
break;
default :
throw new IOException("Unrecognized Module section: [" + sectionType + "]");
}
}
}
}
}
 }
