{
  Thread currentThread=Thread.currentThread();
  ClassLoader parentLoader=currentThread.getContextClassLoader();
  ClassLoader childLoader1=new URLClassLoader(new URL[0],parentLoader);
  try {
    InitialContext initCtx=new InitialContext();
    Context comp=(Context)initCtx.lookup("java:comp");
    assertNotNull(comp);
    Context env=(Context)comp.createSubcontext("env");
    assertNotNull(env);
    env.bind("foo","aaabbbcccddd");
    assertEquals("aaabbbcccddd",(String)initCtx.lookup("java:comp/env/foo"));
    currentThread.setContextClassLoader(childLoader1);
    comp=(Context)initCtx.lookup("java:comp");
    Context childEnv=(Context)comp.createSubcontext("env");
    assertNotSame(env,childEnv);
    childEnv.bind("foo","eeefffggghhh");
    assertEquals("eeefffggghhh",(String)initCtx.lookup("java:comp/env/foo"));
    currentThread.setContextClassLoader(parentLoader);
    assertEquals("aaabbbcccddd",(String)initCtx.lookup("java:comp/env/foo"));
  }
  finally {
    InitialContext ic=new InitialContext();
    currentThread.setContextClassLoader(parentLoader);
    Context comp=(Context)ic.lookup("java:comp");
    comp.destroySubcontext("env");
    currentThread.setContextClassLoader(childLoader1);
    comp=(Context)ic.lookup("java:comp");
    comp.destroySubcontext("env");
  }
}
