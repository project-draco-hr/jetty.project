{
  short version=2;
  byte flags=SettingsInfo.CLEAR_PERSISTED;
  Map<SettingsInfo.Key,Integer> pairs=new HashMap<>();
  pairs.put(new SettingsInfo.Key(SettingsInfo.Key.FLAG_PERSIST | SettingsInfo.Key.MAX_STREAMS),100);
  pairs.put(new SettingsInfo.Key(SettingsInfo.Key.FLAG_PERSISTED | SettingsInfo.Key.ROUND_TRIP_TIME),500);
  SettingsFrame frame1=new SettingsFrame(version,flags,pairs);
  Generator generator=new Generator(new StandardCompressionFactory().newCompressor());
  ByteBuffer buffer=generator.control(frame1);
  Assert.assertNotNull(buffer);
  TestSPDYParserListener listener=new TestSPDYParserListener();
  Parser parser=new Parser(new StandardCompressionFactory().newDecompressor());
  parser.addListener(listener);
  parser.parse(buffer);
  ControlFrame frame2=listener.getControlFrame();
  Assert.assertNotNull(frame2);
  Assert.assertEquals(ControlFrameType.SETTINGS,frame2.getType());
  SettingsFrame settings=(SettingsFrame)frame2;
  Assert.assertEquals(version,settings.getVersion());
  Assert.assertEquals(flags,settings.getFlags());
  Assert.assertEquals(pairs,settings.getSettings());
}
