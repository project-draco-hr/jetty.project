{
  List<URL> resources;
  _context.setParentLoaderPriority(false);
  resources=toList(_loader.getResources("org/acme/resource.txt"));
  assertEquals(3,resources.size());
  assertEquals(0,resources.get(0).toString().indexOf("jar:file:"));
  assertEquals(-1,resources.get(1).toString().indexOf("test-classes"));
  assertEquals(0,resources.get(2).toString().indexOf("file:"));
  _context.setParentLoaderPriority(true);
  resources=toList(_loader.getResources("org/acme/resource.txt"));
  assertEquals(3,resources.size());
  assertEquals(0,resources.get(0).toString().indexOf("file:"));
  assertEquals(0,resources.get(1).toString().indexOf("jar:file:"));
  assertEquals(-1,resources.get(2).toString().indexOf("test-classes"));
  String[] oldServC=_context.getServerClasses();
  String[] newServC=new String[oldServC.length + 1];
  newServC[0]="org.acme.";
  System.arraycopy(oldServC,0,newServC,1,oldServC.length);
  _context.setServerClasses(newServC);
  _context.setParentLoaderPriority(true);
  resources=toList(_loader.getResources("org/acme/resource.txt"));
  assertEquals(2,resources.size());
  assertEquals(0,resources.get(0).toString().indexOf("jar:file:"));
  assertEquals(0,resources.get(1).toString().indexOf("file:"));
  _context.setServerClasses(oldServC);
  String[] oldSysC=_context.getSystemClasses();
  String[] newSysC=new String[oldSysC.length + 1];
  newSysC[0]="org.acme.";
  System.arraycopy(oldSysC,0,newSysC,1,oldSysC.length);
  _context.setSystemClasses(newSysC);
  _context.setParentLoaderPriority(true);
  resources=toList(_loader.getResources("org/acme/resource.txt"));
  assertEquals(1,resources.size());
  assertEquals(0,resources.get(0).toString().indexOf("file:"));
}
