{
  List<URL> expected=new ArrayList<>();
  List<URL> resources;
  URL webappWebInfLibAcme=new URI("jar:" + testWebappDir.resolve("WEB-INF/lib/acme.jar").toUri().toASCIIString() + "!/org/acme/resource.txt").toURL();
  URL webappWebInfClasses=testWebappDir.resolve("WEB-INF/classes/org/acme/resource.txt").toUri().toURL();
  URL targetTestClasses=this.getClass().getClassLoader().getResource("org/acme/resource.txt");
  _context.setParentLoaderPriority(false);
  dump(_context);
  resources=Collections.list(_loader.getResources("org/acme/resource.txt"));
  expected.clear();
  expected.add(webappWebInfLibAcme);
  expected.add(webappWebInfClasses);
  expected.add(targetTestClasses);
  assertThat("Resources Found (Parent Loader Priority == false)",resources,ordered(expected));
  _context.setParentLoaderPriority(true);
  resources=Collections.list(_loader.getResources("org/acme/resource.txt"));
  expected.clear();
  expected.add(targetTestClasses);
  expected.add(webappWebInfLibAcme);
  expected.add(webappWebInfClasses);
  assertThat("Resources Found (Parent Loader Priority == true)",resources,ordered(expected));
  String[] oldServC=_context.getServerClasses();
  String[] newServC=new String[oldServC.length + 1];
  newServC[0]="org.acme.";
  System.arraycopy(oldServC,0,newServC,1,oldServC.length);
  _context.setServerClasses(newServC);
  _context.setParentLoaderPriority(true);
  resources=Collections.list(_loader.getResources("org/acme/resource.txt"));
  expected.clear();
  expected.add(webappWebInfLibAcme);
  expected.add(webappWebInfClasses);
  assertThat("Resources Found (Parent Loader Priority == true) (with serverClasses filtering)",resources,ordered(expected));
  _context.setServerClasses(oldServC);
  String[] oldSysC=_context.getSystemClasses();
  String[] newSysC=new String[oldSysC.length + 1];
  newSysC[0]="org.acme.";
  System.arraycopy(oldSysC,0,newSysC,1,oldSysC.length);
  _context.setSystemClasses(newSysC);
  _context.setParentLoaderPriority(true);
  resources=Collections.list(_loader.getResources("org/acme/resource.txt"));
  expected.clear();
  expected.add(targetTestClasses);
  assertThat("Resources Found (Parent Loader Priority == true) (with systemClasses filtering)",resources,ordered(expected));
}
