{
  this.watchService=FileSystems.getDefault().newWatchService();
  WatchEvent.Modifier modifiers[]=null;
  boolean nativeService=true;
  try {
    ClassLoader cl=Thread.currentThread().getContextClassLoader();
    Class<?> pollingWatchServiceClass=Class.forName("sun.nio.fs.PollingWatchService",false,cl);
    if (pollingWatchServiceClass.isAssignableFrom(this.watchService.getClass())) {
      nativeService=false;
      LOG.info("Using Non-Native Java {}",pollingWatchServiceClass.getName());
      Class<?> c=Class.forName("com.sun.nio.file.SensitivityWatchEventModifier");
      Field f=c.getField("HIGH");
      modifiers=new WatchEvent.Modifier[]{(WatchEvent.Modifier)f.get(c)};
    }
  }
 catch (  Throwable t) {
    LOG.ignore(t);
  }
  this.watchModifiers=modifiers;
  this.nativeWatchService=nativeService;
}
