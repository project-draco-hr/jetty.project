{
  if (param.type.isAssignableFrom(Session.class)) {
    param.bind(Role.SESSION);
    return true;
  }
  if (param.type.isAssignableFrom(String.class)) {
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoderClass(StringDecoder.class);
    return true;
  }
  if (param.type.isAssignableFrom(Boolean.class)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoderClass(BooleanDecoder.class);
    return true;
  }
  if (param.type.isAssignableFrom(Byte.class) || (param.type == Byte.TYPE)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoderClass(ByteDecoder.class);
    return true;
  }
  if (param.type.isAssignableFrom(Character.class) || (param.type == Character.TYPE)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoderClass(CharacterDecoder.class);
    return true;
  }
  if (param.type.isAssignableFrom(Double.class) || (param.type == Double.TYPE)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoderClass(DoubleDecoder.class);
    return true;
  }
  if (param.type.isAssignableFrom(Float.class) || (param.type == Float.TYPE)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoderClass(FloatDecoder.class);
    return true;
  }
  if (param.type.isAssignableFrom(Integer.class) || (param.type == Integer.TYPE)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoderClass(IntegerDecoder.class);
    return true;
  }
  if (param.type.isAssignableFrom(Long.class) || (param.type == Long.TYPE)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoderClass(LongDecoder.class);
    return true;
  }
  if (param.type.isAssignableFrom(Short.class) || (param.type == Short.TYPE)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoderClass(ShortDecoder.class);
    return true;
  }
  if (param.type.isAssignableFrom(Reader.class)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT_STREAM);
    return true;
  }
  if (param.type.isAssignableFrom(Boolean.TYPE)) {
    param.bind(Role.MESSAGE_PARTIAL_FLAG);
    return true;
  }
  return false;
}
