{
  if (param.type.isAssignableFrom(String.class)) {
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoder(StringDecoder.INSTANCE);
    return true;
  }
  if (param.type.isAssignableFrom(Boolean.class)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoder(BooleanDecoder.INSTANCE);
    return true;
  }
  if (param.type.isAssignableFrom(Byte.class)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoder(ByteDecoder.INSTANCE);
    return true;
  }
  if (param.type.isAssignableFrom(Character.class)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoder(CharacterDecoder.INSTANCE);
    return true;
  }
  if (param.type.isAssignableFrom(Double.class)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoder(DoubleDecoder.INSTANCE);
    return true;
  }
  if (param.type.isAssignableFrom(Float.class)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoder(FloatDecoder.INSTANCE);
    return true;
  }
  if (param.type.isAssignableFrom(Integer.class)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoder(IntegerDecoder.INSTANCE);
    return true;
  }
  if (param.type.isAssignableFrom(Long.class)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoder(LongDecoder.INSTANCE);
    return true;
  }
  if (param.type.isAssignableFrom(Short.class)) {
    assertPartialMessageSupportDisabled(param,callable);
    param.bind(Role.MESSAGE_TEXT);
    callable.setDecoder(ShortDecoder.INSTANCE);
    return true;
  }
  if (param.type.isAssignableFrom(Boolean.TYPE)) {
    param.bind(Role.MESSAGE_PARTIAL_FLAG);
    return true;
  }
  return false;
}
