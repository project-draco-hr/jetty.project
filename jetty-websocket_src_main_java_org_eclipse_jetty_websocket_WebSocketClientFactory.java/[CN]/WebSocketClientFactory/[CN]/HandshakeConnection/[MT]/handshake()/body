{
  String path=_future.getURI().getPath();
  if (path == null || path.length() == 0)   path="/";
  if (_future.getURI().getRawQuery() != null)   path+="?" + _future.getURI().getRawQuery();
  String origin=_future.getOrigin();
  StringBuilder request=new StringBuilder(512);
  request.append("GET ").append(path).append(" HTTP/1.1\r\n").append("Host: ").append(_future.getURI().getHost()).append(":").append(_future.getURI().getPort()).append("\r\n").append("Upgrade: websocket\r\n").append("Connection: Upgrade\r\n").append("Sec-WebSocket-Key: ").append(_key).append("\r\n");
  if (origin != null)   request.append("Origin: ").append(origin).append("\r\n");
  request.append("Sec-WebSocket-Version: ").append(WebSocketConnectionRFC6455.VERSION).append("\r\n");
  if (_future.getProtocol() != null)   request.append("Sec-WebSocket-Protocol: ").append(_future.getProtocol()).append("\r\n");
  Map<String,String> cookies=_future.getCookies();
  if (cookies != null && cookies.size() > 0) {
    for (    String cookie : cookies.keySet())     request.append("Cookie: ").append(QuotedStringTokenizer.quoteIfNeeded(cookie,HttpFields.__COOKIE_DELIM)).append("=").append(QuotedStringTokenizer.quoteIfNeeded(cookies.get(cookie),HttpFields.__COOKIE_DELIM)).append("\r\n");
  }
  request.append("\r\n");
  try {
    Buffer handshake=new ByteArrayBuffer(request.toString(),false);
    int len=handshake.length();
    if (len != _endp.flush(handshake))     throw new IOException("incomplete");
  }
 catch (  IOException e) {
    _future.handshakeFailed(e);
  }
 finally {
    _handshaken=true;
  }
}
