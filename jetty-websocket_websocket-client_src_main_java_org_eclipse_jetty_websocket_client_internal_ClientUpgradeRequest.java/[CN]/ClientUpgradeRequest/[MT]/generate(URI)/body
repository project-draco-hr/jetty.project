{
  this.httpEndPointName=uri.toASCIIString();
  this.host=uri.getHost();
  StringBuilder request=new StringBuilder(512);
  request.append("GET ");
  if (StringUtil.isBlank(uri.getPath())) {
    request.append("/");
  }
 else {
    request.append(uri.getPath());
  }
  if (StringUtil.isNotBlank(uri.getRawQuery())) {
    request.append("?").append(uri.getRawQuery());
  }
  request.append(" HTTP/1.1\r\n");
  request.append("Host: ").append(this.host);
  if (uri.getPort() > 0) {
    request.append(':').append(uri.getPort());
  }
  request.append("\r\n");
  request.append("Upgrade: websocket\r\n");
  request.append("Connection: Upgrade\r\n");
  request.append("Sec-WebSocket-Key: ").append(key).append("\r\n");
  request.append("Sec-WebSocket-Version: 13\r\n");
  if (!getExtensions().isEmpty()) {
    request.append("Sec-WebSocket-Extensions: ");
    boolean needDelim=false;
    for (    ExtensionConfig ext : getExtensions()) {
      if (needDelim) {
        request.append(", ");
      }
      request.append(ext.getParameterizedName());
      needDelim=true;
    }
    request.append("\r\n");
  }
  if (!getSubProtocols().isEmpty()) {
    request.append("Sec-WebSocket-Protocol: ");
    boolean needDelim=false;
    for (    String protocol : getSubProtocols()) {
      if (needDelim) {
        request.append(", ");
      }
      request.append(protocol);
      needDelim=true;
    }
    request.append("\r\n");
  }
  if (!getCookieMap().isEmpty()) {
    request.append("Cookie: ");
    boolean needDelim=false;
    for (    String cookie : getCookieMap().keySet()) {
      if (needDelim) {
        request.append("; ");
      }
      request.append(QuotedStringTokenizer.quoteIfNeeded(cookie,HEADER_VALUES_DELIM));
      request.append("=");
      String val=cookies.get(cookie);
      request.append(QuotedStringTokenizer.quoteIfNeeded(val,HEADER_VALUES_DELIM));
      needDelim=true;
    }
    request.append("\r\n");
  }
  for (  String key : headers.keySet()) {
    String value=headers.get(key);
    if (FORBIDDEN_HEADERS.contains(key.toLowerCase())) {
      LOG.warn("Skipping forbidden header - {}: {}",key,value);
      continue;
    }
    request.append(key).append(": ");
    request.append(QuotedStringTokenizer.quoteIfNeeded(value,HEADER_VALUES_DELIM));
    request.append("\r\n");
  }
  request.append("\r\n");
  return request.toString();
}
