{
  _connector=new SelectChannelConnector();
  _connector.setPort(port);
  addConnector(_connector);
  _handler=new WebSocketHandler(){
    @Override protected WebSocket doWebSocketConnect(    HttpServletRequest request,    String protocol){
      if ("org.ietf.websocket.test-echo".equals(protocol) || "echo".equals(protocol) || "lws-mirror-protocol".equals(protocol)) {
        _websocket=new TestEchoWebSocket();
      }
 else       if ("org.ietf.websocket.test-echo-broadcast".equals(protocol)) {
        _websocket=new TestEchoBroadcastWebSocket();
      }
 else       if ("org.ietf.websocket.test-echo-assemble".equals(protocol)) {
      }
 else       if ("org.ietf.websocket.test-echo-fragment".equals(protocol)) {
      }
 else       if ("org.ietf.websocket.test-consume".equals(protocol)) {
      }
 else       if ("org.ietf.websocket.test-produce".equals(protocol)) {
      }
 else       if (protocol == null) {
        _websocket=new TestWebSocket();
      }
      return _websocket;
    }
  }
;
  setHandler(_handler);
}
