{
  _server=server;
  ClassLoader contextCl=Thread.currentThread().getContextClassLoader();
  try {
    ClassLoader libExtClassLoader=null;
    String sharedURLs=(String)props.get(OSGiServerConstants.MANAGED_JETTY_SHARED_LIB_FOLDER_URLS);
    List<File> shared=sharedURLs != null ? extractFiles(sharedURLs) : null;
    libExtClassLoader=LibExtClassLoaderHelper.createLibExtClassLoader(shared,null,server,JettyBootstrapActivator.class.getClassLoader());
    if (LOG.isDebugEnabled())     LOG.debug("LibExtClassLoader = " + libExtClassLoader);
    Thread.currentThread().setContextClassLoader(libExtClassLoader);
    configure(server,props);
    init();
    URL[] jarsWithTlds=getJarsWithTlds();
    _commonParentClassLoaderForWebapps=jarsWithTlds == null ? libExtClassLoader : new TldLocatableURLClassloader(libExtClassLoader,jarsWithTlds);
    if (LOG.isDebugEnabled())     LOG.debug("common classloader = " + _commonParentClassLoaderForWebapps);
    server.start();
  }
 catch (  Exception e) {
    if (server != null) {
      try {
        server.stop();
      }
 catch (      Exception x) {
        LOG.ignore(x);
      }
    }
    throw e;
  }
 finally {
    Thread.currentThread().setContextClassLoader(contextCl);
  }
}
