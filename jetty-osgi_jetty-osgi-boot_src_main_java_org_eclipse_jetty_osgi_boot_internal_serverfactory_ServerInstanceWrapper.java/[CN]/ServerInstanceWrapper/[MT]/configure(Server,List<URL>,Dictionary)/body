{
  if (jettyConfigurations == null || jettyConfigurations.isEmpty()) {
    return server;
  }
  Map<String,Object> id_map=new HashMap<String,Object>();
  if (server != null) {
    id_map.put("Server",server);
    id_map.put((String)props.get(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME),server);
  }
  Map<String,String> properties=new HashMap<String,String>();
  if (props != null) {
    Enumeration<Object> en=props.keys();
    while (en.hasMoreElements()) {
      Object key=en.nextElement();
      Object value=props.get(key);
      String keyStr=String.valueOf(key);
      String valStr=String.valueOf(value);
      properties.put(keyStr,valStr);
      if (server != null)       server.setAttribute(keyStr,valStr);
    }
  }
  for (  URL jettyConfiguration : jettyConfigurations) {
    InputStream is=null;
    try {
      Resource r=Resource.newResource(jettyConfiguration);
      if (!r.exists()) {
        LOG.warn("File does not exist " + r);
        throw new IllegalStateException("No such jetty server config file: " + r);
      }
      is=r.getInputStream();
      XmlConfiguration config=new XmlConfiguration(is);
      config.getIdMap().putAll(id_map);
      config.getProperties().putAll(properties);
      String urlPath=jettyConfiguration.toString();
      int lastSlash=urlPath.lastIndexOf('/');
      if (lastSlash > 4) {
        urlPath=urlPath.substring(0,lastSlash);
        config.getProperties().put(PROPERTY_THIS_JETTY_XML_FOLDER_URL,urlPath);
      }
      Object o=config.configure();
      if (server == null)       server=(Server)o;
      id_map=config.getIdMap();
    }
 catch (    SAXParseException saxparse) {
      LOG.warn("Unable to configure the jetty/etc file " + jettyConfiguration,saxparse);
      throw saxparse;
    }
 finally {
      IO.close(is);
    }
  }
  return server;
}
