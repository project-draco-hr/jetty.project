{
  try {
    File lib=new File(MavenTestingUtils.getTargetDir(),"native");
    String libPath=lib.getCanonicalPath();
    System.setProperty("jetty.lib",libPath);
    try {
      SetUID.getpwnam("TheQuickBrownFoxJumpsOverToTheLazyDog");
      assertTrue(false);
    }
 catch (    SecurityException se) {
      assertTrue(true);
    }
    try {
      SetUID.getpwuid(-9999);
      assertTrue(false);
    }
 catch (    SecurityException se) {
      assertTrue(true);
    }
    Passwd passwd1=SetUID.getpwnam("root");
    Passwd passwd2=SetUID.getpwuid(passwd1.getPwUid());
    assertEquals(passwd1.getPwName(),passwd2.getPwName());
    assertEquals(passwd1.getPwPasswd(),passwd2.getPwPasswd());
    assertEquals(passwd1.getPwUid(),passwd2.getPwUid());
    assertEquals(passwd1.getPwGid(),passwd2.getPwGid());
    assertEquals(passwd1.getPwGecos(),passwd2.getPwGecos());
    assertEquals(passwd1.getPwDir(),passwd2.getPwDir());
    assertEquals(passwd1.getPwShell(),passwd2.getPwShell());
    try {
      SetUID.getgrnam("TheQuickBrownFoxJumpsOverToTheLazyDog");
      assertTrue(false);
    }
 catch (    SecurityException se) {
      assertTrue(true);
    }
    try {
      SetUID.getgrgid(-9999);
      assertTrue(false);
    }
 catch (    SecurityException se) {
      assertTrue(true);
    }
    Group gr1=SetUID.getgrgid(passwd1.getPwGid());
    Group gr2=SetUID.getgrnam(gr1.getGrName());
    assertEquals(gr1.getGrName(),gr2.getGrName());
    assertEquals(gr1.getGrPasswd(),gr2.getGrPasswd());
    assertEquals(gr1.getGrGid(),gr2.getGrGid());
    if (gr1.getGrMem() != null) {
      assertEquals(gr1.getGrMem().length,gr2.getGrMem().length);
      for (int i=0; i < gr1.getGrMem().length; i++) {
        assertEquals(gr1.getGrMem()[i],gr2.getGrMem()[i]);
      }
    }
  }
 catch (  Throwable e) {
    e.printStackTrace();
    assertTrue(false);
  }
}
