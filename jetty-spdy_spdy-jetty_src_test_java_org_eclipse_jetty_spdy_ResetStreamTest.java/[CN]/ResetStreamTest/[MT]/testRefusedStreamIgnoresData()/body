{
  final CountDownLatch synLatch=new CountDownLatch(1);
  final CountDownLatch dataLatch=new CountDownLatch(1);
  final CountDownLatch rstLatch=new CountDownLatch(1);
  Session session=startClient(startServer(new ServerSessionFrameListener.Adapter(){
    @Override public StreamFrameListener onSyn(    Stream stream,    SynInfo synInfo){
      try {
        Assert.assertTrue(synLatch.await(5,TimeUnit.SECONDS));
        stream.getSession().rst(new RstInfo(stream.getId(),StreamStatus.REFUSED_STREAM));
        return new StreamFrameListener.Adapter(){
          @Override public void onData(          Stream stream,          DataInfo dataInfo){
            dataLatch.countDown();
          }
        }
;
      }
 catch (      InterruptedException x) {
        x.printStackTrace();
        return null;
      }
    }
  }
),new SessionFrameListener.Adapter(){
    @Override public void onRst(    Session session,    RstInfo rstInfo){
      rstLatch.countDown();
    }
  }
);
  Stream stream=session.syn(new SynInfo(false),null).get(5,TimeUnit.SECONDS);
  stream.data(new StringDataInfo("data",true),5,TimeUnit.SECONDS,new Handler.Adapter<Void>(){
    @Override public void completed(    Void context){
      synLatch.countDown();
    }
  }
);
  Assert.assertTrue(rstLatch.await(5,TimeUnit.SECONDS));
  Assert.assertFalse(dataLatch.await(1,TimeUnit.SECONDS));
}
