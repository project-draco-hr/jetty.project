{
synchronized (this) {
    int streamId=streamIds.getAndAdd(2);
    PriorityFrame priority=frame.getPriority();
    priority=priority == null ? null : new PriorityFrame(streamId,priority.getDependentStreamId(),priority.getWeight(),priority.isExclusive());
    frame=new HeadersFrame(streamId,frame.getMetaData(),priority,frame.isEndStream());
    final IStream stream=createLocalStream(frame);
    if (stream == null) {
      promise.failed(new IllegalStateException());
      return;
    }
    stream.updateClose(frame.isEndStream(),true);
    stream.setListener(listener);
    flusher.offer(generator.generate(frame,new PromiseCallback<>(promise,stream)));
  }
  flusher.iterate();
}
