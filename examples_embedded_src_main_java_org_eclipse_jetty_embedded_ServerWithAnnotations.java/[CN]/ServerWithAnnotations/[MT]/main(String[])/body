{
  Server server=new Server(8080);
  Configuration.ClassList classlist=Configuration.ClassList.setServerDefault(server);
  classlist.addAfter("org.eclipse.jetty.webapp.FragmentConfiguration","org.eclipse.jetty.plus.webapp.EnvConfiguration","org.eclipse.jetty.plus.webapp.PlusConfiguration");
  classlist.addBefore("org.eclipse.jetty.webapp.JettyWebXmlConfiguration","org.eclipse.jetty.annotations.AnnotationConfiguration");
  WebAppContext webapp=new WebAppContext();
  webapp.setContextPath("/");
  File warFile=new File("../../jetty-distribution/target/distribution/demo-base/webapps/test.war");
  webapp.setWar(warFile.getAbsolutePath());
  webapp.setAttribute("org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern",".*/javax.servlet-[^/]*\\.jar$|.*/servlet-api-[^/]*\\.jar$");
  server.setHandler(webapp);
  new Transaction(new com.acme.MockUserTransaction());
  new EnvEntry(webapp,"maxAmount",new Double(100),true);
  new Resource(webapp,"jdbc/mydatasource",new com.acme.MockDataSource());
  HashLoginService loginService=new HashLoginService();
  loginService.setName("Test Realm");
  loginService.setConfig("src/test/resources/realm.properties");
  server.addBean(loginService);
  server.start();
  server.join();
}
