{
  Server server=new Server(8080);
  org.eclipse.jetty.webapp.Configuration.ClassList classlist=org.eclipse.jetty.webapp.Configuration.ClassList.setServerDefault(server);
  classlist.addAfter("org.eclipse.jetty.webapp.FragmentConfiguration","org.eclipse.jetty.plus.webapp.EnvConfiguration","org.eclipse.jetty.plus.webapp.PlusConfiguration");
  classlist.addBefore("org.eclipse.jetty.webapp.JettyWebXmlConfiguration","org.eclipse.jetty.annotations.AnnotationConfiguration");
  WebAppContext webapp=new WebAppContext();
  webapp.setContextPath("/");
  webapp.setWar("../../tests/test-webapps/test-servlet-spec/test-spec-webapp/target/test-spec-webapp-9.0.4-SNAPSHOT.war");
  server.setHandler(webapp);
  org.eclipse.jetty.plus.jndi.Transaction transactionMgr=new org.eclipse.jetty.plus.jndi.Transaction(new com.acme.MockUserTransaction());
  org.eclipse.jetty.plus.jndi.EnvEntry maxAmount=new org.eclipse.jetty.plus.jndi.EnvEntry(webapp,"maxAmount",new Double(100),true);
  org.eclipse.jetty.plus.jndi.Resource mydatasource=new org.eclipse.jetty.plus.jndi.Resource(webapp,"jdbc/mydatasource",new com.acme.MockDataSource());
  HashLoginService loginService=new HashLoginService();
  loginService.setName("Test Realm");
  loginService.setConfig("src/test/resources/realm.properties");
  server.addBean(loginService);
  server.start();
  server.join();
}
