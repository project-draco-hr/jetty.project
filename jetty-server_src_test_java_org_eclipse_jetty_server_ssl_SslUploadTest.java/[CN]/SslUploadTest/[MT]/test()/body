{
  Server server=new Server();
  SslConnector connector=new SslSelectChannelConnector();
  server.addConnector(connector);
  String keystorePath=System.getProperty("basedir") + "/src/test/resources/keystore";
  connector.setKeystore(keystorePath);
  connector.setPassword("storepwd");
  connector.setKeyPassword("keypwd");
  connector.setTruststore(keystorePath);
  connector.setTrustPassword("storepwd");
  server.setHandler(new EmptyHandler());
  server.start();
  try {
    KeyStore keystore=KeyStore.getInstance(KeyStore.getDefaultType());
    keystore.load(new FileInputStream(keystorePath),"storepwd".toCharArray());
    TrustManagerFactory trustManagerFactory=TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
    trustManagerFactory.init(keystore);
    SSLContext sslContext=SSLContext.getInstance("SSL");
    sslContext.init(null,trustManagerFactory.getTrustManagers(),null);
    URL url=new URL("https://localhost:" + connector.getLocalPort() + "/");
    final HttpsURLConnection connection=(HttpsURLConnection)url.openConnection();
    connection.setSSLSocketFactory(sslContext.getSocketFactory());
    connection.setHostnameVerifier(new EmptyHostnameVerifier());
    connection.setDoInput(true);
    connection.setDoOutput(true);
    connection.setRequestMethod("POST");
    connection.setUseCaches(false);
    connection.connect();
    byte[] requestContent=new byte[16777216];
    Arrays.fill(requestContent,(byte)120);
    OutputStream output=connection.getOutputStream();
    output.write(requestContent);
    output.flush();
    long start=System.nanoTime();
    InputStream input=connection.getInputStream();
    long end=System.nanoTime();
    System.out.println("upload time: " + TimeUnit.NANOSECONDS.toMillis(end - start));
    BufferedReader reader=new BufferedReader(new InputStreamReader(input,"UTF-8"));
    String line;
    while ((line=reader.readLine()) != null)     System.err.println(line);
    connection.disconnect();
  }
  finally {
    server.stop();
  }
}
