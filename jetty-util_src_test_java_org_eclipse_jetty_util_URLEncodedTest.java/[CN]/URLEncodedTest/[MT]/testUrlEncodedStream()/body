{
  String[][] charsets=new String[][]{{StringUtil.__UTF8,null},{StringUtil.__ISO_8859_1,StringUtil.__ISO_8859_1},{StringUtil.__UTF8,StringUtil.__UTF8},{StringUtil.__UTF16,StringUtil.__UTF16}};
  for (int i=0; i < charsets.length; i++) {
    ByteArrayInputStream in=new ByteArrayInputStream("name\n=value+%30&name1=&name2&n\u00e3me3=value+3".getBytes(charsets[i][0]));
    MultiMap m=new MultiMap();
    UrlEncoded.decodeTo(in,m,charsets[i][1],-1,-1);
    System.err.println(m);
    assertEquals(i + " stream length",4,m.size());
    assertEquals(i + " stream name\\n","value 0",m.getString("name\n"));
    assertEquals(i + " stream name1","",m.getString("name1"));
    assertEquals(i + " stream name2","",m.getString("name2"));
    assertEquals(i + " stream n\u00e3me3","value 3",m.getString("n\u00e3me3"));
  }
  if (java.nio.charset.Charset.isSupported("Shift_JIS")) {
    ByteArrayInputStream in2=new ByteArrayInputStream("name=%83e%83X%83g".getBytes());
    MultiMap m2=new MultiMap();
    UrlEncoded.decodeTo(in2,m2,"Shift_JIS",-1,-1);
    assertEquals("stream length",1,m2.size());
    assertEquals("stream name","\u30c6\u30b9\u30c8",m2.getString("name"));
  }
 else   assertTrue("Charset Shift_JIS not supported by jvm",true);
}
