{
  if (_state != STATE_HEADER)   return;
  if (_last && !allContentAdded)   throw new IllegalStateException("last?");
  _last=_last | allContentAdded;
  boolean has_server=false;
  if (_version == HttpVersions.HTTP_1_0_ORDINAL)   _close=true;
  if (_header == null)   _header=_buffers.getHeader();
  Buffer tmpbuf=_buffer;
  _buffer=_header;
  try {
    _buffer.put((byte)'A');
    _buffer.put((byte)'B');
    addInt(0);
    _buffer.put((byte)0x4);
    addInt(_status);
    if (_reason == null)     _reason=HttpGenerator.getReasonBuffer(_status);
    if (_reason == null)     _reason=new ByteArrayBuffer(TypeUtil.toString(_status));
    addBuffer(_reason);
    if (_status == 100 || _status == 204 || _status == 304) {
      _noContent=true;
      _content=null;
    }
    int field_index=_buffer.putIndex();
    addInt(0);
    int num_fields=0;
    if (fields != null) {
      int s=fields.size();
      for (int f=0; f < s; f++) {
        HttpFields.Field field=fields.getField(f);
        if (field == null)         continue;
        num_fields++;
        byte[] codes=(byte[])__headerHash.get(field.getName());
        if (codes != null) {
          _buffer.put(codes);
        }
 else {
          addString(field.getName());
        }
        addString(field.getValue());
      }
    }
    if (!has_server && _status > 100 && getSendServerVersion()) {
      num_fields++;
      addString("Server");
      addString(SERVER);
    }
    int tmp=_buffer.putIndex();
    _buffer.setPutIndex(field_index);
    addInt(num_fields);
    _buffer.setPutIndex(tmp);
    int payloadSize=_buffer.length() - 4;
    addInt(2,payloadSize);
  }
  finally {
    _buffer=tmpbuf;
  }
  _state=STATE_CONTENT;
}
