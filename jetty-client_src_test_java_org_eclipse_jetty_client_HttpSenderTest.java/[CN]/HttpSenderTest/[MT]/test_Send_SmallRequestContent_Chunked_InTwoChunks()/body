{
  ByteArrayEndPoint endPoint=new ByteArrayEndPoint();
  HttpDestination destination=new HttpDestination(client,"http","localhost",8080);
  HttpConnection connection=new HttpConnection(client,endPoint,destination);
  Request request=client.newRequest(URI.create("http://localhost/"));
  String content1="0123456789";
  String content2="ABCDEF";
  request.content(new ByteBufferContentProvider(ByteBuffer.wrap(content1.getBytes("UTF-8")),ByteBuffer.wrap(content2.getBytes("UTF-8"))){
    @Override public long getLength(){
      return -1;
    }
  }
);
  final CountDownLatch headersLatch=new CountDownLatch(1);
  final CountDownLatch successLatch=new CountDownLatch(1);
  request.listener(new Request.Listener.Empty(){
    @Override public void onHeaders(    Request request){
      headersLatch.countDown();
    }
    @Override public void onSuccess(    Request request){
      successLatch.countDown();
    }
  }
);
  connection.send(request,(Response.CompleteListener)null);
  String requestString=endPoint.takeOutputString();
  Assert.assertTrue(requestString.startsWith("GET "));
  String content=Integer.toHexString(content1.length()).toUpperCase(Locale.ENGLISH) + "\r\n" + content1+ "\r\n";
  content+=Integer.toHexString(content2.length()).toUpperCase(Locale.ENGLISH) + "\r\n" + content2+ "\r\n";
  content+="0\r\n\r\n";
  Assert.assertTrue(requestString.endsWith("\r\n\r\n" + content));
  Assert.assertTrue(headersLatch.await(5,TimeUnit.SECONDS));
  Assert.assertTrue(successLatch.await(5,TimeUnit.SECONDS));
}
