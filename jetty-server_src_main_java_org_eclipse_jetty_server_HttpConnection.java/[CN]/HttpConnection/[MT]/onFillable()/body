{
  LOG.debug("{} onFillable {}",this,_channel.getState());
  setCurrentConnection(this);
  int filled=Integer.MAX_VALUE;
  boolean suspended=false;
  try {
    while (!suspended && getEndPoint().getConnection() == this) {
      if (BufferUtil.isEmpty(_requestBuffer)) {
        if (filled <= 0)         break;
        if (getEndPoint().isInputShutdown()) {
          filled=-1;
          _parser.atEOF();
        }
 else {
          if (_requestBuffer == null)           _requestBuffer=_bufferPool.acquire(getInputBufferSize(),REQUEST_BUFFER_DIRECT);
          filled=getEndPoint().fill(_requestBuffer);
          if (filled == 0)           filled=getEndPoint().fill(_requestBuffer);
          if (filled < 0)           _parser.atEOF();
        }
      }
      if (_parser.parseNext(_requestBuffer == null ? BufferUtil.EMPTY_BUFFER : _requestBuffer)) {
        suspended=!_channel.handle();
      }
    }
  }
 catch (  EofException e) {
    LOG.debug(e);
  }
catch (  Exception e) {
    if (_parser.isIdle())     LOG.debug(e);
 else     LOG.warn(this.toString(),e);
    close();
  }
 finally {
    setCurrentConnection(null);
    if (!suspended && getEndPoint().isOpen()) {
      fillInterested();
    }
  }
}
