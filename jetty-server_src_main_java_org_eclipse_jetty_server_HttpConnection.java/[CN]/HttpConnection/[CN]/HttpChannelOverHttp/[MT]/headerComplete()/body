{
  boolean persistent;
  HttpVersion version=getHttpVersion();
switch (version) {
case HTTP_0_9:
{
      persistent=false;
      break;
    }
case HTTP_1_0:
{
    persistent=getRequest().getHttpFields().contains(HttpHeader.CONNECTION,HttpHeaderValue.KEEP_ALIVE.asString());
    if (!persistent)     persistent=HttpMethod.CONNECT.is(getRequest().getMethod());
    if (persistent)     getResponse().getHttpFields().add(HttpHeader.CONNECTION,HttpHeaderValue.KEEP_ALIVE);
    break;
  }
case HTTP_1_1:
{
  persistent=!getRequest().getHttpFields().contains(HttpHeader.CONNECTION,HttpHeaderValue.CLOSE.asString());
  if (!persistent)   persistent=HttpMethod.CONNECT.is(getRequest().getMethod());
  if (!persistent)   getResponse().getHttpFields().add(HttpHeader.CONNECTION,HttpHeaderValue.CLOSE);
  break;
}
case HTTP_2:
{
persistent=false;
badMessage(400,null);
return true;
}
default :
{
throw new IllegalStateException();
}
}
if (!persistent) _generator.setPersistent(false);
if (!super.headerComplete()) return false;
if (getHttpConfiguration().isDelayDispatchUntilContent() && _parser.getContentLength() > 0 && !isExpecting100Continue() && !isCommitted() && BufferUtil.isEmpty(_requestBuffer)) return false;
return true;
}
