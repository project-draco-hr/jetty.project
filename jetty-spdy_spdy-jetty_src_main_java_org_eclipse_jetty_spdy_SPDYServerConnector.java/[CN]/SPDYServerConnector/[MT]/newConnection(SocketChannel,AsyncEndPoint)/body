{
  if (sslContextFactory != null) {
    final SSLEngine engine=newSSLEngine(sslContextFactory,channel);
    Executor executor=findExecutor();
    SslConnection sslConnection=new SslConnection(bufferPool,executor,endPoint,engine){
      @Override public void onClose(){
        NextProtoNego.remove(engine);
        super.onClose();
      }
    }
;
    final AsyncEndPoint sslEndPoint=sslConnection.getSslEndPoint();
    NextProtoNegoServerAsyncConnection connection=new NextProtoNegoServerAsyncConnection(channel,sslEndPoint,this);
    sslEndPoint.setAsyncConnection(connection);
    getSelectorManager().connectionOpened(connection);
    NextProtoNego.put(engine,connection);
    return sslConnection;
  }
 else {
    AsyncConnectionFactory connectionFactory=getDefaultAsyncConnectionFactory();
    AsyncConnection connection=connectionFactory.newAsyncConnection(channel,endPoint,this);
    endPoint.setAsyncConnection(connection);
    return connection;
  }
}
