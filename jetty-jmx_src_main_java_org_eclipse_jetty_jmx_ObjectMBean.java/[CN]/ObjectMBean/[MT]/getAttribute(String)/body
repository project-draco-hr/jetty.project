{
  Method getter=(Method)_getters.get(name);
  if (getter == null) {
    throw new AttributeNotFoundException(name);
  }
  try {
    Object o=_managed;
    if (getter.getDeclaringClass().isInstance(this))     o=this;
    Object r=getter.invoke(o,(java.lang.Object[])null);
    if (r != null && _convert.contains(name)) {
      if (r.getClass().isArray()) {
        ObjectName[] on=new ObjectName[Array.getLength(r)];
        for (int i=0; i < on.length; i++)         on[i]=_mbeanContainer.findMBean(Array.get(r,i));
        r=on;
      }
 else       if (r instanceof Collection<?>) {
        @SuppressWarnings("unchecked") Collection<Object> c=(Collection<Object>)r;
        ObjectName[] on=new ObjectName[c.size()];
        int i=0;
        for (        Object obj : c)         on[i++]=_mbeanContainer.findMBean(obj);
        r=on;
      }
 else {
        ObjectName mbean=_mbeanContainer.findMBean(r);
        if (mbean == null)         return null;
        r=mbean;
      }
    }
    return r;
  }
 catch (  IllegalAccessException e) {
    LOG.warn(Log.EXCEPTION,e);
    throw new AttributeNotFoundException(e.toString());
  }
catch (  InvocationTargetException e) {
    LOG.warn(Log.EXCEPTION,e);
    throw new ReflectionException(new Exception(e.getCause()));
  }
}
