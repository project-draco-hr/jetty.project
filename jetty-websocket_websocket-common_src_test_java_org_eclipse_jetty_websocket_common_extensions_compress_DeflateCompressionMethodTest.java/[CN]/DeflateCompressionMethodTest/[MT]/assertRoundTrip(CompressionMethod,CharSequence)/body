{
  String expected=msg.toString();
  ByteBuffer orig=BufferUtil.toBuffer(expected,StringUtil.__UTF8_CHARSET);
  LOG.debug("orig: {}",BufferUtil.toDetailString(orig));
  method.compress().begin();
  method.compress().input(orig);
  ByteBuffer compressed=method.compress().process();
  LOG.debug("compressed: {}",BufferUtil.toDetailString(compressed));
  Assert.assertThat("Compress.isDone",method.compress().isDone(),is(true));
  method.compress().end();
  ByteBuffer decompressed=ByteBuffer.allocateDirect(msg.length());
  LOG.debug("decompressed(a): {}",BufferUtil.toDetailString(decompressed));
  method.decompress().begin();
  method.decompress().input(compressed);
  while (!method.decompress().isDone()) {
    ByteBuffer window=method.decompress().process();
    BufferUtil.put(window,decompressed);
  }
  BufferUtil.flipToFlush(decompressed,0);
  LOG.debug("decompressed(f): {}",BufferUtil.toDetailString(decompressed));
  method.decompress().end();
  String actual=BufferUtil.toUTF8String(decompressed);
  Assert.assertThat("Message Size",actual.length(),is(msg.length()));
  Assert.assertEquals("Message Contents",expected,actual);
}
