{
  startServer(new HttpServlet(){
    @Override protected void service(    HttpServletRequest request,    HttpServletResponse response) throws ServletException, IOException {
      ServletOutputStream output=response.getOutputStream();
      byte[] chunk=new byte[1024 * 1024];
      for (int i=0; i < 16; ++i) {
        output.write(chunk);
        output.flush();
      }
    }
  }
);
  startProxy(new AsyncMiddleManServlet(){
    @Override protected ContentTransformer newServerResponseContentTransformer(    HttpServletRequest clientRequest,    HttpServletResponse proxyResponse,    Response serverResponse){
      return new BufferingContentTransformer();
    }
  }
);
  startClient();
  final CountDownLatch latch=new CountDownLatch(1);
  client.newRequest("localhost",serverConnector.getLocalPort()).onResponseContent(new Response.ContentListener(){
    @Override public void onContent(    Response response,    ByteBuffer content){
      sleep(1);
    }
  }
).send(new Response.CompleteListener(){
    @Override public void onComplete(    Result result){
      Assert.assertTrue(result.isSucceeded());
      Assert.assertEquals(200,result.getResponse().getStatus());
      latch.countDown();
    }
  }
);
  Assert.assertTrue(latch.await(15,TimeUnit.SECONDS));
}
