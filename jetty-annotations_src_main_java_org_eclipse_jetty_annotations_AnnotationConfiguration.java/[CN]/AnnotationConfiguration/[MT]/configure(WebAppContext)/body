{
  context.getObjectFactory().addDecorator(new AnnotationDecorator(context));
  if (!context.getMetaData().isMetaDataComplete()) {
    if (context.getServletContext().getEffectiveMajorVersion() >= 3 || context.isConfigurationDiscovered()) {
      _discoverableAnnotationHandlers.add(new WebServletAnnotationHandler(context));
      _discoverableAnnotationHandlers.add(new WebFilterAnnotationHandler(context));
      _discoverableAnnotationHandlers.add(new WebListenerAnnotationHandler(context));
    }
  }
  createServletContainerInitializerAnnotationHandlers(context,getNonExcludedInitializers(context));
  if (!_discoverableAnnotationHandlers.isEmpty() || _classInheritanceHandler != null || !_containerInitializerAnnotationHandlers.isEmpty())   scanForAnnotations(context);
  List<ContainerInitializer> initializers=(List<ContainerInitializer>)context.getAttribute(AnnotationConfiguration.CONTAINER_INITIALIZERS);
  if (initializers != null && initializers.size() > 0) {
    Map<String,Set<String>> map=(Map<String,Set<String>>)context.getAttribute(AnnotationConfiguration.CLASS_INHERITANCE_MAP);
    for (    ContainerInitializer i : initializers)     i.resolveClasses(context,map);
  }
}
