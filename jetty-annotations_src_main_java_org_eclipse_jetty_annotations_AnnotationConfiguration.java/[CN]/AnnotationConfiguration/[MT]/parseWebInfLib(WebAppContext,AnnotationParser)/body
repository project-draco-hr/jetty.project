{
  List<FragmentDescriptor> frags=context.getMetaData().getFragments();
  ArrayList<URI> webInfUris=new ArrayList<URI>();
  List<Resource> jars=context.getMetaData().getOrderedWebInfJars();
  if (jars == null || jars.isEmpty())   jars=context.getMetaData().getWebInfJars();
  for (  Resource r : jars) {
    parser.clearHandlers();
    URI uri=r.getURI();
    FragmentDescriptor f=getFragmentFromJar(r,frags);
    if (f == null || !isMetaDataComplete(f) || _classInheritanceHandler != null || !_containerInitializerAnnotationHandlers.isEmpty()) {
      parser.registerHandler(_classInheritanceHandler);
      parser.registerHandlers(_containerInitializerAnnotationHandlers);
      if (f == null || !isMetaDataComplete(f)) {
        for (        DiscoverableAnnotationHandler h : _discoverableAnnotationHandlers) {
          if (h instanceof AbstractDiscoverableAnnotationHandler)           ((AbstractDiscoverableAnnotationHandler)h).setResource(r);
        }
        parser.registerHandlers(_discoverableAnnotationHandlers);
      }
      parser.parse(uri,new WebAppClassNameResolver(context));
    }
  }
}
