{
  List<FragmentDescriptor> frags=context.getMetaData().getFragments();
  ArrayList<URI> webInfUris=new ArrayList<URI>();
  List<Resource> jars=context.getMetaData().getOrderedWebInfJars();
  if (jars == null || jars.isEmpty())   jars=context.getMetaData().getWebInfJars();
  for (  Resource r : jars) {
    clearAnnotationList(parser.getAnnotationHandlers());
    URI uri=r.getURI();
    FragmentDescriptor f=getFragmentFromJar(r,frags);
    if (f == null || !isMetaDataComplete(f)) {
      parser.parse(uri,new ClassNameResolver(){
        public boolean isExcluded(        String name){
          if (context.isSystemClass(name))           return true;
          if (context.isServerClass(name))           return false;
          return false;
        }
        public boolean shouldOverride(        String name){
          if (context.isParentLoaderPriority())           return false;
          return true;
        }
      }
);
      List<DiscoveredAnnotation> annotations=new ArrayList<DiscoveredAnnotation>();
      gatherAnnotations(annotations,parser.getAnnotationHandlers());
      context.getMetaData().addDiscoveredAnnotations(r,annotations);
    }
  }
}
