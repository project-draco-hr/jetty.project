{
  ArrayList<ContainerInitializer> initializers=new ArrayList<ContainerInitializer>();
  context.setAttribute(ContainerInitializerConfiguration.CONTAINER_INITIALIZERS,initializers);
  ServiceLoader<ServletContainerInitializer> loadedInitializers=ServiceLoader.load(ServletContainerInitializer.class,context.getClassLoader());
  if (loadedInitializers != null) {
    for (    ServletContainerInitializer service : loadedInitializers) {
      if (!isFromExcludedJar(context,service)) {
        HandlesTypes annotation=service.getClass().getAnnotation(HandlesTypes.class);
        ContainerInitializer initializer=new ContainerInitializer();
        initializer.setTarget(service);
        initializers.add(initializer);
        if (annotation != null) {
          Class[] classes=annotation.value();
          if (classes != null) {
            initializer.setInterestedTypes(classes);
            for (            Class c : classes) {
              if (c.isAnnotation()) {
                if (Log.isDebugEnabled())                 Log.debug("Registering annotation handler for " + c.getName());
                parser.registerAnnotationHandler(c.getName(),new ContainerInitializerAnnotationHandler(initializer,c));
              }
            }
          }
 else           if (Log.isDebugEnabled())           Log.debug("No classes in HandlesTypes on initializer " + service.getClass());
        }
 else         if (Log.isDebugEnabled())         Log.debug("No annotation on initializer " + service.getClass());
      }
    }
  }
}
