{
  GrantEntry ge=new GrantEntry();
  parsing:   while (true) {
switch (st.nextToken()) {
case StreamTokenizer.TT_WORD:
      if (Util.equalsIgnoreCase("signedby",st.sval)) {
        if (st.nextToken() == '"') {
          ge.setSigners(st.sval);
        }
 else {
          handleUnexpectedToken(st,"Expected syntax is : signedby \"name1,...,nameN\"");
        }
      }
 else       if (Util.equalsIgnoreCase("codebase",st.sval)) {
        if (st.nextToken() == '"') {
          ge.setCodebase(st.sval);
        }
 else {
          handleUnexpectedToken(st,"Expected syntax is : codebase \"url\"");
        }
      }
 else       if (Util.equalsIgnoreCase("principal",st.sval)) {
        ge.addPrincipal(readPrincipalNode(st));
      }
 else {
        handleUnexpectedToken(st);
      }
    break;
case ',':
  break;
case '{':
ge.setPermissions(readPermissionEntries(st));
break parsing;
default :
st.pushBack();
break parsing;
}
}
return ge;
}
