{
  int[][] tests={{-1,0,-1},{-1,0,-1},{0,2,1000},{0,2 + 4,1000},{1000,2,1000},{1000,2 + 4,1000},{1005,0,-1},{1005,0,-1},{1006,0,-1},{1006,0,-1},{9000,2,9000},{9000,2 + 4,9000}};
  String[] mesg={null,"Not Sent",null,"mesg",null,"mesg",null,"mesg",null,"mesg",null,"mesg"};
  for (int t=0; t < tests.length; t++) {
    String tst="" + t;
    Socket socket=new Socket("localhost",__connector.getLocalPort());
    OutputStream output=socket.getOutputStream();
    output.write(("GET /chat HTTP/1.1\r\n" + "Host: server.example.com\r\n" + "Upgrade: websocket\r\n"+ "Connection: Upgrade\r\n"+ "Sec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ==\r\n"+ "Sec-WebSocket-Origin: http://example.com\r\n"+ "Sec-WebSocket-Protocol: chat\r\n"+ "Sec-WebSocket-Version: " + WebSocketConnectionD13.VERSION + "\r\n"+ "\r\n").getBytes("ISO-8859-1"));
    output.flush();
    socket.setSoTimeout(100000);
    InputStream input=socket.getInputStream();
    lookFor("HTTP/1.1 101 Switching Protocols\r\n",input);
    skipTo("Sec-WebSocket-Accept: ",input);
    lookFor("s3pPLMBiTxaQ9kYGzzhZRbK+xOo=",input);
    skipTo("\r\n\r\n",input);
    assertTrue(__serverWebSocket.awaitConnected(1000));
    assertNotNull(__serverWebSocket.connection);
    __serverWebSocket.getConnection().close(tests[t][0],mesg[t]);
    byte[] buf=new byte[128];
    int len=input.read(buf);
    assertEquals(tst,2 + tests[t][1],len);
    assertEquals(tst,(byte)0x88,buf[0]);
    if (len >= 4) {
      int code=(0xff & buf[2]) * 0x100 + (0xff & buf[3]);
      assertEquals(tst,tests[t][2],code);
      if (len > 4) {
        String m=new String(buf,4,len - 4,"UTF-8");
        assertEquals(tst,mesg[t],m);
      }
    }
 else     assertEquals(tst,tests[t][2],-1);
    try {
      output.write(0x88);
      output.write(0x80);
      output.write(0x00);
      output.write(0x00);
      output.write(0x00);
      output.write(0x00);
      output.flush();
    }
 catch (    IOException e) {
      System.err.println("socket " + socket);
      throw e;
    }
    len=input.read(buf);
    assertEquals(tst,-1,len);
  }
}
