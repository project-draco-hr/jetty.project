{
synchronized (this) {
    _state=_state == State.IDLE ? State.PRODUCE : State.EXECUTE;
    if (_state == State.EXECUTE)     return;
  }
  while (true) {
    Runnable task=_producer.produce();
    if (LOG.isDebugEnabled())     LOG.debug("{} produced {}",_producer,task);
    if (task == null) {
synchronized (this) {
        _state=_state == State.PRODUCE ? State.IDLE : State.PRODUCE;
        if (_state == State.PRODUCE)         continue;
        return;
      }
    }
    try {
      _executor.execute(task);
    }
 catch (    RejectedExecutionException e) {
      if (task instanceof Rejectable) {
        try {
          ((Rejectable)task).reject();
        }
 catch (        Throwable x) {
          e.addSuppressed(x);
          LOG.warn(e);
        }
      }
    }
  }
}
