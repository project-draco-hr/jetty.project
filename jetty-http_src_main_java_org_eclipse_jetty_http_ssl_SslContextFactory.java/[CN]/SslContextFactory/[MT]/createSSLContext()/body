{
  checkConfig();
  KeyStore keyStore=getKeyStore(_keyStoreInputStream,_keyStorePath,_keyStoreType,_keyStoreProvider,_keyStorePassword == null ? null : _keyStorePassword.toString());
  KeyStore trustStore=getKeyStore(_trustStoreInputStream,_trustStorePath,_trustStoreType,_trustStoreProvider,_trustStorePassword == null ? null : _trustStorePassword.toString());
  Collection<? extends CRL> crls=loadCRL(_crlPath);
  if (_validateCerts && keyStore != null) {
    if (_certAlias == null) {
      List<String> aliases=Collections.list(keyStore.aliases());
      _certAlias=aliases.size() == 1 ? aliases.get(0) : null;
    }
    Certificate cert=_certAlias == null ? null : keyStore.getCertificate(_certAlias);
    if (cert == null) {
      throw new Exception("No certificate found in the keystore" + (_certAlias == null ? "" : " for alias " + _certAlias));
    }
    CertificateValidator validator=new CertificateValidator(trustStore,crls);
    validator.validate(keyStore,cert);
  }
  KeyManager[] keyManagers=getKeyManagers(keyStore);
  TrustManager[] trustManagers=getTrustManagers(trustStore,crls);
  SecureRandom secureRandom=_secureRandomAlgorithm == null ? null : SecureRandom.getInstance(_secureRandomAlgorithm);
  _context=_sslProvider == null ? SSLContext.getInstance(_sslProtocol) : SSLContext.getInstance(_sslProtocol,_sslProvider);
  _context.init(keyManagers,trustManagers,secureRandom);
}
