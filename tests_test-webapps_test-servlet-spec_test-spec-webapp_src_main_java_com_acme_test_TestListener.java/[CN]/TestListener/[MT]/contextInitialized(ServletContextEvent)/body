{
  sce.getServletContext().setAttribute("com.acme.AnnotationTest.sclInjectTest",Boolean.valueOf(maxAmount != null));
  try {
    sce.getServletContext().addListener(new NaughtyServletContextListener());
    sce.getServletContext().setAttribute("com.acme.AnnotationTest.sclFromSclRegoTest",Boolean.FALSE);
  }
 catch (  IllegalArgumentException e) {
    sce.getServletContext().setAttribute("com.acme.AnnotationTest.sclFromSclRegoTest",Boolean.TRUE);
  }
catch (  Exception e) {
    sce.getServletContext().setAttribute("com.acme.AnnotationTest.sclFromSclRegoTest",Boolean.FALSE);
  }
  try {
    sce.getServletContext().addListener(new InvalidListener());
    sce.getServletContext().setAttribute("com.acme.AnnotationTest.invalidListenerRegoTest",Boolean.FALSE);
  }
 catch (  IllegalArgumentException e) {
    sce.getServletContext().setAttribute("com.acme.AnnotationTest.invalidListenerRegoTest",Boolean.TRUE);
  }
catch (  Exception e) {
    sce.getServletContext().setAttribute("com.acme.AnnotationTest.invalidListenerRegoTest",Boolean.FALSE);
  }
  try {
    ValidListener l=sce.getServletContext().createListener(ValidListener.class);
    sce.getServletContext().setAttribute("com.acme.AnnotationTest.programListenerInjectTest",Boolean.valueOf(l != null && l.maxAmount != null));
  }
 catch (  Exception e) {
    sce.getServletContext().setAttribute("com.acme.AnnotationTest.programListenerInjectTest",Boolean.FALSE);
  }
}
