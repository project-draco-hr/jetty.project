{
  final byte[] data=new byte[16 * 1024 * 1024];
  new Random().nextBytes(data);
  start(new AbstractHandler(){
    @Override public void handle(    String target,    org.eclipse.jetty.server.Request baseRequest,    HttpServletRequest request,    HttpServletResponse response) throws IOException, ServletException {
      response.setContentLength(data.length);
      response.getOutputStream().write(data);
      baseRequest.setHandled(true);
    }
  }
);
  Request request=client.newRequest(scheme + "://localhost:" + connector.getLocalPort());
  FutureResponseListener listener=new FutureResponseListener(request,data.length);
  request.send(listener);
  ContentResponse response=listener.get(15,TimeUnit.SECONDS);
  Assert.assertNotNull(response);
  Assert.assertEquals(200,response.getStatus());
  byte[] content=response.getContent();
  Assert.assertArrayEquals(data,content);
}
