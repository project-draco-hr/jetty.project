{
  HttpFields httpFields=request.getHttpFields();
  if (getForwardedCipherSuiteHeader() != null) {
    String cipher_suite=httpFields.getStringField(getForwardedCipherSuiteHeader());
    if (cipher_suite != null)     request.setAttribute("javax.servlet.request.cipher_suite",cipher_suite);
  }
  if (getForwardedSslSessionIdHeader() != null) {
    String ssl_session_id=httpFields.getStringField(getForwardedSslSessionIdHeader());
    if (ssl_session_id != null) {
      request.setAttribute("javax.servlet.request.ssl_session_id",ssl_session_id);
      request.setScheme(HttpScheme.HTTPS.asString());
    }
  }
  String forwardedHost=getLeftMostFieldValue(httpFields,getForwardedHostHeader());
  String forwardedServer=getLeftMostFieldValue(httpFields,getForwardedServerHeader());
  String forwardedFor=getLeftMostFieldValue(httpFields,getForwardedForHeader());
  String forwardedProto=getLeftMostFieldValue(httpFields,getForwardedProtoHeader());
  if (_hostHeader != null) {
    httpFields.put(_hostHeader);
    request.setServerName(_hostHeader.getHost());
    request.setServerPort(_hostHeader.getPort());
  }
 else   if (forwardedHost != null) {
    HostPortHttpField auth=new HostPortHttpField(forwardedHost);
    httpFields.put(auth);
    request.setServerName(auth.getHost());
    request.setServerPort(auth.getPort());
  }
 else   if (forwardedServer != null) {
    request.setServerName(forwardedServer);
  }
  if (forwardedFor != null) {
    request.setRemoteAddr(InetSocketAddress.createUnresolved(forwardedFor,request.getRemotePort()));
  }
  if (forwardedProto != null) {
    request.setScheme(forwardedProto);
    if (forwardedProto.equals(config.getSecureScheme()))     request.setSecure(true);
  }
}
