{
  ClassLoader contextCl=Thread.currentThread().getContextClassLoader();
  String[] oldServerClasses=null;
  try {
    applyMetaInfContextXml(contributor,context);
    OSGiWebappClassLoader composite=createWebappClassLoader(contributor);
    Thread.currentThread().setContextClassLoader(composite);
    baseWebappInstallURL=DefaultFileLocatorHelper.getLocalURL(baseWebappInstallURL);
    context.setWar(baseWebappInstallURL.toString());
    context.setContextPath(contextPath);
    context.setExtraClasspath(extraClasspath);
    if (webXmlPath != null && webXmlPath.length() != 0) {
      File webXml=null;
      if (webXmlPath.startsWith("/") || webXmlPath.startsWith("file:/")) {
        webXml=new File(webXmlPath);
      }
 else {
        webXml=new File(bundleInstall,webXmlPath);
      }
      if (webXml.exists()) {
        context.setDescriptor(webXml.getAbsolutePath());
      }
    }
    if (defaultWebXmlPath == null || defaultWebXmlPath.length() == 0) {
      defaultWebXmlPath=_wrapper.getOSGiAppProvider().getDefaultsDescriptor();
    }
    if (defaultWebXmlPath != null && defaultWebXmlPath.length() != 0) {
      File defaultWebXml=null;
      if (defaultWebXmlPath.startsWith("/") || defaultWebXmlPath.startsWith("file:/")) {
        defaultWebXml=new File(defaultWebXmlPath);
      }
 else {
        defaultWebXml=new File(bundleInstall,defaultWebXmlPath);
      }
      if (defaultWebXml.exists()) {
        context.setDefaultsDescriptor(defaultWebXml.getAbsolutePath());
      }
    }
    context.setParentLoaderPriority(_wrapper.getOSGiAppProvider().isParentLoaderPriority());
    configureWebappClassLoader(contributor,context,composite,requireTldBundle);
    configureWebAppContext(context,contributor,requireTldBundle);
    oldServerClasses=context.getServerClasses();
    context.setServerClasses(null);
    _wrapper.getOSGiAppProvider().addContext(contributor,pathInBundleToWebApp,context);
    List<Resource> patchResources=(List<Resource>)context.getAttribute(WebInfConfiguration.RESOURCE_URLS + ".patch");
    if (patchResources != null) {
      LinkedList<Resource> resourcesPath=new LinkedList<Resource>();
      resourcesPath.addAll(patchResources);
      Resource hostResources=context.getBaseResource();
      if (hostResources instanceof ResourceCollection) {
        for (        Resource re : ((ResourceCollection)hostResources).getResources()) {
          resourcesPath.add(re);
        }
      }
 else {
        resourcesPath.add(hostResources);
      }
      ResourceCollection rc=new ResourceCollection(resourcesPath.toArray(new Resource[resourcesPath.size()]));
      context.setBaseResource(rc);
    }
    return context;
  }
  finally {
    if (context != null && oldServerClasses != null) {
      context.setServerClasses(oldServerClasses);
    }
    Thread.currentThread().setContextClassLoader(contextCl);
  }
}
