{
  wah.setAttribute(OSGiWebappConstants.RFC66_OSGI_BUNDLE_CONTEXT,contributor.getBundleContext());
  wah.setAttribute("org.springframework.osgi.web." + BundleContext.class.getName(),contributor.getBundleContext());
  wah.setAttribute(OSGiWebappConstants.JETTY_OSGI_BUNDLE,contributor);
  wah.setAttribute(OSGiWebappConstants.REQUIRE_TLD_BUNDLE,requireTldBundle);
  Bundle[] fragments=PackageAdminServiceTracker.INSTANCE.getFragments(contributor);
  if (fragments != null && fragments.length != 0) {
    TreeMap<String,Resource> patchResourcesPath=new TreeMap<String,Resource>();
    TreeMap<String,Resource> appendedResourcesPath=new TreeMap<String,Resource>();
    for (    Bundle frag : fragments) {
      String fragFolder=(String)frag.getHeaders().get(OSGiWebappConstants.JETTY_WAR_FRAGMENT_FOLDER_PATH);
      String patchFragFolder=(String)frag.getHeaders().get(OSGiWebappConstants.JETTY_WAR_PATCH_FRAGMENT_FOLDER_PATH);
      if (fragFolder != null) {
        URL fragUrl=frag.getEntry(fragFolder);
        if (fragUrl == null) {
          throw new IllegalArgumentException("Unable to locate " + fragFolder + " inside "+ " the fragment '"+ frag.getSymbolicName()+ "'");
        }
        fragUrl=DefaultFileLocatorHelper.getLocalURL(fragUrl);
        String key=patchFragFolder.startsWith("/") ? patchFragFolder.substring(1) : patchFragFolder;
        appendedResourcesPath.put(key + ";" + frag.getSymbolicName(),Resource.newResource(fragUrl));
      }
      if (patchFragFolder != null) {
        URL patchFragUrl=frag.getEntry(patchFragFolder);
        if (patchFragUrl == null) {
          throw new IllegalArgumentException("Unable to locate " + patchFragUrl + " inside "+ " the fragment '"+ frag.getSymbolicName()+ "'");
        }
        patchFragUrl=DefaultFileLocatorHelper.getLocalURL(patchFragUrl);
        String key=patchFragFolder.startsWith("/") ? patchFragFolder.substring(1) : patchFragFolder;
        patchResourcesPath.put(key + ";" + frag.getSymbolicName(),Resource.newResource(patchFragUrl));
      }
    }
    if (!appendedResourcesPath.isEmpty()) {
      wah.setAttribute(WebInfConfiguration.RESOURCE_URLS,new ArrayList<Resource>(appendedResourcesPath.values()));
    }
    if (!patchResourcesPath.isEmpty()) {
      wah.setAttribute(WebInfConfiguration.RESOURCE_URLS + ".patch",new ArrayList<Resource>(patchResourcesPath.values()));
    }
    if (wah instanceof WebAppContext) {
      WebAppContext webappCtxt=(WebAppContext)wah;
      List<Resource> frags=(List<Resource>)wah.getAttribute(FragmentConfiguration.FRAGMENT_RESOURCES);
      List<Resource> resfrags=(List<Resource>)wah.getAttribute(WebInfConfiguration.RESOURCE_URLS);
      List<Resource> tldfrags=(List<Resource>)wah.getAttribute(TagLibConfiguration.TLD_RESOURCES);
      for (      Bundle frag : fragments) {
        URL webFrag=frag.getEntry("/META-INF/web-fragment.xml");
        Enumeration<URL> resEnum=frag.findEntries("/META-INF/resources","*",true);
        Enumeration<URL> tldEnum=frag.findEntries("/META-INF","*.tld",false);
        if (webFrag != null || (resEnum != null && resEnum.hasMoreElements()) || (tldEnum != null && tldEnum.hasMoreElements())) {
          try {
            File fragFile=BUNDLE_FILE_LOCATOR_HELPER.getBundleInstallLocation(frag);
            Resource fragFileAsResource=Resource.newResource(fragFile.toURI());
            webappCtxt.getMetaData().addWebInfJar(fragFileAsResource);
            if (webFrag != null) {
              if (frags == null) {
                frags=new ArrayList<Resource>();
                wah.setAttribute(FragmentConfiguration.FRAGMENT_RESOURCES,frags);
              }
              frags.add(fragFileAsResource);
            }
            if (resEnum != null && resEnum.hasMoreElements()) {
              if (resfrags == null) {
                resfrags=new ArrayList<Resource>();
                wah.setAttribute(WebInfConfiguration.RESOURCE_URLS,resfrags);
              }
              resfrags.add(Resource.newResource(DefaultFileLocatorHelper.getLocalURL(frag.getEntry("/META-INF/resources"))));
            }
            if (tldEnum != null && tldEnum.hasMoreElements()) {
              if (tldfrags == null) {
                tldfrags=new ArrayList<Resource>();
                wah.setAttribute(TagLibConfiguration.TLD_RESOURCES,tldfrags);
              }
              while (tldEnum.hasMoreElements()) {
                tldfrags.add(Resource.newResource(DefaultFileLocatorHelper.getLocalURL(tldEnum.nextElement())));
              }
            }
          }
 catch (          Exception e) {
            __logger.warn("Unable to locate the bundle " + frag.getBundleId(),e);
          }
        }
      }
    }
  }
}
