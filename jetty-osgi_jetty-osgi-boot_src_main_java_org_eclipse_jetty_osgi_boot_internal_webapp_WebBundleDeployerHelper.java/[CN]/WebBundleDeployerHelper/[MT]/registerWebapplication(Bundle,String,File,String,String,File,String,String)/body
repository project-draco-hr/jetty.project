{
  ClassLoader contextCl=Thread.currentThread().getContextClassLoader();
  String[] oldServerClasses=null;
  WebAppContext context=null;
  try {
    OSGiWebappClassLoader composite=createWebappClassLoader(contributor);
    Thread.currentThread().setContextClassLoader(composite);
    context=new WebAppContext(webapp.getAbsolutePath(),contextPath);
    context.setExtraClasspath(extraClasspath);
    if (webXmlPath != null && webXmlPath.length() != 0) {
      File webXml=null;
      if (webXmlPath.startsWith("/") || webXmlPath.startsWith("file:/")) {
        webXml=new File(webXmlPath);
      }
 else {
        webXml=new File(bundleInstall,webXmlPath);
      }
      if (webXml.exists()) {
        context.setDescriptor(webXml.getAbsolutePath());
      }
    }
    if (defaultWebXmlPath == null || defaultWebXmlPath.length() == 0) {
      defaultWebXmlPath=_wrapper.getOSGiAppProvider().getDefaultsDescriptor();
    }
    if (defaultWebXmlPath != null && defaultWebXmlPath.length() != 0) {
      File defaultWebXml=null;
      if (defaultWebXmlPath.startsWith("/") || defaultWebXmlPath.startsWith("file:/")) {
        defaultWebXml=new File(webXmlPath);
      }
 else {
        defaultWebXml=new File(bundleInstall,defaultWebXmlPath);
      }
      if (defaultWebXml.exists()) {
        context.setDefaultsDescriptor(defaultWebXml.getAbsolutePath());
      }
    }
    context.setParentLoaderPriority(_wrapper.getOSGiAppProvider().isParentLoaderPriority());
    configureWebAppContext(context,contributor);
    configureWebappClassLoader(contributor,context,composite);
    oldServerClasses=context.getServerClasses();
    context.setServerClasses(null);
    _wrapper.getOSGiAppProvider().addContext(contributor,pathInBundleToWebApp,context);
    return context;
  }
  finally {
    if (context != null && oldServerClasses != null) {
      context.setServerClasses(oldServerClasses);
    }
    Thread.currentThread().setContextClassLoader(contextCl);
  }
}
