{
  try {
    XmlConfiguration xmlConfiguration=new XmlConfiguration(contextInputStream);
    HashMap properties=new HashMap();
    properties.put("Server",_wrapper.getServer());
    setThisBundleHomeProperty(bundle,properties,overrideBundleInstallLocation);
    xmlConfiguration.setProperties(properties);
    ContextHandler context=(ContextHandler)xmlConfiguration.configure();
    if (context instanceof WebAppContext) {
      ((WebAppContext)context).setExtraClasspath(extraClasspath);
      ((WebAppContext)context).setParentLoaderPriority(_wrapper.getOSGiAppProvider().isParentLoaderPriority());
      if (_wrapper.getOSGiAppProvider().getDefaultsDescriptor() != null && _wrapper.getOSGiAppProvider().getDefaultsDescriptor().length() != 0) {
        ((WebAppContext)context).setDefaultsDescriptor(_wrapper.getOSGiAppProvider().getDefaultsDescriptor());
      }
    }
    context.setAttribute(OSGiWebappConstants.RFC66_OSGI_BUNDLE_CONTEXT,bundle.getBundleContext());
    context.setAttribute("org.springframework.osgi.web." + BundleContext.class.getName(),bundle.getBundleContext());
    return context;
  }
 catch (  FileNotFoundException e) {
    return null;
  }
catch (  SAXException e) {
    e.printStackTrace();
  }
catch (  IOException e) {
    e.printStackTrace();
  }
catch (  Throwable e) {
    e.printStackTrace();
  }
 finally {
    if (contextInputStream != null)     try {
      contextInputStream.close();
    }
 catch (    IOException ioe) {
    }
  }
  return null;
}
