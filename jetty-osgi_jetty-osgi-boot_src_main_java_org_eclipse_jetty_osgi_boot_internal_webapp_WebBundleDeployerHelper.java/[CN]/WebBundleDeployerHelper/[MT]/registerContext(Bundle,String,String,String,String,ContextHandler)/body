{
  File contextsHome=_wrapper.getOSGiAppProvider().getContextXmlDirAsFile();
  if (contextsHome != null) {
    File prodContextFile=new File(contextsHome,contributor.getSymbolicName() + "/" + contextFileRelativePath);
    if (prodContextFile.exists()) {
      return registerContext(contributor,contextFileRelativePath,prodContextFile,extraClasspath,overrideBundleInstallLocation,requireTldBundle,handler);
    }
  }
  File rootFolder=overrideBundleInstallLocation != null ? Resource.newResource(overrideBundleInstallLocation).getFile() : BUNDLE_FILE_LOCATOR_HELPER.getBundleInstallLocation(contributor);
  File contextFile=rootFolder != null ? new File(rootFolder,contextFileRelativePath) : null;
  if (contextFile != null && contextFile.exists()) {
    return registerContext(contributor,contextFileRelativePath,contextFile,extraClasspath,overrideBundleInstallLocation,requireTldBundle,handler);
  }
 else {
    if (contextFileRelativePath.startsWith("./")) {
      contextFileRelativePath=contextFileRelativePath.substring(1);
    }
    if (!contextFileRelativePath.startsWith("/")) {
      contextFileRelativePath="/" + contextFileRelativePath;
    }
    URL contextURL=contributor.getEntry(contextFileRelativePath);
    if (contextURL != null) {
      return registerContext(contributor,contextFileRelativePath,contextURL.openStream(),extraClasspath,overrideBundleInstallLocation,requireTldBundle,handler);
    }
    throw new IllegalArgumentException("Could not find the context " + "file " + contextFileRelativePath + " for the bundle "+ contributor.getSymbolicName()+ (overrideBundleInstallLocation != null ? " using the install location " + overrideBundleInstallLocation : ""));
  }
}
