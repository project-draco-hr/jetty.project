{
  final byte[] data="0123456789ABCDEF".getBytes(StandardCharsets.UTF_8);
  InetSocketAddress proxyAddress=startProxy(startServer(new ServerSessionFrameListener.Adapter(){
    @Override public StreamFrameListener onSyn(    Stream stream,    SynInfo synInfo){
      Assert.assertTrue(synInfo.isClose());
      Fields requestHeaders=synInfo.getHeaders();
      Assert.assertNotNull(requestHeaders.get("via"));
      Fields responseHeaders=new Fields();
      responseHeaders.put(HTTPSPDYHeader.VERSION.name(version),"HTTP/1.1");
      responseHeaders.put(HTTPSPDYHeader.STATUS.name(version),"200 OK");
      responseHeaders.put("content-length",String.valueOf(data.length));
      ReplyInfo replyInfo=new ReplyInfo(responseHeaders,false);
      stream.reply(replyInfo,new Callback.Adapter());
      stream.data(new BytesDataInfo(data,true),new Callback.Adapter());
      return null;
    }
  }
));
  ContentResponse response=httpClient.newRequest("localhost",proxyAddress.getPort()).method(HttpMethod.GET).send();
  assertThat("response code is 200 OK",response.getStatus(),is(200));
  assertThat(Arrays.equals(response.getContent(),data),is(true));
  ContentResponse response2=httpClient.newRequest("localhost",proxyAddress.getPort()).method(HttpMethod.GET).send();
  assertThat("response2 code is 200 OK",response2.getStatus(),is(200));
  assertThat(Arrays.equals(response2.getContent(),data),is(true));
}
