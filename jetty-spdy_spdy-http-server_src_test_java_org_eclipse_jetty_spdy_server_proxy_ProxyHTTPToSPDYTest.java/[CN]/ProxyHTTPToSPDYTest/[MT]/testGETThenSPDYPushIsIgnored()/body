{
  final byte[] data="0123456789ABCDEF".getBytes("UTF-8");
  InetSocketAddress proxyAddress=startProxy(startServer(new ServerSessionFrameListener.Adapter(){
    @Override public StreamFrameListener onSyn(    Stream stream,    SynInfo synInfo){
      Fields responseHeaders=new Fields();
      responseHeaders.put(HTTPSPDYHeader.VERSION.name(version),"HTTP/1.1");
      responseHeaders.put(HTTPSPDYHeader.STATUS.name(version),"200 OK");
      Fields pushHeaders=new Fields();
      pushHeaders.put(HTTPSPDYHeader.URI.name(version),"/push");
      stream.push(new PushInfo(5,TimeUnit.SECONDS,pushHeaders,false),new Promise.Adapter<Stream>(){
        @Override public void succeeded(        Stream pushStream){
          pushStream.data(new BytesDataInfo(data,true),new Callback.Adapter());
        }
      }
);
      stream.reply(new ReplyInfo(responseHeaders,true),new Callback.Adapter());
      return null;
    }
  }
));
  Socket client=new Socket();
  client.connect(proxyAddress);
  OutputStream output=client.getOutputStream();
  String request="" + "GET / HTTP/1.1\r\n" + "Host: localhost:" + proxyAddress.getPort() + "\r\n"+ "\r\n";
  output.write(request.getBytes("UTF-8"));
  output.flush();
  client.setSoTimeout(1000);
  InputStream input=client.getInputStream();
  BufferedReader reader=new BufferedReader(new InputStreamReader(input,"UTF-8"));
  String line=reader.readLine();
  Assert.assertTrue(line.contains(" 200"));
  while (line.length() > 0)   line=reader.readLine();
  Assert.assertFalse(reader.ready());
  client.close();
}
