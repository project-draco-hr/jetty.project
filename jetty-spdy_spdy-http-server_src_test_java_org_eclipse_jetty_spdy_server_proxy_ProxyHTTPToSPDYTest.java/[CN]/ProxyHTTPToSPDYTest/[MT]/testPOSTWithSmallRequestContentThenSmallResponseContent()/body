{
  String dataString="0123456789ABCDEF";
  final byte[] data=dataString.getBytes(StandardCharsets.UTF_8);
  InetSocketAddress proxyAddress=startProxy(startServer(new ServerSessionFrameListener.Adapter(){
    @Override public StreamFrameListener onSyn(    Stream stream,    SynInfo synInfo){
      return new StreamFrameListener.Adapter(){
        @Override public void onData(        Stream stream,        DataInfo dataInfo){
          dataInfo.consume(dataInfo.length());
          if (dataInfo.isClose()) {
            Fields responseHeaders=new Fields();
            responseHeaders.put(HTTPSPDYHeader.VERSION.name(version),"HTTP/1.1");
            responseHeaders.put(HTTPSPDYHeader.STATUS.name(version),"200 OK");
            responseHeaders.put("content-length",String.valueOf(data.length));
            ReplyInfo replyInfo=new ReplyInfo(responseHeaders,false);
            stream.reply(replyInfo,new Callback.Adapter());
            stream.data(new BytesDataInfo(data,true),new Callback.Adapter());
          }
        }
      }
;
    }
  }
));
  ContentResponse response=httpClient.POST("http://localhost:" + proxyAddress.getPort() + "/").content(new StringContentProvider(dataString)).send();
  assertThat("response status is 200 OK",response.getStatus(),is(200));
  assertThat("response content matches expected dataString",response.getContentAsString(),is(dataString));
  response=httpClient.POST("http://localhost:" + proxyAddress.getPort() + "/").content(new StringContentProvider(dataString)).send();
  assertThat("response status is 200 OK",response.getStatus(),is(200));
  assertThat("response content matches expected dataString",response.getContentAsString(),is(dataString));
}
