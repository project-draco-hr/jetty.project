{
  ContentTransformer transformer=(ContentTransformer)clientRequest.getAttribute(CLIENT_TRANSFORMER_ATTRIBUTE);
  if (transformer == null) {
    transformer=newClientRequestContentTransformer(clientRequest,proxyRequest);
    clientRequest.setAttribute(CLIENT_TRANSFORMER_ATTRIBUTE,transformer);
  }
  int contentBytes=content.remaining();
  if (contentBytes == 0 && !finished) {
    callback.succeeded();
    return;
  }
  transform(transformer,content,finished,buffers);
  int newContentBytes=0;
  int size=buffers.size();
  if (size > 0) {
    CountingCallback counter=new CountingCallback(callback,size);
    for (int i=0; i < size; ++i) {
      ByteBuffer buffer=buffers.get(i);
      newContentBytes+=buffer.remaining();
      provider.offer(buffer,counter);
    }
    buffers.clear();
  }
  if (finished)   provider.close();
  if (_log.isDebugEnabled())   _log.debug("{} upstream content transformation {} -> {} bytes",getRequestId(clientRequest),contentBytes,newContentBytes);
  boolean contentCommitted=clientRequest.getAttribute(PROXY_REQUEST_CONTENT_COMMITTED_ATTRIBUTE) != null;
  if (!contentCommitted && (size > 0 || finished)) {
    clientRequest.setAttribute(PROXY_REQUEST_CONTENT_COMMITTED_ATTRIBUTE,true);
    if (!expects100Continue) {
      proxyRequest.header(HttpHeader.CONTENT_LENGTH,null);
      sendProxyRequest(clientRequest,proxyResponse,proxyRequest);
    }
  }
  if (size == 0)   callback.succeeded();
}
