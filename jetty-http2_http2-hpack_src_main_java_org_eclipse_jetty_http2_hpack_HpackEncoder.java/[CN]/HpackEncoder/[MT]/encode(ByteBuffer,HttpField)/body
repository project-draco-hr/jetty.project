{
  final int p=LOG.isDebugEnabled() ? buffer.position() : -1;
  String encoding=null;
  Entry entry=_context.get(field);
  if (entry != null) {
    int index=_context.index(entry);
    if (p >= 0)     encoding="IdxField" + (entry.isStatic() ? "S" : "") + (1 + NBitInteger.octectsNeeded(7,index));
    buffer.put((byte)0x80);
    NBitInteger.encode(buffer,7,index);
  }
 else {
    final Entry name;
    final boolean indexed;
    final boolean never_index;
    final boolean huffman;
    final int bits;
    HttpHeader header=field.getHeader();
    if (header == null) {
      name=_context.get(field.getName());
      if (name == null) {
        indexed=true;
        never_index=false;
        huffman=true;
        bits=6;
        buffer.put((byte)0x40);
      }
 else {
        indexed=false;
        never_index=false;
        huffman=true;
        bits=4;
        buffer.put((byte)0x00);
      }
    }
 else {
      name=_context.get(header);
      if (__DO_NOT_INDEX.contains(header)) {
        indexed=false;
        never_index=__NEVER_INDEX.contains(header);
        huffman=!__DO_NOT_HUFFMAN.contains(header);
        bits=4;
        buffer.put(never_index ? (byte)0x10 : (byte)0x00);
      }
 else       if (header == HttpHeader.CONTENT_LENGTH && field.getValue().length() > 1) {
        indexed=false;
        never_index=false;
        huffman=true;
        bits=4;
        buffer.put((byte)0x00);
      }
 else {
        indexed=true;
        never_index=false;
        huffman=!__DO_NOT_HUFFMAN.contains(header);
        bits=6;
        buffer.put((byte)0x40);
      }
    }
    if (p >= 0) {
      encoding="Lit" + ((name == null) ? "HuffN" : ("IdxN" + (name.isStatic() ? "S" : "") + (1 + NBitInteger.octectsNeeded(bits,_context.index(name))))) + (huffman ? "HuffV" : "LitV")+ (indexed ? "Idx" : (never_index ? "!!Idx" : "!Idx"));
    }
    if (name != null)     NBitInteger.encode(buffer,bits,_context.index(name));
 else {
      buffer.put((byte)0x80);
      NBitInteger.encode(buffer,7,Huffman.octetsNeededLC(field.getName()));
      Huffman.encodeLC(buffer,field.getName());
    }
    String value=field.getValue();
    if (huffman) {
      buffer.put((byte)0x80);
      NBitInteger.encode(buffer,7,Huffman.octetsNeeded(value));
      Huffman.encode(buffer,field.getValue());
    }
 else {
      buffer.put((byte)0x00);
      NBitInteger.encode(buffer,7,value.length());
      for (int i=0; i < value.length(); i++) {
        char c=value.charAt(i);
        if (c < ' ' || c > 127)         throw new IllegalArgumentException();
        buffer.put((byte)c);
      }
    }
    if (indexed)     _context.add(field);
  }
  if (p >= 0) {
    int e=buffer.position();
    if (LOG.isDebugEnabled())     LOG.debug("encode {}:'{}' to '{}'",encoding,field,TypeUtil.toHexString(buffer.array(),buffer.arrayOffset() + p,e - p));
  }
}
