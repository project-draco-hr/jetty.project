{
  super.init(filterConfig);
  _context=filterConfig.getServletContext();
  String tmp=filterConfig.getInitParameter("bufferSize");
  if (tmp != null)   _bufferSize=Integer.parseInt(tmp);
  tmp=filterConfig.getInitParameter("minGzipSize");
  if (tmp != null)   _minGzipSize=Integer.parseInt(tmp);
  tmp=filterConfig.getInitParameter("deflateCompressionLevel");
  if (tmp != null)   _deflateCompressionLevel=Integer.parseInt(tmp);
  tmp=filterConfig.getInitParameter("deflateNoWrap");
  if (tmp != null)   _deflateNoWrap=Boolean.parseBoolean(tmp);
  tmp=filterConfig.getInitParameter("checkGzExists");
  if (tmp != null)   _checkGzExists=Boolean.parseBoolean(tmp);
  tmp=filterConfig.getInitParameter("methods");
  if (tmp != null) {
    StringTokenizer tok=new StringTokenizer(tmp,",",false);
    while (tok.hasMoreTokens())     _methods.add(tok.nextToken().trim().toUpperCase(Locale.ENGLISH));
  }
 else   _methods.add(HttpMethod.GET.asString());
  tmp=filterConfig.getInitParameter("mimeTypes");
  if (tmp == null) {
    _excludeMimeTypes=true;
    tmp=filterConfig.getInitParameter("excludedMimeTypes");
    if (tmp == null) {
      for (      String type : MimeTypes.getKnownMimeTypes()) {
        if (type.startsWith("image/") || type.startsWith("audio/") || type.startsWith("video/"))         _mimeTypes.add(type);
        _mimeTypes.add("application/compress");
        _mimeTypes.add("application/zip");
        _mimeTypes.add("application/gzip");
      }
    }
 else {
      StringTokenizer tok=new StringTokenizer(tmp,",",false);
      while (tok.hasMoreTokens())       _mimeTypes.add(tok.nextToken().trim());
    }
  }
 else {
    StringTokenizer tok=new StringTokenizer(tmp,",",false);
    while (tok.hasMoreTokens())     _mimeTypes.add(tok.nextToken().trim());
  }
  tmp=filterConfig.getInitParameter("excludedAgents");
  if (tmp != null) {
    _excludedAgents=new HashSet<String>();
    StringTokenizer tok=new StringTokenizer(tmp,",",false);
    while (tok.hasMoreTokens())     _excludedAgents.add(tok.nextToken().trim());
  }
  tmp=filterConfig.getInitParameter("excludeAgentPatterns");
  if (tmp != null) {
    _excludedAgentPatterns=new HashSet<Pattern>();
    StringTokenizer tok=new StringTokenizer(tmp,",",false);
    while (tok.hasMoreTokens())     _excludedAgentPatterns.add(Pattern.compile(tok.nextToken().trim()));
  }
  tmp=filterConfig.getInitParameter("excludePaths");
  if (tmp != null) {
    _excludedPaths=new HashSet<String>();
    StringTokenizer tok=new StringTokenizer(tmp,",",false);
    while (tok.hasMoreTokens())     _excludedPaths.add(tok.nextToken().trim());
  }
  tmp=filterConfig.getInitParameter("excludePathPatterns");
  if (tmp != null) {
    _excludedPathPatterns=new HashSet<Pattern>();
    StringTokenizer tok=new StringTokenizer(tmp,",",false);
    while (tok.hasMoreTokens())     _excludedPathPatterns.add(Pattern.compile(tok.nextToken().trim()));
  }
  tmp=filterConfig.getInitParameter("vary");
  if (tmp != null)   _vary=tmp;
}
