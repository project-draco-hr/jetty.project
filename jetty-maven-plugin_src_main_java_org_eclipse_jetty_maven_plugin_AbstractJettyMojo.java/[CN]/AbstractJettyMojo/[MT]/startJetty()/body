{
  try {
    getLog().debug("Starting Jetty Server ...");
    Resource.setDefaultUseCaches(false);
    configureMonitor();
    printSystemProperties();
    applyJettyXml();
    if (httpConnector != null) {
      if (httpConnector.getPort() <= 0) {
        String tmp=System.getProperty(MavenServerConnector.PORT_SYSPROPERTY,MavenServerConnector.DEFAULT_PORT_STR);
        httpConnector.setPort(Integer.parseInt(tmp.trim()));
      }
      httpConnector.setServer(server);
    }
    ServerSupport.configureConnectors(server,httpConnector);
    ServerSupport.configureHandlers(server,this.requestLog);
    configureWebApplication();
    ServerSupport.addWebApplication(server,webApp);
    ServerSupport.configureLoginServices(server,loginServices);
    finishConfigurationBeforeStart();
    this.server.start();
    getLog().info("Started Jetty Server");
    if (dumpOnStart) {
      getLog().info(this.server.dump());
    }
    configureScanner();
    startScanner();
    startConsoleScanner();
    if (!nonblocking) {
      server.join();
    }
  }
 catch (  Exception e) {
    throw new MojoExecutionException("Failure",e);
  }
 finally {
    if (!nonblocking) {
      getLog().info("Jetty server exiting.");
    }
  }
}
