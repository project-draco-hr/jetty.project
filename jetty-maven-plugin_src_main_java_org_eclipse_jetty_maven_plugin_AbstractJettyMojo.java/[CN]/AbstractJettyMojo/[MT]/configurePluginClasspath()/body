{
  if (useProvidedScope) {
    try {
      List<URL> provided=new ArrayList<URL>();
      URL[] urls=null;
      for (Iterator<Artifact> iter=projectArtifacts.iterator(); iter.hasNext(); ) {
        Artifact artifact=iter.next();
        if (Artifact.SCOPE_PROVIDED.equals(artifact.getScope()) && !isPluginArtifact(artifact)) {
          provided.add(artifact.getFile().toURI().toURL());
          if (getLog().isDebugEnabled()) {
            getLog().debug("Adding provided artifact: " + artifact);
          }
        }
      }
      if (!provided.isEmpty()) {
        urls=new URL[provided.size()];
        provided.toArray(urls);
        URLClassLoader loader=new URLClassLoader(urls,getClass().getClassLoader());
        Thread.currentThread().setContextClassLoader(loader);
        getLog().info("Plugin classpath augmented with <scope>provided</scope> dependencies: " + Arrays.toString(urls));
      }
    }
 catch (    MalformedURLException e) {
      throw new MojoExecutionException("Invalid url",e);
    }
  }
}
