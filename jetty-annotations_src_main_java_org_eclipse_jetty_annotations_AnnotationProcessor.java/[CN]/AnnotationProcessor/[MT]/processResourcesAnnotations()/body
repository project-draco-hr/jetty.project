{
  List<Class<?>> classes=_finder.getClassesForAnnotation(Resources.class);
  for (  Class<?> clazz : classes) {
    if (!isServletType(clazz)) {
      Log.debug("Ignoring @Resources annotation on on-servlet type class " + clazz.getName());
      continue;
    }
    Resources resources=(Resources)clazz.getAnnotation(Resources.class);
    if (resources == null)     continue;
    Resource[] resArray=resources.value();
    if (resArray == null || resArray.length == 0)     continue;
    for (int j=0; j < resArray.length; j++) {
      String name=resArray[j].name();
      String mappedName=resArray[j].mappedName();
      Resource.AuthenticationType auth=resArray[j].authenticationType();
      Class type=resArray[j].type();
      boolean shareable=resArray[j].shareable();
      if (name == null || name.trim().equals(""))       throw new IllegalStateException("Class level Resource annotations must contain a name (Common Annotations Spec Section 2.3)");
      try {
        if (!org.eclipse.jetty.plus.jndi.NamingEntryUtil.bindToENC(_webApp,name,mappedName))         if (!org.eclipse.jetty.plus.jndi.NamingEntryUtil.bindToENC(_webApp.getServer(),name,mappedName))         throw new IllegalStateException("No resource bound at " + (mappedName == null ? name : mappedName));
      }
 catch (      NamingException e) {
        throw new IllegalStateException(e);
      }
    }
  }
}
