{
  E e=null;
  final Lock headLock=_headLock;
  headLock.lockInterruptibly();
  try {
    try {
      while (_size.get() == 0) {
        _notEmpty.await();
      }
    }
 catch (    InterruptedException ie) {
      _notEmpty.signal();
      throw ie;
    }
    final int head=_head;
    e=(E)_elements[head];
    _elements[head]=null;
    _head=(head + 1) % _elements.length;
    if (_size.decrementAndGet() > 0)     _notEmpty.signal();
  }
  finally {
    headLock.unlock();
  }
  return e;
}
