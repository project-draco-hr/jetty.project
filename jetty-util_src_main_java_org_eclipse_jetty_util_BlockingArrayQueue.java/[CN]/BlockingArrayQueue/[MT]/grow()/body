{
  if (_growCapacity <= 0)   return false;
  final Lock tailLock=_tailLock;
  tailLock.lock();
  try {
    final Lock headLock=_headLock;
    headLock.lock();
    try {
      final int head=_head;
      final int tail=_tail;
      final int newTail;
      final int capacity=_elements.length;
      Object[] elements=new Object[capacity + _growCapacity];
      if (head < tail) {
        newTail=tail - head;
        System.arraycopy(_elements,head,elements,0,newTail);
      }
 else       if (head > tail || _size.get() > 0) {
        newTail=capacity + tail - head;
        int cut=capacity - head;
        System.arraycopy(_elements,head,elements,0,cut);
        System.arraycopy(_elements,0,elements,cut,tail);
      }
 else {
        newTail=0;
      }
      _elements=elements;
      _head=0;
      _tail=newTail;
      return true;
    }
  finally {
      headLock.unlock();
    }
  }
  finally {
    tailLock.unlock();
  }
}
