{
  if (e == null)   throw new NullPointerException();
  final Lock tailLock=_tailLock;
  tailLock.lock();
  try {
    final Lock headLock=_headLock;
    headLock.lock();
    try {
      final int size=_size.get();
      if (index < 0 || index > size)       throw new IndexOutOfBoundsException("!(" + 0 + "<"+ index+ "<="+ _size+ ")");
      if (index == size) {
        add(e);
      }
 else {
        if (_tail == _head)         if (!grow())         throw new IllegalStateException("full");
        int i=_head + index;
        int capacity=_capacity;
        if (i >= capacity)         i-=capacity;
        _size.incrementAndGet();
        int tail=_tail;
        _tail=tail=(tail + 1) % capacity;
        if (i < tail) {
          System.arraycopy(_elements,i,_elements,i + 1,tail - i);
          _elements[i]=e;
        }
 else {
          if (tail > 0) {
            System.arraycopy(_elements,0,_elements,1,tail);
            _elements[0]=_elements[capacity - 1];
          }
          System.arraycopy(_elements,i,_elements,i + 1,capacity - i - 1);
          _elements[i]=e;
        }
      }
    }
  finally {
      headLock.unlock();
    }
  }
  finally {
    tailLock.unlock();
  }
}
