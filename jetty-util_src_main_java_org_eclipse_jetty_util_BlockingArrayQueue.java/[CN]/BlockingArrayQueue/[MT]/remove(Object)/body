{
  final Lock tailLock=_tailLock;
  tailLock.lock();
  try {
    final Lock headLock=_headLock;
    headLock.lock();
    try {
      if (isEmpty())       return false;
      final int head=_head;
      final int tail=_tail;
      final int capacity=_elements.length;
      int i=head;
      while (true) {
        if (Objects.equals(_elements[i],o)) {
          remove(i >= head ? i - head : capacity - head + i);
          return true;
        }
        ++i;
        if (i == capacity)         i=0;
        if (i == tail)         return false;
      }
    }
  finally {
      headLock.unlock();
    }
  }
  finally {
    tailLock.unlock();
  }
}
