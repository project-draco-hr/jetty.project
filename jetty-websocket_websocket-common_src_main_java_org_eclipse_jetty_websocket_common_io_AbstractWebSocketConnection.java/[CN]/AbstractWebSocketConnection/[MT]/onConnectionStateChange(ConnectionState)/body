{
  if (LOG_CLOSE.isDebugEnabled())   LOG_CLOSE.debug("{} Connection State Change: {}",policy.getBehavior(),state);
switch (state) {
case OPEN:
    if (BufferUtil.hasContent(prefillBuffer)) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Parsing Upgrade prefill buffer ({} remaining)",prefillBuffer.remaining());
      }
      parser.parse(prefillBuffer);
    }
  if (LOG.isDebugEnabled()) {
    LOG.debug("OPEN: normal fillInterested");
  }
fillInterested();
break;
case CLOSED:
if (LOG_CLOSE.isDebugEnabled()) LOG_CLOSE.debug("CLOSED - wasAbnormalClose: {}",ioState.wasAbnormalClose());
if (ioState.wasAbnormalClose()) {
CloseInfo abnormal=new CloseInfo(StatusCode.SHUTDOWN,"Abnormal Close - " + ioState.getCloseInfo().getReason());
outgoingFrame(abnormal.asFrame(),new OnDisconnectCallback(false),BatchMode.OFF);
}
 else {
this.disconnect(false);
}
break;
case CLOSING:
if (LOG_CLOSE.isDebugEnabled()) LOG_CLOSE.debug("CLOSING - wasRemoteCloseInitiated: {}",ioState.wasRemoteCloseInitiated());
if (ioState.wasRemoteCloseInitiated()) {
CloseInfo close=ioState.getCloseInfo();
outgoingFrame(close.asFrame(),new OnCloseLocalCallback(new OnDisconnectCallback(true),close),BatchMode.OFF);
}
default :
break;
}
}
