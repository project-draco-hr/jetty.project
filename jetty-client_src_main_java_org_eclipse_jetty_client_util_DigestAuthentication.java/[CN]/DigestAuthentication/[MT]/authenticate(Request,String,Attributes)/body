{
  Map<String,String> params=parseParams(paramString);
  String nonce=params.get("nonce");
  if (nonce == null || nonce.length() == 0)   return false;
  String opaque=params.get("opaque");
  String algorithm=params.get("algorithm");
  if (algorithm == null)   algorithm="MD5";
  MessageDigest digester=getMessageDigest(algorithm);
  if (digester == null)   return false;
  String serverQOP=params.get("qop");
  String clientQOP=null;
  if (serverQOP != null) {
    List<String> serverQOPValues=Arrays.asList(serverQOP.split(","));
    if (serverQOPValues.contains("auth"))     clientQOP="auth";
 else     if (serverQOPValues.contains("auth-int"))     clientQOP="auth-int";
  }
  String hash=compute(digester,clientQOP,content,nonce);
  StringBuilder value=new StringBuilder("Digest");
  value.append(" username=\"").append(user).append("\"");
  value.append(", realm=\"").append(realm).append("\"");
  value.append(", nonce=\"").append(nonce).append("\"");
  if (opaque != null)   value.append(", opaque=\"").append(opaque).append("\"");
  value.append(", algorithm=\"").append(algorithm).append("\"");
  value.append(", uri=\"").append(request.uri()).append("\"");
  if (clientQOP != null)   value.append(", qop=\"").append(clientQOP).append("\"");
  value.append(", response=\"").append(hash).append("\"");
  request.header(HttpHeader.AUTHORIZATION.asString(),value.toString());
}
