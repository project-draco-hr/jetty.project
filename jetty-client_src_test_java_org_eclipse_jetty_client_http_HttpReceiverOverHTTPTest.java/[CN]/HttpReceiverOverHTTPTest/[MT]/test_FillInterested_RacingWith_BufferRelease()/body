{
  connection=new HttpConnectionOverHTTP(endPoint,destination,new Promise.Adapter<Connection>()){
    @Override protected HttpChannelOverHTTP newHttpChannel(){
      return new HttpChannelOverHTTP(this){
        @Override protected HttpReceiverOverHTTP newHttpReceiver(){
          return new HttpReceiverOverHTTP(this){
            @Override protected void fillInterested(){
              Assert.assertNull(getResponseBuffer());
              endPoint.setInput("X");
              super.fillInterested();
            }
          }
;
        }
      }
;
    }
  }
;
  endPoint.setInput("" + "HTTP/1.1 200 OK\r\n" + "Content-Length: 1\r\n"+ "\r\n");
  HttpExchange exchange=newExchange();
  FutureResponseListener listener=(FutureResponseListener)exchange.getResponseListeners().get(0);
  connection.getHttpChannel().receive();
  Response response=listener.get(5,TimeUnit.SECONDS);
  Assert.assertNotNull(response);
  Assert.assertEquals(200,response.getStatus());
}
