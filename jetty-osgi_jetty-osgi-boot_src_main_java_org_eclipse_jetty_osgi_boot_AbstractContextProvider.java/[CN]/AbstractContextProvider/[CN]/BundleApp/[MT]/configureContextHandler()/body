{
  if (_configured)   return;
  _configured=true;
  String bundleOverrideLocation=(String)_properties.get(OSGiWebappConstants.JETTY_BUNDLE_INSTALL_LOCATION_OVERRIDE);
  if (bundleOverrideLocation == null)   bundleOverrideLocation=(String)_properties.get(OSGiWebappConstants.SERVICE_PROP_BUNDLE_INSTALL_LOCATION_OVERRIDE);
  File bundleLocation=BundleFileLocatorHelperFactory.getFactory().getHelper().getBundleInstallLocation(_bundle);
  File root=(bundleOverrideLocation == null ? bundleLocation : new File(bundleOverrideLocation));
  Resource rootResource=Resource.newResource(BundleFileLocatorHelperFactory.getFactory().getHelper().getLocalURL(root.toURI().toURL()));
  if (rootResource.exists() && !rootResource.isDirectory() && !rootResource.toString().startsWith("jar:")) {
    Resource jarResource=JarResource.newJarResource(rootResource);
    if (jarResource.exists() && jarResource.isDirectory())     rootResource=jarResource;
  }
  if (_contextHandler.getBaseResource() == null) {
    _contextHandler.setBaseResource(rootResource);
  }
  OSGiClassLoader classLoader=new OSGiClassLoader(getServerInstanceWrapper().getParentClassLoaderForWebapps(),_bundle);
  if (_contextFile == null && _contextHandler == null)   throw new IllegalStateException("No context file or ContextHandler");
  if (_contextFile != null) {
    Resource res=null;
    if (_contextFile.startsWith("/"))     res=getFileAsResource(_contextFile);
    if (res == null) {
      String jettyHome=(String)getServerInstanceWrapper().getServer().getAttribute(OSGiServerConstants.JETTY_HOME);
      if (jettyHome != null)       res=getFileAsResource(jettyHome,_contextFile);
      if (res == null) {
        jettyHome=System.getProperty(OSGiServerConstants.JETTY_HOME);
        if (jettyHome != null) {
          if (jettyHome.startsWith("\"") || jettyHome.startsWith("'"))           jettyHome=jettyHome.substring(1);
          if (jettyHome.endsWith("\"") || (jettyHome.endsWith("'")))           jettyHome=jettyHome.substring(0,jettyHome.length() - 1);
          res=getFileAsResource(jettyHome,_contextFile);
          if (LOG.isDebugEnabled())           LOG.debug("jetty home context file:" + res);
        }
      }
    }
    if (res == null) {
      if (bundleOverrideLocation != null) {
        res=getFileAsResource(Resource.newResource(bundleOverrideLocation).getFile(),_contextFile);
        if (LOG.isDebugEnabled())         LOG.debug("Bundle override location context file:" + res);
      }
    }
    if (res == null) {
      if (_contextFile.startsWith("./"))       _contextFile=_contextFile.substring(1);
      if (!_contextFile.startsWith("/"))       _contextFile="/" + _contextFile;
      URL contextURL=_bundle.getEntry(_contextFile);
      if (contextURL != null)       res=Resource.newResource(contextURL);
    }
    if (res != null) {
      ClassLoader cl=Thread.currentThread().getContextClassLoader();
      LOG.debug("Context classloader = " + cl);
      try {
        Thread.currentThread().setContextClassLoader(classLoader);
        XmlConfiguration xmlConfiguration=new XmlConfiguration(res.getInputStream());
        HashMap properties=new HashMap();
        properties.put("Server",getServerInstanceWrapper().getServer());
        properties.put("bundle.root",rootResource.toString());
        xmlConfiguration.getProperties().putAll(properties);
        if (_contextHandler == null)         _contextHandler=(ContextHandler)xmlConfiguration.configure();
 else         xmlConfiguration.configure(_contextHandler);
      }
  finally {
        Thread.currentThread().setContextClassLoader(cl);
      }
    }
  }
  _contextHandler.setClassLoader(classLoader);
  String contextPath=(String)_properties.get(OSGiWebappConstants.RFC66_WEB_CONTEXTPATH);
  if (contextPath == null)   contextPath=(String)_properties.get(OSGiWebappConstants.SERVICE_PROP_CONTEXT_PATH);
  if (contextPath != null)   _contextHandler.setContextPath(contextPath);
}
