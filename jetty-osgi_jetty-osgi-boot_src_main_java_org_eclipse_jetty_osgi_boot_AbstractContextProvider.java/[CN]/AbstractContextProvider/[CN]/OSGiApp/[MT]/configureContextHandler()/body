{
  if (_configured)   return;
  _configured=true;
  String bundleOverrideLocation=(String)_properties.get(OSGiWebappConstants.JETTY_BUNDLE_INSTALL_LOCATION_OVERRIDE);
  if (bundleOverrideLocation == null)   bundleOverrideLocation=(String)_properties.get(OSGiWebappConstants.SERVICE_PROP_BUNDLE_INSTALL_LOCATION_OVERRIDE);
  File bundleLocation=BundleFileLocatorHelperFactory.getFactory().getHelper().getBundleInstallLocation(_bundle);
  File root=(bundleOverrideLocation == null ? bundleLocation : new File(bundleOverrideLocation));
  Resource rootResource=Resource.newResource(BundleFileLocatorHelperFactory.getFactory().getHelper().getLocalURL(root.toURI().toURL()));
  if (rootResource.exists() && !rootResource.isDirectory() && !rootResource.toString().startsWith("jar:")) {
    Resource jarResource=JarResource.newJarResource(rootResource);
    if (jarResource.exists() && jarResource.isDirectory())     rootResource=jarResource;
  }
  if (_contextHandler != null && _contextHandler.getBaseResource() == null) {
    _contextHandler.setBaseResource(rootResource);
  }
  OSGiClassLoader classLoader=new OSGiClassLoader(getServerInstanceWrapper().getParentClassLoaderForWebapps(),_bundle);
  if (_contextFile == null && _contextHandler == null)   throw new IllegalStateException("No context file or ContextHandler");
  if (_contextFile != null) {
    Resource res=null;
    String jettyHome=(String)getServerInstanceWrapper().getServer().getAttribute(OSGiServerConstants.JETTY_HOME);
    if (jettyHome == null)     jettyHome=System.getProperty(OSGiServerConstants.JETTY_HOME);
    res=findFile(_contextFile,jettyHome,bundleOverrideLocation,_bundle);
    if (res != null) {
      ClassLoader cl=Thread.currentThread().getContextClassLoader();
      LOG.debug("Context classloader = " + cl);
      try {
        Thread.currentThread().setContextClassLoader(classLoader);
        XmlConfiguration xmlConfiguration=new XmlConfiguration(res.getInputStream());
        HashMap properties=new HashMap();
        properties.put("Server",getServerInstanceWrapper().getServer());
        properties.put(OSGiWebappConstants.JETTY_BUNDLE_ROOT,rootResource.toString());
        xmlConfiguration.getProperties().putAll(properties);
        if (_contextHandler == null)         _contextHandler=(ContextHandler)xmlConfiguration.configure();
 else         xmlConfiguration.configure(_contextHandler);
      }
  finally {
        Thread.currentThread().setContextClassLoader(cl);
      }
    }
  }
  _contextHandler.setClassLoader(classLoader);
  String contextPath=(String)_properties.get(OSGiWebappConstants.RFC66_WEB_CONTEXTPATH);
  if (contextPath == null)   contextPath=(String)_properties.get(OSGiWebappConstants.SERVICE_PROP_CONTEXT_PATH);
  if (contextPath != null)   _contextHandler.setContextPath(contextPath);
  _contextHandler.setAttribute(OSGiWebappConstants.OSGI_BUNDLECONTEXT,_bundle.getBundleContext());
  String[] targets=_contextHandler.getProtectedTargets();
  int length=(targets == null ? 0 : targets.length);
  String[] updatedTargets=null;
  if (targets != null) {
    updatedTargets=new String[length + OSGiWebappConstants.DEFAULT_PROTECTED_OSGI_TARGETS.length];
    System.arraycopy(targets,0,updatedTargets,0,length);
  }
 else   updatedTargets=new String[OSGiWebappConstants.DEFAULT_PROTECTED_OSGI_TARGETS.length];
  System.arraycopy(OSGiWebappConstants.DEFAULT_PROTECTED_OSGI_TARGETS,0,updatedTargets,length,OSGiWebappConstants.DEFAULT_PROTECTED_OSGI_TARGETS.length);
  _contextHandler.setProtectedTargets(updatedTargets);
}
