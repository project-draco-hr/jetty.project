{
  final String data=UUID.randomUUID().toString();
  final CountDownLatch replyLatch=new CountDownLatch(1);
  final CountDownLatch dataLatch=new CountDownLatch(1);
  Fields headers=SPDYTestUtils.createHeaders(serverHost,proxyAddress.getPort(),version,"POST","/");
  Stream stream=client.syn(new SynInfo(headers,false),new StreamFrameListener.Adapter(){
    private final ByteArrayOutputStream result=new ByteArrayOutputStream();
    @Override public void onReply(    Stream stream,    ReplyInfo replyInfo){
      LOG.debug("Got reply: {}",replyInfo);
      Fields headers=replyInfo.getHeaders();
      assertThat("response comes from the given server",headers.get(serverIdentificationString),is(notNullValue()));
      replyLatch.countDown();
    }
    @Override public void onData(    Stream stream,    DataInfo dataInfo){
      result.write(dataInfo.asBytes(true),0,dataInfo.length());
      if (dataInfo.isClose()) {
        LOG.debug("Got last dataFrame: {}",dataInfo);
        assertThat("received data matches send data",data,is(result.toString()));
        dataLatch.countDown();
      }
    }
  }
);
  stream.data(new StringDataInfo(data,true),new Callback.Adapter());
  assertThat("reply has been received",replyLatch.await(5,TimeUnit.SECONDS),is(true));
  assertThat("data has been received",dataLatch.await(5,TimeUnit.SECONDS),is(true));
  LOG.debug("Successfully received response");
}
