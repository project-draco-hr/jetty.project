{
  int t=_tree[EQ];
  int len=length;
  int i=0;
  while (i < len) {
    char c=s.charAt(offset + i++);
    if (isCaseInsensitive() && c < 128)     c=StringUtil.lowercases[c];
    while (true) {
      int row=ROW_SIZE * t;
      char n=_tree[row];
      int diff=n - c;
      if (diff == 0) {
        if (i == len)         return (V)_value[t];
        t=_tree[row + EQ];
        if (t == 0)         return null;
        break;
      }
      t=_tree[row + ((diff < 0) ? LO : HI)];
      if (t == 0)       return null;
    }
  }
  return null;
}
