{
  _logger.debug("{}: begin reading from client",this);
  try {
    if (_firstTime) {
      _firstTime=false;
      register(_channel,_toServer);
      _logger.debug("{}: registered channel {} with connection {}",this,_channel,_toServer);
    }
    while (true) {
      int read=read(_endPoint,_buffer,_context);
      if (read == -1) {
        _logger.debug("{}: client closed connection {}",this,_endPoint);
        close();
        break;
      }
      if (read == 0)       break;
      _logger.debug("{}: read from client {} bytes {}",this,read,_endPoint);
      int written=write(_toServer._endPoint,_buffer,_context);
      _logger.debug("{}: written to {} {} bytes",this,_toServer,written);
    }
    return this;
  }
 catch (  ClosedChannelException x) {
    _logger.debug(x);
    closeServer();
    throw x;
  }
catch (  IOException x) {
    _logger.warn(this + ": unexpected exception",x);
    close();
    throw x;
  }
catch (  RuntimeException x) {
    _logger.warn(this + ": unexpected exception",x);
    close();
    throw x;
  }
 finally {
    _logger.debug("{}: end reading from client",this);
  }
}
