{
synchronized (this) {
    _event=new AsyncEventState(context,request,response);
switch (_state) {
case __DISPATCHED:
case __REDISPATCHED:
      _state=__SUSPENDING;
    return;
case __IDLE:
  throw new IllegalStateException(this.getStatusString());
case __SUSPENDING:
case __REDISPATCHING:
return;
case __COMPLETING:
case __SUSPENDED:
case __UNSUSPENDING:
case __COMPLETE:
throw new IllegalStateException(this.getStatusString());
default :
throw new IllegalStateException("" + _state);
}
}
}
