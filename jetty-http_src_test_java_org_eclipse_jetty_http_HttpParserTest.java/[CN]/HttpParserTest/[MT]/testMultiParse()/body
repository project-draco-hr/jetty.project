{
  StringEndPoint io=new StringEndPoint();
  io.setInput("GET /mp HTTP/1.0\015\012" + "Connection: Keep-Alive\015\012" + "Header1: value1\015\012"+ "Transfer-Encoding: chunked\015\012"+ "\015\012"+ "a;\015\012"+ "0123456789\015\012"+ "1a\015\012"+ "ABCDEFGHIJKLMNOPQRSTUVWXYZ\015\012"+ "0\015\012"+ "POST /foo HTTP/1.0\015\012"+ "Connection: Keep-Alive\015\012"+ "Header2: value2\015\012"+ "Content-Length: 0\015\012"+ "\015\012"+ "PUT /doodle HTTP/1.0\015\012"+ "Connection: close\015\012"+ "Header3: value3\015\012"+ "Content-Length: 10\015\012"+ "\015\012"+ "0123456789\015\012");
  ByteArrayBuffer buffer=new ByteArrayBuffer(4096);
  ByteArrayBuffer content=new ByteArrayBuffer(8192);
  SimpleBuffers buffers=new SimpleBuffers(buffer,content);
  Handler handler=new Handler();
  HttpParser parser=new HttpParser(buffers,io,handler);
  parser.parse();
  assertEquals("GET",f0);
  assertEquals("/mp",f1);
  assertEquals("HTTP/1.0",f2);
  assertEquals(2,h);
  assertEquals("Header1",hdr[1]);
  assertEquals("value1",val[1]);
  assertEquals("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",_content);
  parser.parse();
  assertEquals("POST",f0);
  assertEquals("/foo",f1);
  assertEquals("HTTP/1.0",f2);
  assertEquals(2,h);
  assertEquals("Header2",hdr[1]);
  assertEquals("value2",val[1]);
  assertEquals(null,_content);
  parser.parse();
  assertEquals("PUT",f0);
  assertEquals("/doodle",f1);
  assertEquals("HTTP/1.0",f2);
  assertEquals(2,h);
  assertEquals("Header3",hdr[1]);
  assertEquals("value3",val[1]);
  assertEquals("0123456789",_content);
}
