{
  int space=aggregate == null ? bufferSize : aggregate.remaining();
  BatchMode currentBatchMode=BatchMode.AUTO;
synchronized (lock) {
    while (entries.size() <= maxGather && !queue.isEmpty()) {
      FrameEntry entry=queue.remove(0);
      currentBatchMode=BatchMode.max(currentBatchMode,entry.batchMode);
      if (entry.frame == FLUSH_FRAME)       currentBatchMode=BatchMode.OFF;
      int payloadLength=BufferUtil.length(entry.frame.getPayload());
      int approxFrameLength=Generator.MAX_HEADER_LENGTH + payloadLength;
      if (approxFrameLength > (bufferSize >> 2))       currentBatchMode=BatchMode.OFF;
      space-=approxFrameLength;
      if (space <= 0)       currentBatchMode=BatchMode.OFF;
      entries.add(entry);
    }
  }
  if (LOG.isDebugEnabled())   LOG.debug("{} processing {} entries: {}",FrameFlusher.this,entries.size(),entries);
  if (entries.isEmpty()) {
    if (releaseAggregate) {
      bufferPool.release(aggregate);
      if (LOG.isDebugEnabled())       LOG.debug("{} released aggregate buffer {}",FrameFlusher.this,aggregate);
      aggregate=null;
    }
    if (batchMode != BatchMode.AUTO)     return Action.IDLE;
    LOG.debug("{} auto flushing",FrameFlusher.this);
    return flush();
  }
  batchMode=currentBatchMode;
  return currentBatchMode == BatchMode.OFF ? flush() : batch();
}
