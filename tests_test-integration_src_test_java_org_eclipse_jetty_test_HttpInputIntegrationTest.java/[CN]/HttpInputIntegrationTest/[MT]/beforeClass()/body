{
  __config=new HttpConfiguration();
  __server=new Server();
  LocalConnector local=new LocalConnector(__server,new HttpConnectionFactory(__config));
  local.setIdleTimeout(4000);
  __server.addConnector(local);
  ServerConnector http=new ServerConnector(__server,new HttpConnectionFactory(__config),new HTTP2CServerConnectionFactory(__config));
  http.setIdleTimeout(4000);
  __server.addConnector(http);
  String jetty_distro=System.getProperty("jetty.distro","../../jetty-distribution/target/distribution");
  __sslContextFactory=new SslContextFactory();
  __sslContextFactory.setKeyStorePath(jetty_distro + "/etc/example-keystore");
  __sslContextFactory.setKeyStorePassword("OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4");
  __sslContextFactory.setKeyManagerPassword("OBF:1u2u1wml1z7s1z7a1wnl1u2g");
  __sslConfig=new HttpConfiguration(__config);
  __sslConfig.addCustomizer(new SecureRequestCustomizer());
  HttpConnectionFactory h1=new HttpConnectionFactory(__sslConfig);
  SslConnectionFactory ssl=new SslConnectionFactory(__sslContextFactory,h1.getProtocol());
  ServerConnector http2=new ServerConnector(__server,ssl,h1);
  http2.setIdleTimeout(4000);
  __server.addConnector(http2);
  ServletContextHandler context=new ServletContextHandler(__server,"/ctx");
  ServletHolder holder=new ServletHolder(new TestServlet());
  holder.setAsyncSupported(true);
  context.addServlet(holder,"/*");
  __server.start();
}
