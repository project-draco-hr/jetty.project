{
  if (LOG.isDebugEnabled()) {
    LOG.debug("{}.onFrame({})",websocket.getClass().getSimpleName(),frame);
  }
  try {
    onFrame(frame);
    byte opcode=frame.getOpCode();
switch (opcode) {
case OpCode.CLOSE:
{
        boolean validate=true;
        CloseFrame closeframe=(CloseFrame)frame;
        CloseInfo close=new CloseInfo(closeframe,validate);
        onClose(close);
        session.getConnection().getIOState().onCloseRemote(close);
        return;
      }
case OpCode.PING:
{
      ByteBuffer pongBuf;
      if (frame.hasPayload()) {
        pongBuf=ByteBuffer.allocate(frame.getPayload().remaining());
        BufferUtil.put(frame.getPayload(),pongBuf);
        BufferUtil.flipToFlush(pongBuf,0);
      }
 else {
        pongBuf=ByteBuffer.allocate(0);
      }
      onPing(frame.getPayload());
      session.getRemote().sendPong(pongBuf);
      break;
    }
case OpCode.PONG:
{
    onPong(frame.getPayload());
    break;
  }
case OpCode.BINARY:
{
  onBinaryFrame(frame.getPayload(),frame.isFin());
  return;
}
case OpCode.TEXT:
{
onTextFrame(frame.getPayload(),frame.isFin());
return;
}
case OpCode.CONTINUATION:
{
onContinuationFrame(frame.getPayload(),frame.isFin());
return;
}
default :
{
LOG.debug("Unhandled OpCode: {}",opcode);
}
}
}
 catch (NotUtf8Exception e) {
terminateConnection(StatusCode.BAD_PAYLOAD,e.getMessage());
}
catch (CloseException e) {
terminateConnection(e.getStatusCode(),e.getMessage());
}
catch (Throwable t) {
unhandled(t);
}
}
