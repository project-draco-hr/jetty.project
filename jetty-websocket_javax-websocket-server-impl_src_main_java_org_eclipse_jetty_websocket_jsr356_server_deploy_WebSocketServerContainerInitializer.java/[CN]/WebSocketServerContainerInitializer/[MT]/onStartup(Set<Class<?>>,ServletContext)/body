{
  if (!isJSR356EnabledOnContext(context)) {
    LOG.info("JSR-356 support disabled via attribute on context {} - {}",context.getContextPath(),context);
    return;
  }
  ContextHandler handler=ContextHandler.getContextHandler(context);
  if (handler == null) {
    throw new ServletException("Not running on Jetty, JSR support disabled");
  }
  if (!(handler instanceof ServletContextHandler)) {
    throw new ServletException("Not running in Jetty ServletContextHandler, JSR support disabled");
  }
  ServletContextHandler jettyContext=(ServletContextHandler)handler;
  ServerContainer jettyContainer=configureContext(jettyContext);
  context.setAttribute(javax.websocket.server.ServerContainer.class.getName(),jettyContainer);
  LOG.debug("Found {} classes",c.size());
  Set<Class<? extends Endpoint>> discoveredExtendedEndpoints=new HashSet<>();
  Set<Class<?>> discoveredAnnotatedEndpoints=new HashSet<>();
  Set<Class<? extends ServerApplicationConfig>> serverAppConfigs=new HashSet<>();
  filterClasses(c,discoveredExtendedEndpoints,discoveredAnnotatedEndpoints,serverAppConfigs);
  LOG.debug("Discovered {} extends Endpoint classes",discoveredExtendedEndpoints.size());
  LOG.debug("Discovered {} @ServerEndpoint classes",discoveredAnnotatedEndpoints.size());
  LOG.debug("Discovered {} ServerApplicationConfig classes",serverAppConfigs.size());
  boolean wasFiltered=false;
  Set<ServerEndpointConfig> deployableExtendedEndpointConfigs=new HashSet<>();
  Set<Class<?>> deployableAnnotatedEndpoints=new HashSet<>();
  for (  Class<? extends ServerApplicationConfig> clazz : serverAppConfigs) {
    LOG.debug("Found ServerApplicationConfig: {}",clazz);
    try {
      ServerApplicationConfig config=(ServerApplicationConfig)clazz.newInstance();
      Set<ServerEndpointConfig> seconfigs=config.getEndpointConfigs(discoveredExtendedEndpoints);
      if (seconfigs != null) {
        wasFiltered=true;
        deployableExtendedEndpointConfigs.addAll(seconfigs);
      }
      Set<Class<?>> annotatedClasses=config.getAnnotatedEndpointClasses(discoveredAnnotatedEndpoints);
      if (annotatedClasses != null) {
        wasFiltered=true;
        deployableAnnotatedEndpoints.addAll(annotatedClasses);
      }
    }
 catch (    InstantiationException|IllegalAccessException e) {
      throw new ServletException("Unable to instantiate: " + clazz.getName(),e);
    }
  }
  if (!wasFiltered) {
    deployableAnnotatedEndpoints.addAll(discoveredAnnotatedEndpoints);
    deployableExtendedEndpointConfigs=new HashSet<>();
  }
  LOG.debug("Deploying {} ServerEndpointConfig(s)",deployableExtendedEndpointConfigs.size());
  for (  ServerEndpointConfig config : deployableExtendedEndpointConfigs) {
    try {
      jettyContainer.addEndpoint(config);
    }
 catch (    DeploymentException e) {
      throw new ServletException(e);
    }
  }
  LOG.debug("Deploying {} @ServerEndpoint(s)",deployableAnnotatedEndpoints.size());
  for (  Class<?> annotatedClass : deployableAnnotatedEndpoints) {
    try {
      jettyContainer.addEndpoint(annotatedClass);
    }
 catch (    DeploymentException e) {
      throw new ServletException(e);
    }
  }
}
