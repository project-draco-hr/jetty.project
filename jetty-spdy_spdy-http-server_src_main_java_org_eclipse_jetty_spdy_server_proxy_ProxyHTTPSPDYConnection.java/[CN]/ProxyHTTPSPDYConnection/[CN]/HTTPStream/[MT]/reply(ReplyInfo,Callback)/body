{
  Fields headers=new Fields(replyInfo.getHeaders(),false);
  addPersistenceHeader(headers);
  headers.remove(HTTPSPDYHeader.SCHEME.name(version));
  String status=headers.remove(HTTPSPDYHeader.STATUS.name(version)).getValue();
  Matcher matcher=statusRegexp.matcher(status);
  matcher.matches();
  int code=Integer.parseInt(matcher.group(1));
  String reason=matcher.group(2).trim();
  HttpVersion httpVersion=HttpVersion.fromString(headers.remove(HTTPSPDYHeader.VERSION.name(version)).getValue());
  Fields.Field host=headers.remove(HTTPSPDYHeader.HOST.name(version));
  if (host != null)   headers.put("host",host.getValue());
  HttpFields fields=new HttpFields();
  for (  Fields.Field header : headers) {
    String name=camelize(header.getName());
    fields.put(name,header.getValue());
  }
  long contentLength=fields.getLongField(HttpHeader.CONTENT_LENGTH.asString());
  MetaData.Response info=new MetaData.Response(httpVersion,code,reason,fields,contentLength);
  send(info,false,null,replyInfo.isClose(),new Adapter(){
    @Override public void failed(    Throwable x){
      handler.failed(x);
    }
  }
);
  if (replyInfo.isClose())   onCompleted();
  handler.succeeded();
}
