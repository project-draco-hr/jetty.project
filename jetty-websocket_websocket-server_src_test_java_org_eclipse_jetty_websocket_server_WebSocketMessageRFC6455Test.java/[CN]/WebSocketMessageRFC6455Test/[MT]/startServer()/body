{
  __server=new Server();
  __connector=new SelectChannelConnector();
  __server.addConnector(__connector);
  WebSocketHandler wsHandler=new WebSocketHandler(){
    @Override public void registerWebSockets(    WebSocketServerFactory factory){
      factory.register(TestWebSocket.class);
      factory.setCreator(new WebSocketCreator(){
        @Override public Object createWebSocket(        WebSocketRequest req,        WebSocketResponse resp){
          __textCount.set(0);
          __serverWebSocket=new TestWebSocket();
          __serverWebSocket._onConnect=req.hasSubProtocol("onConnect");
          __serverWebSocket._echo=req.hasSubProtocol("echo");
          __serverWebSocket._aggregate=req.hasSubProtocol("aggregate");
          __serverWebSocket._latch=req.hasSubProtocol("latch");
          if (__serverWebSocket._latch) {
            __latch=new CountDownLatch(1);
          }
          return __serverWebSocket;
        }
      }
);
    }
  }
;
  wsHandler.getWebSocketFactory().getPolicy().setBufferSize(8192);
  wsHandler.getWebSocketFactory().getPolicy().setMaxIdleTime(1000);
  wsHandler.setHandler(new DefaultHandler());
  __server.setHandler(wsHandler);
  __server.start();
}
