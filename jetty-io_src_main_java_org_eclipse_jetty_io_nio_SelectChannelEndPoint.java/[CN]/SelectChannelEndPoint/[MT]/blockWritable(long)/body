{
synchronized (this) {
    if (isOutputShutdown())     throw new EofException();
    long now=_selectSet.getNow();
    long end=now + timeoutMs;
    boolean check=isCheckForIdle();
    setCheckForIdle(true);
    try {
      _writeBlocked=true;
      while (_writeBlocked && !isOutputShutdown()) {
        try {
          updateKey();
          this.wait(timeoutMs >= 0 ? (end - now) : 10000);
        }
 catch (        InterruptedException e) {
          LOG.warn(e);
        }
 finally {
          now=_selectSet.getNow();
        }
        if (_writeBlocked && timeoutMs > 0 && now >= end)         return false;
      }
    }
  finally {
      _writeBlocked=false;
      setCheckForIdle(check);
    }
  }
  return true;
}
