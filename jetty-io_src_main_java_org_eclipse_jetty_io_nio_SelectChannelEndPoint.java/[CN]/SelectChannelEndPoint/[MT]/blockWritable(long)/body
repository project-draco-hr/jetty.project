{
synchronized (this) {
    if (!isOpen() || isOutputShutdown())     throw new EofException();
    long now=_selectSet.getNow();
    long end=now + timeoutMs;
    try {
      _writeBlocked=true;
      while (isOpen() && _writeBlocked && !isOutputShutdown()) {
        try {
          updateKey();
          this.wait(timeoutMs >= 0 ? (end - now) : 10000);
        }
 catch (        InterruptedException e) {
          __log.warn(e);
        }
 finally {
          now=_selectSet.getNow();
        }
        if (_writeBlocked && timeoutMs > 0 && now >= end)         return false;
      }
    }
 catch (    Throwable e) {
      __log.warn(e);
      if (e instanceof RuntimeException)       throw (RuntimeException)e;
      if (e instanceof Error)       throw (Error)e;
      throw new RuntimeException(e);
    }
 finally {
      _writeBlocked=false;
      if (_idleTimestamp != -1)       scheduleIdle();
    }
  }
  return true;
}
