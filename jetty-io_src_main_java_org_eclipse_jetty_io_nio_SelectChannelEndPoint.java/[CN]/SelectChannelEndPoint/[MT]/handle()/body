{
  boolean dispatched=true;
  try {
    while (dispatched) {
      try {
        while (true) {
          final AsyncConnection next=(AsyncConnection)_connection.handle();
          if (next != _connection) {
            LOG.debug("{} replaced {}",next,_connection);
            _connection=next;
            _manager.endPointUpgraded(this,_connection);
            continue;
          }
          break;
        }
      }
 catch (      ClosedChannelException e) {
        LOG.ignore(e);
      }
catch (      EofException e) {
        LOG.debug("EOF",e);
        try {
          close();
        }
 catch (        IOException e2) {
          LOG.ignore(e2);
        }
      }
catch (      IOException e) {
        LOG.warn(e.toString());
        LOG.debug(e);
        try {
          close();
        }
 catch (        IOException e2) {
          LOG.ignore(e2);
        }
      }
catch (      Throwable e) {
        LOG.warn("handle failed",e);
        try {
          close();
        }
 catch (        IOException e2) {
          LOG.ignore(e2);
        }
      }
 finally {
        dispatched=!undispatch();
        if (!_ishut && isInputShutdown() && isOpen()) {
          _ishut=true;
          try {
            _connection.onInputShutdown();
          }
 catch (          Throwable x) {
            if (x instanceof ThreadDeath)             throw (ThreadDeath)x;
            LOG.warn("onInputShutdown failed",x);
            try {
              close();
            }
 catch (            IOException e2) {
              LOG.ignore(e2);
            }
          }
 finally {
            updateKey();
          }
        }
      }
    }
  }
  finally {
    if (dispatched) {
      dispatched=!undispatch();
      while (dispatched) {
        LOG.warn("SCEP.run() finally DISPATCHED");
        dispatched=!undispatch();
      }
    }
  }
}
