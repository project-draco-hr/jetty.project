{
  int size=32;
  ContentExchange httpExchange=new ContentExchange(){
    int total;
    @Override protected synchronized void onResponseStatus(    Buffer version,    int status,    Buffer reason) throws IOException {
      if (verbose)       System.err.println("] " + version + " "+ status+ " "+ reason);
      super.onResponseStatus(version,status,reason);
    }
    @Override protected synchronized void onResponseHeader(    Buffer name,    Buffer value) throws IOException {
      if (verbose)       System.err.println("] " + name + ": "+ value);
      super.onResponseHeader(name,value);
    }
    @Override protected synchronized void onResponseContent(    Buffer content) throws IOException {
      if (verbose) {
        total+=content.length();
        System.err.println("] " + content.length() + " -> "+ total);
      }
      super.onResponseContent(content);
    }
    @Override protected void onRequestComplete() throws IOException {
      if (verbose)       System.err.println("] ==");
      super.onRequestComplete();
    }
    @Override protected void onResponseHeaderComplete() throws IOException {
      if (verbose)       System.err.println("] --");
      super.onResponseHeaderComplete();
    }
  }
;
  Buffer babuf=new ByteArrayBuffer(size * 36 * 1024);
  Buffer niobuf=new DirectNIOBuffer(size * 36 * 1024);
  byte[] bytes="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".getBytes();
  for (int i=0; i < size * 1024; i++) {
    babuf.put(bytes);
    niobuf.put(bytes);
  }
  httpExchange.setURI(getBaseURI());
  httpExchange.setMethod(HttpMethods.POST);
  httpExchange.setRequestContentType("application/data");
  httpExchange.setRequestContent(babuf);
  _httpClient.send(httpExchange);
  int status=httpExchange.waitForDone();
  assertEquals(HttpExchange.STATUS_COMPLETED,status);
  String result=httpExchange.getResponseContent();
  assertEquals(babuf.length(),result.length());
  httpExchange.reset();
  httpExchange.setURI(getBaseURI());
  httpExchange.setMethod(HttpMethods.POST);
  httpExchange.setRequestContentType("application/data");
  httpExchange.setRequestContent(niobuf);
  _httpClient.send(httpExchange);
  status=httpExchange.waitForDone();
  assertEquals(HttpExchange.STATUS_COMPLETED,status);
  result=httpExchange.getResponseContent();
  assertEquals(niobuf.length(),result.length());
}
