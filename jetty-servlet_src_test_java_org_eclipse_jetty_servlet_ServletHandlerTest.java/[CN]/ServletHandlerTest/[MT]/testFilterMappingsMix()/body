{
  ServletHandler handler=new ServletHandler();
  handler.addFilter(fh1);
  handler.addFilterMapping(fm1);
  FilterMapping[] mappings=handler.getFilterMappings();
  assertNotNull(mappings);
  assertTrue(fm1 == mappings[0]);
  handler.addFilter(fh4);
  handler.prependFilterMapping(fm4);
  mappings=handler.getFilterMappings();
  assertNotNull(mappings);
  assertEquals(2,mappings.length);
  assertTrue(fm4 == mappings[0]);
  assertTrue(fm1 == mappings[1]);
  handler.addFilter(fh3);
  handler.addFilterMapping(fm3);
  mappings=handler.getFilterMappings();
  assertNotNull(mappings);
  assertEquals(3,mappings.length);
  assertTrue(fm4 == mappings[0]);
  assertTrue(fm1 == mappings[1]);
  assertTrue(fm3 == mappings[2]);
  handler.addFilter(fh5);
  handler.prependFilterMapping(fm5);
  mappings=handler.getFilterMappings();
  assertNotNull(mappings);
  assertEquals(4,mappings.length);
  assertTrue(fm4 == mappings[0]);
  assertTrue(fm5 == mappings[1]);
  assertTrue(fm1 == mappings[2]);
  assertTrue(fm3 == mappings[3]);
  FilterHolder f=new FilterHolder(Source.EMBEDDED);
  f.setName("non-programmatic");
  FilterMapping fm=new FilterMapping();
  fm.setFilterHolder(f);
  fm.setPathSpec("/*");
  handler.addFilter(f);
  handler.addFilterMapping(fm);
  mappings=handler.getFilterMappings();
  assertNotNull(mappings);
  assertEquals(5,mappings.length);
  assertTrue(fm4 == mappings[0]);
  assertTrue(fm5 == mappings[1]);
  assertTrue(fm1 == mappings[2]);
  assertTrue(fm == mappings[3]);
  assertTrue(fm3 == mappings[4]);
  FilterHolder pf=new FilterHolder(Source.JAVAX_API);
  pf.setName("programmaticA");
  FilterMapping pfm=new FilterMapping();
  pfm.setFilterHolder(pf);
  pfm.setPathSpec("/*");
  handler.addFilter(pf);
  handler.addFilterMapping(pfm);
  mappings=handler.getFilterMappings();
  assertNotNull(mappings);
  assertEquals(6,mappings.length);
  assertTrue(fm4 == mappings[0]);
  assertTrue(fm5 == mappings[1]);
  assertTrue(fm1 == mappings[2]);
  assertTrue(fm == mappings[3]);
  assertTrue(fm3 == mappings[4]);
  assertTrue(pfm == mappings[5]);
  FilterHolder pf2=new FilterHolder(Source.JAVAX_API);
  pf2.setName("programmaticB");
  FilterMapping pfm2=new FilterMapping();
  pfm2.setFilterHolder(pf2);
  pfm2.setPathSpec("/*");
  handler.addFilter(pf2);
  handler.prependFilterMapping(pfm2);
  mappings=handler.getFilterMappings();
  assertNotNull(mappings);
  assertEquals(7,mappings.length);
  assertTrue(fm4 == mappings[0]);
  assertTrue(fm5 == mappings[1]);
  assertTrue(pfm2 == mappings[2]);
  assertTrue(fm1 == mappings[3]);
  assertTrue(fm == mappings[4]);
  assertTrue(fm3 == mappings[5]);
  assertTrue(pfm == mappings[6]);
}
