{
  LOG.debug("addBean {}",obj);
  try {
    if (obj == null || _beans.containsKey(obj))     return;
    Object mbean=ObjectMBean.mbeanFor(obj);
    if (mbean == null)     return;
    ObjectName oname=null;
    if (mbean instanceof ObjectMBean) {
      ((ObjectMBean)mbean).setMBeanContainer(this);
      oname=((ObjectMBean)mbean).getObjectName();
    }
    if (oname == null) {
      String type=obj.getClass().getName().toLowerCase();
      int dot=type.lastIndexOf('.');
      if (dot >= 0)       type=type.substring(dot + 1);
      String context=null;
      if (mbean instanceof ObjectMBean) {
        context=makeName(((ObjectMBean)mbean).getObjectContextBasis());
      }
      String name=null;
      if (mbean instanceof ObjectMBean) {
        name=makeName(((ObjectMBean)mbean).getObjectNameBasis());
      }
      StringBuffer buf=new StringBuffer();
      buf.append("type=").append(type);
      if (context != null && context.length() > 1) {
        buf.append(buf.length() > 0 ? "," : "");
        buf.append("context=").append(context);
      }
      if (name != null && name.length() > 1) {
        buf.append(buf.length() > 0 ? "," : "");
        buf.append("name=").append(name);
      }
      String basis=buf.toString();
      Integer count=_unique.get(basis);
      count=count == null ? 0 : 1 + count;
      _unique.put(basis,count);
      String domain=_domain;
      if (domain == null)       domain=obj.getClass().getPackage().getName();
      oname=ObjectName.getInstance(domain + ":" + basis+ ",id="+ count);
    }
    ObjectInstance oinstance=_server.registerMBean(mbean,oname);
    LOG.debug("Registered {}",oinstance.getObjectName());
    _beans.put(obj,oinstance.getObjectName());
  }
 catch (  Exception e) {
    LOG.warn("bean: " + obj,e);
  }
}
