{
  String host="github.com";
  int port=22;
  try {
    new Socket(host,port);
  }
 catch (  IOException x) {
    Assume.assumeNoException(x);
  }
  for (int i=0; i < 2; ++i) {
    final CountDownLatch latch=new CountDownLatch(3);
    client.newRequest(host,port).onResponseFailure(new Response.FailureListener(){
      @Override public void onFailure(      Response response,      Throwable failure){
        latch.countDown();
      }
    }
).send(new Response.Listener.Empty(){
      @Override public void onFailure(      Response response,      Throwable failure){
        latch.countDown();
      }
      @Override public void onComplete(      Result result){
        Assert.assertTrue(result.isFailed());
        latch.countDown();
      }
    }
);
    Assert.assertTrue(latch.await(10,TimeUnit.SECONDS));
  }
}
