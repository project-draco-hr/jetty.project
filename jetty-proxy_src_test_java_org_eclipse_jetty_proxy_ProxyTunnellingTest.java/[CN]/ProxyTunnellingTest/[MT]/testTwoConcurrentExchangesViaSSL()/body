{
  startSSLServer(new ServerHandler());
  startProxy();
  final HttpClient httpClient=new HttpClient(sslContextFactory);
  httpClient.setProxyConfiguration(new ProxyConfiguration("localhost",proxyPort()));
  httpClient.start();
  try {
    final AtomicReference<Connection> connection=new AtomicReference<>();
    final CountDownLatch connectionLatch=new CountDownLatch(1);
    String body1="BODY";
    ContentResponse response1=httpClient.newRequest("localhost",serverConnector.getLocalPort()).scheme(HttpScheme.HTTPS.asString()).method(HttpMethod.GET).path("/echo?body=" + URLEncoder.encode(body1,"UTF-8")).onRequestCommit(new org.eclipse.jetty.client.api.Request.CommitListener(){
      @Override public void onCommit(      org.eclipse.jetty.client.api.Request request){
        Destination destination=httpClient.getDestination(HttpScheme.HTTPS.asString(),"localhost",serverConnector.getLocalPort());
        destination.newConnection(new Promise.Adapter<Connection>(){
          @Override public void succeeded(          Connection result){
            connection.set(result);
            connectionLatch.countDown();
          }
        }
);
      }
    }
).send();
    assertEquals(HttpStatus.OK_200,response1.getStatus());
    String content=response1.getContentAsString();
    assertEquals(body1,content);
    Assert.assertTrue(connectionLatch.await(5,TimeUnit.SECONDS));
    String body2="body=" + body1;
    org.eclipse.jetty.client.api.Request request2=httpClient.newRequest("localhost",serverConnector.getLocalPort()).scheme(HttpScheme.HTTPS.asString()).method(HttpMethod.POST).path("/echo").header(HttpHeader.CONTENT_TYPE,MimeTypes.Type.FORM_ENCODED.asString()).header(HttpHeader.CONTENT_LENGTH,String.valueOf(body2.length())).content(new StringContentProvider(body2));
    FutureResponseListener listener2=new FutureResponseListener(request2);
    connection.get().send(request2,listener2);
    ContentResponse response2=listener2.get(5,TimeUnit.SECONDS);
    assertEquals(HttpStatus.OK_200,response2.getStatus());
    String content2=response1.getContentAsString();
    assertEquals(body1,content2);
  }
  finally {
    httpClient.stop();
  }
}
