{
  try (Locker.Lock lock=_locker.lock()){
switch (_state) {
case IDLE:
      _state=State.PRODUCE;
    break;
case PRODUCE:
case EXECUTE:
  _state=State.EXECUTE;
return;
}
}
 while (true) {
Runnable task=_producer.produce();
if (LOG.isDebugEnabled()) LOG.debug("{} produced {}",_producer,task);
if (task == null) {
try (Locker.Lock lock=_locker.lock()){
switch (_state) {
case IDLE:
  throw new IllegalStateException();
case PRODUCE:
_state=State.IDLE;
return;
case EXECUTE:
_state=State.PRODUCE;
continue;
}
}
 }
task.run();
}
}
