{
  final long maxIdleTime=1000;
  final CountDownLatch latch=new CountDownLatch(1);
  InetSocketAddress address=startSPDYServer(new ServerSessionFrameListener.Adapter(){
    @Override public Stream.FrameListener onSyn(    Stream stream,    SynInfo synInfo){
      stream.reply(new ReplyInfo(true));
      return null;
    }
    @Override public void onGoAway(    Session session,    GoAwayInfo goAwayInfo){
      latch.countDown();
    }
  }
);
  QueuedThreadPool threadPool=new QueuedThreadPool();
  threadPool.setName(threadPool.getName() + "-client");
  clientFactory=newSPDYClientFactory(threadPool);
  clientFactory.start();
  SPDYClient client=clientFactory.newSPDYClient();
  client.setMaxIdleTime(maxIdleTime);
  Session session=client.connect(address,null).get();
  final CountDownLatch replyLatch=new CountDownLatch(1);
  session.syn(SPDY.V2,new SynInfo(true),new Stream.FrameListener.Adapter(){
    @Override public void onReply(    Stream stream,    ReplyInfo replyInfo){
      try {
        Thread.sleep(2 * maxIdleTime);
        replyLatch.countDown();
      }
 catch (      InterruptedException e) {
        Assert.fail();
      }
    }
  }
);
  Assert.assertFalse(latch.await(2 * maxIdleTime,TimeUnit.MILLISECONDS));
  Assert.assertTrue(replyLatch.await(3 * maxIdleTime,TimeUnit.MILLISECONDS));
}
