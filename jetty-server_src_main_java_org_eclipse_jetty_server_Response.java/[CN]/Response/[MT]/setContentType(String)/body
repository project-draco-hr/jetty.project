{
  if (isCommitted() || isIncluding())   return;
  if (contentType == null) {
    if (isWriting() && _characterEncoding != null)     throw new IllegalSelectorException();
    if (_locale == null)     _characterEncoding=null;
    _mimeType=null;
    _contentType=null;
    _fields.remove(HttpHeader.CONTENT_TYPE);
  }
 else {
    _contentType=contentType;
    _mimeType=MimeTypes.CACHE.get(contentType);
    String charset;
    if (_mimeType != null && _mimeType.getCharset() != null && !_mimeType.isCharsetAssumed())     charset=_mimeType.getCharsetString();
 else     charset=MimeTypes.getCharsetFromContentType(contentType);
    if (charset == null) {
switch (_encodingFrom) {
case NOT_SET:
        break;
case INFERRED:
case SET_CONTENT_TYPE:
      if (isWriting()) {
        _mimeType=null;
        _contentType=_contentType + ";charset=" + _characterEncoding;
      }
 else {
        _encodingFrom=EncodingFrom.NOT_SET;
        _characterEncoding=null;
      }
    break;
case SET_LOCALE:
case SET_CHARACTER_ENCODING:
{
    _contentType=contentType + ";charset=" + _characterEncoding;
    _mimeType=null;
  }
}
}
 else if (isWriting() && !charset.equalsIgnoreCase(_characterEncoding)) {
_mimeType=null;
_contentType=MimeTypes.getContentTypeWithoutCharset(_contentType);
if (_characterEncoding != null) _contentType=_contentType + ";charset=" + _characterEncoding;
}
 else {
_characterEncoding=charset;
_encodingFrom=EncodingFrom.SET_CONTENT_TYPE;
}
if (HttpGenerator.__STRICT || _mimeType == null) _fields.put(HttpHeader.CONTENT_TYPE,_contentType);
 else {
_contentType=_mimeType.asString();
_fields.put(_mimeType.getContentTypeField());
}
}
}
