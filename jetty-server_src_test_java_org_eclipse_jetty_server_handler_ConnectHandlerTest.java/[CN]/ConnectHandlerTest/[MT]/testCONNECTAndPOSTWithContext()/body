{
  final String contextKey="contextKey";
  final String contextValue="contextValue";
  stopProxy();
  proxy.setHandler(new ConnectHandler(){
    @Override protected boolean handleAuthentication(    HttpServletRequest request,    HttpServletResponse response,    String address) throws ServletException, IOException {
      request.setAttribute(contextKey,contextValue);
      return super.handleAuthentication(request,response,address);
    }
    @Override protected SocketChannel connect(    HttpServletRequest request,    String host,    int port) throws IOException {
      assertEquals(contextValue,request.getAttribute(contextKey));
      return super.connect(request,host,port);
    }
    @Override protected void prepareContext(    HttpServletRequest request,    ConcurrentMap<String,Object> context){
      assertEquals(contextValue,request.getAttribute(contextKey));
      context.put(contextKey,request.getAttribute(contextKey));
    }
    @Override protected int read(    EndPoint endPoint,    ByteBuffer buffer,    ConcurrentMap<String,Object> context) throws IOException {
      assertEquals(contextValue,context.get(contextKey));
      return super.read(endPoint,buffer,context);
    }
    @Override protected int write(    EndPoint endPoint,    ByteBuffer buffer,    ConcurrentMap<String,Object> context) throws IOException {
      assertEquals(contextValue,context.get(contextKey));
      return super.write(endPoint,buffer,context);
    }
  }
);
  proxy.start();
  String hostPort="localhost:" + ((Connector.NetConnector)serverConnector).getLocalPort();
  String request="" + "CONNECT " + hostPort + " HTTP/1.1\r\n"+ "Host: "+ hostPort+ "\r\n"+ "\r\n";
  Socket socket=newSocket();
  try {
    OutputStream output=socket.getOutputStream();
    BufferedReader input=new BufferedReader(new InputStreamReader(socket.getInputStream()));
    output.write(request.getBytes("UTF-8"));
    output.flush();
    Response response=readResponse(input);
    assertEquals("200",response.getCode());
    String body="0123456789ABCDEF";
    request="" + "POST /echo HTTP/1.1\r\n" + "Host: " + hostPort + "\r\n"+ "Content-Length: "+ body.length()+ "\r\n"+ "\r\n"+ body;
    output.write(request.getBytes("UTF-8"));
    output.flush();
    response=readResponse(input);
    assertEquals("200",response.getCode());
    assertEquals("POST /echo\r\n" + body,response.getBody());
  }
  finally {
    socket.close();
  }
}
