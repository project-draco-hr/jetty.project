{
  if (javaUtilLoggingInitialized) {
    return;
  }
  java.util.logging.Logger rootLogger=java.util.logging.Logger.getLogger("");
  for (  java.util.logging.Handler handler : rootLogger.getHandlers()) {
    rootLogger.removeHandler(handler);
  }
  rootLogger.addHandler(new java.util.logging.Handler(){
    @Override public void close() throws SecurityException {
    }
    @Override public void flush(){
    }
    @Override public void publish(    java.util.logging.LogRecord record){
      org.slf4j.Logger slf4jLogger=getCentralLogger(record);
      int javaLevel=record.getLevel().intValue();
      if (javaLevel <= java.util.logging.Level.FINEST.intValue()) {
        if (slf4jLogger.isTraceEnabled()) {
          String message=formatMessage(record);
          slf4jLogger.trace(message,record.getThrown());
        }
        return;
      }
      if (javaLevel <= java.util.logging.Level.FINE.intValue()) {
        if (slf4jLogger.isDebugEnabled()) {
          String message=formatMessage(record);
          slf4jLogger.debug(message,record.getThrown());
        }
        return;
      }
      if (javaLevel <= java.util.logging.Level.INFO.intValue()) {
        if (slf4jLogger.isInfoEnabled()) {
          String message=formatMessage(record);
          slf4jLogger.info(message,record.getThrown());
        }
        return;
      }
      if (javaLevel <= java.util.logging.Level.WARNING.intValue()) {
        if (slf4jLogger.isWarnEnabled()) {
          String message=formatMessage(record);
          slf4jLogger.warn(message,record.getThrown());
        }
        return;
      }
      if (slf4jLogger.isErrorEnabled()) {
        String message=formatMessage(record);
        slf4jLogger.error(message,record.getThrown());
      }
    }
    private String formatMessage(    java.util.logging.LogRecord record){
      String raw=record.getMessage();
      if (raw == null) {
        return null;
      }
      ResourceBundle bundle=record.getResourceBundle();
      if (bundle != null) {
        try {
          raw=bundle.getString(raw);
        }
 catch (        MissingResourceException e) {
        }
      }
      if (record.getParameters() != null) {
        raw=MessageFormat.format(raw,record.getParameters());
      }
      return raw;
    }
    private org.slf4j.Logger getCentralLogger(    java.util.logging.LogRecord record){
      String name=record.getLoggerName();
      if (name == null) {
        name="anonymous";
      }
      return org.slf4j.LoggerFactory.getLogger(name);
    }
  }
);
  rootLogger.setLevel(java.util.logging.Level.ALL);
  javaUtilLoggingInitialized=true;
}
