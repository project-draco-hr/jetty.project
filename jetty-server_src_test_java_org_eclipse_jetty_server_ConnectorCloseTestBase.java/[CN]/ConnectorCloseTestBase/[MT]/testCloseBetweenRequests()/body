{
  final int requestCount=32;
  final CountDownLatch latch=new CountDownLatch(requestCount);
  configureServer(new HelloWorldHandler());
  Socket client=newSocket(HOST,_connector.getLocalPort());
  try {
    OutputStream os=client.getOutputStream();
    ResponseReader reader=new ResponseReader(client){
      private int _index=0;
      @Override protected int doRead() throws IOException, InterruptedException {
        int count=super.doRead();
        if (count > 0) {
          int idx;
          while ((idx=_response.indexOf("HTTP/1.1 200 OK",_index)) >= 0) {
            latch.countDown();
            _index=idx + 15;
          }
        }
        return count;
      }
    }
;
    Thread runner=new Thread(reader);
    runner.start();
    for (int pipeline=1; pipeline <= requestCount; pipeline++) {
      if (pipeline == requestCount / 2) {
        if (latch.getCount() == requestCount)         Thread.sleep(1);
        _connector.close();
      }
      String request="GET /data?writes=1&block=16&id=" + pipeline + " HTTP/1.1\r\n"+ "host: "+ HOST+ ":"+ _connector.getLocalPort()+ "\r\n"+ "user-agent: testharness/1.0 (blah foo/bar)\r\n"+ "accept-encoding: nothing\r\n"+ "cookie: aaa=1234567890\r\n"+ "\r\n";
      os.write(request.getBytes());
      os.flush();
      Thread.sleep(25);
    }
    assertTrue(latch.await(5,TimeUnit.SECONDS));
    reader.setDone();
    runner.join();
  }
  finally {
    client.close();
  }
}
