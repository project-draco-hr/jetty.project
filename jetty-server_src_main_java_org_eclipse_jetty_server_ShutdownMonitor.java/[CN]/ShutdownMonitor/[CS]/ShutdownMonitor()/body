{
  Properties props=System.getProperties();
  this.DEBUG=props.containsKey("DEBUG");
  int stopPort=Integer.parseInt(props.getProperty("STOP.PORT","-1"));
  String stopKey=props.getProperty("STOP.KEY",null);
  ServerSocket sock=null;
  try {
    if (stopPort < 0) {
      System.out.println("ShutdownMonitor not in use");
      sock=null;
      return;
    }
    setDaemon(true);
    setName("ShutdownMonitor");
    sock=new ServerSocket(stopPort,1,InetAddress.getByName("127.0.0.1"));
    if (stopPort == 0) {
      stopPort=sock.getLocalPort();
      System.out.printf("STOP.PORT=%d%n",stopPort);
    }
    if (stopKey == null) {
      stopKey=Long.toString((long)(Long.MAX_VALUE * Math.random() + this.hashCode() + System.currentTimeMillis()),36);
      System.out.printf("STOP.KEY=%s%n",stopKey);
    }
  }
 catch (  Exception e) {
    debug(e);
    System.err.println("Error binding monitor port " + stopPort + ": "+ e.toString());
  }
 finally {
    this.port=stopPort;
    this.key=stopKey;
    this.serverSocket=sock;
    debug("STOP.PORT=%d",port);
    debug("STOP.KEY=%s",key);
    debug("%s",serverSocket);
  }
  this.start();
}
