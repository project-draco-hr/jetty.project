{
  try {
    if (!HttpMethod.HEAD.is(request.getMethod())) {
      if (_etags) {
        String ifm=request.getHeader(HttpHeader.IF_MATCH.asString());
        if (ifm != null) {
          boolean match=false;
          if (content.getETag() != null) {
            QuotedStringTokenizer quoted=new QuotedStringTokenizer(ifm,", ",false,true);
            while (!match && quoted.hasMoreTokens()) {
              String tag=quoted.nextToken();
              if (content.getETag().toString().equals(tag))               match=true;
            }
          }
          if (!match) {
            response.setStatus(HttpServletResponse.SC_PRECONDITION_FAILED);
            return false;
          }
        }
        String if_non_match_etag=request.getHeader(HttpHeader.IF_NONE_MATCH.asString());
        if (if_non_match_etag != null && content.getETag() != null) {
          if (content.getETag().toString().equals(request.getAttribute("o.e.j.s.GzipFilter.ETag"))) {
            response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
            response.setHeader(HttpHeader.ETAG.asString(),if_non_match_etag);
            return false;
          }
          if (content.getETag().toString().equals(if_non_match_etag)) {
            response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
            response.setHeader(HttpHeader.ETAG.asString(),content.getETag());
            return false;
          }
          QuotedStringTokenizer quoted=new QuotedStringTokenizer(if_non_match_etag,", ",false,true);
          while (quoted.hasMoreTokens()) {
            String tag=quoted.nextToken();
            if (content.getETag().toString().equals(tag)) {
              response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
              response.setHeader(HttpHeader.ETAG.asString(),content.getETag());
              return false;
            }
          }
          return true;
        }
      }
      String ifms=request.getHeader(HttpHeader.IF_MODIFIED_SINCE.asString());
      if (ifms != null) {
        String mdlm=content.getLastModified();
        if (mdlm != null && ifms.equals(mdlm)) {
          response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
          if (_etags)           response.setHeader(HttpHeader.ETAG.asString(),content.getETag());
          response.flushBuffer();
          return false;
        }
        long ifmsl=request.getDateHeader(HttpHeader.IF_MODIFIED_SINCE.asString());
        if (ifmsl != -1 && resource.lastModified() / 1000 <= ifmsl / 1000) {
          response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
          if (_etags)           response.setHeader(HttpHeader.ETAG.asString(),content.getETag());
          response.flushBuffer();
          return false;
        }
      }
      long date=request.getDateHeader(HttpHeader.IF_UNMODIFIED_SINCE.asString());
      if (date != -1 && resource.lastModified() / 1000 > date / 1000) {
        response.sendError(HttpServletResponse.SC_PRECONDITION_FAILED);
        return false;
      }
    }
  }
 catch (  IllegalArgumentException iae) {
    if (!response.isCommitted())     response.sendError(400,iae.getMessage());
    throw iae;
  }
  return true;
}
