{
  BlockheadClient client=new BlockheadClient(server.getServerUri());
  try {
    client.connect();
    client.sendStandardRequest();
    client.expectUpgradeResponse();
    String textPayload1="fragment1";
    ByteBuffer frame1=FrameBuilder.textFrame().isFin(false).withPayload(textPayload1.getBytes()).asByteBuffer();
    BufferUtil.flipToFlush(frame1,0);
    client.writeRaw(frame1);
    String pingPayload="ping payload";
    ByteBuffer frame2=FrameBuilder.pingFrame().withPayload(pingPayload.getBytes()).asByteBuffer();
    BufferUtil.flipToFlush(frame2,0);
    client.writeRaw(frame2);
    String textPayload2="fragment2";
    ByteBuffer frame3=FrameBuilder.continuationFrame().withPayload(textPayload2.getBytes()).asByteBuffer();
    BufferUtil.flipToFlush(frame3,0);
    client.writeRaw(frame3);
    Queue<BaseFrame> frames=client.readFrames(2,TimeUnit.MILLISECONDS,500);
    BaseFrame frame=frames.remove();
    Assert.assertTrue("first frame should be pong frame",frame instanceof PongFrame);
    ByteBuffer payload1=ByteBuffer.allocate(pingPayload.length());
    payload1.flip();
    ByteBufferAssert.assertEquals("payloads should be equal",payload1,((PongFrame)frame).getPayload());
    frame=(BaseFrame)frames.remove();
    Assert.assertTrue("second frame should be text frame",frame instanceof TextFrame);
    Assert.assertThat("TextFrame.payload",((TextFrame)frame).getPayloadUTF8(),is(textPayload1 + textPayload2));
  }
  finally {
    client.close();
  }
}
