{
  BlockheadClient client=new BlockheadClient(server.getServerUri());
  try {
    client.connect();
    client.sendStandardRequest();
    client.expectUpgradeResponse();
    String textPayload1="fragment1";
    ByteBuffer frame1=FrameBuilder.text().fin(false).payload(textPayload1.getBytes()).asByteBuffer();
    BufferUtil.flipToFlush(frame1,0);
    client.writeRaw(frame1);
    String pingPayload="ping payload";
    ByteBuffer frame2=FrameBuilder.ping().payload(pingPayload.getBytes()).asByteBuffer();
    BufferUtil.flipToFlush(frame2,0);
    client.writeRaw(frame2);
    String textPayload2="fragment2";
    ByteBuffer frame3=FrameBuilder.continuation().payload(textPayload2.getBytes()).asByteBuffer();
    BufferUtil.flipToFlush(frame3,0);
    client.writeRaw(frame3);
    Queue<WebSocketFrame> frames=client.readFrames(2,TimeUnit.MILLISECONDS,500);
    WebSocketFrame frame=frames.remove();
    Assert.assertThat("first frame should be pong frame",frame.getOpCode(),is(OpCode.PONG));
    ByteBuffer payload1=ByteBuffer.allocate(pingPayload.length());
    payload1.flip();
    Assert.assertArrayEquals("payloads should be equal",BufferUtil.toArray(payload1),frame.getPayloadData());
    frame=frames.remove();
    Assert.assertThat("second frame should be text frame",frame.getOpCode(),is(OpCode.TEXT));
    Assert.assertThat("TextFrame.payload",frame.getPayloadAsUTF8(),is(textPayload1 + textPayload2));
  }
  finally {
    client.close();
  }
}
