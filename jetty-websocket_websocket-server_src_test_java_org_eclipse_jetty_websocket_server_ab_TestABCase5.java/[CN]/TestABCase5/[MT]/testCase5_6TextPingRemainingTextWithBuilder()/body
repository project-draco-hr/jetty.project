{
  BlockheadClient client=new BlockheadClient(server.getServerUri());
  try {
    client.connect();
    client.sendStandardRequest();
    client.expectUpgradeResponse();
    String textPayload1="fragment1";
    WebSocketFrame frame1=WebSocketFrame.text().setFin(false).setPayload(textPayload1);
    ByteBuffer buf1=laxGenerator.generate(frame1);
    BufferUtil.flipToFlush(buf1,0);
    client.writeRaw(buf1);
    String pingPayload="ping payload";
    WebSocketFrame frame2=WebSocketFrame.ping().setPayload(pingPayload);
    ByteBuffer buf2=laxGenerator.generate(frame2);
    BufferUtil.flipToFlush(buf2,0);
    client.writeRaw(buf2);
    String textPayload2="fragment2";
    WebSocketFrame frame3=new WebSocketFrame(OpCode.CONTINUATION).setPayload(textPayload2);
    ByteBuffer buf3=laxGenerator.generate(frame3);
    BufferUtil.flipToFlush(buf3,0);
    client.writeRaw(buf3);
    Queue<WebSocketFrame> frames=client.readFrames(2,TimeUnit.MILLISECONDS,500);
    WebSocketFrame frame=frames.remove();
    Assert.assertThat("first frame should be pong frame",frame.getOpCode(),is(OpCode.PONG));
    ByteBuffer payload1=BufferUtil.toBuffer(pingPayload,StringUtil.__UTF8_CHARSET);
    ByteBufferAssert.assertEquals("Payload",payload1,frame.getPayload());
    frame=frames.remove();
    Assert.assertThat("second frame should be text frame",frame.getOpCode(),is(OpCode.TEXT));
    Assert.assertThat("TextFrame.payload",frame.getPayloadAsUTF8(),is(textPayload1 + textPayload2));
  }
  finally {
    client.close();
  }
}
