{
  try {
    if (_hixieBytes != null) {
      Buffer buffer=_parser.getBuffer();
      if (buffer != null && buffer.length() > 0) {
        int l=buffer.length();
        if (l > (8 - _hixieBytes.length()))         l=8 - _hixieBytes.length();
        _hixieBytes.put(buffer.peek(buffer.getIndex(),l));
        buffer.skip(l);
      }
      while (_endp.isOpen()) {
        if (_hixieBytes.length() == 8) {
          doTheHixieHixieShake();
          _endp.flush(_hixieBytes);
          _hixieBytes=null;
          _endp.flush();
          break;
        }
        int filled=_endp.fill(_hixieBytes);
        if (filled < 0) {
          _endp.flush();
          _endp.close();
          break;
        }
 else         if (filled == 0)         return this;
      }
      if (_websocket instanceof OnFrame)       ((OnFrame)_websocket).onHandshake(this);
      _websocket.onOpen(this);
      return this;
    }
    boolean progress=true;
    while (progress) {
      int flushed=_generator.flush();
      int filled=_parser.parseNext();
      progress=flushed > 0 || filled > 0;
      _endp.flush();
      if (_endp instanceof AsyncEndPoint && ((AsyncEndPoint)_endp).hasProgressed())       progress=true;
    }
  }
 catch (  IOException e) {
    LOG.debug(e);
    try {
      if (_endp.isOpen())       _endp.close();
    }
 catch (    IOException e2) {
      LOG.ignore(e2);
    }
    throw e;
  }
 finally {
    if (_endp.isOpen()) {
      if (_endp.isInputShutdown() && _generator.isBufferEmpty())       _endp.close();
 else       checkWriteable();
      checkWriteable();
    }
  }
  return this;
}
