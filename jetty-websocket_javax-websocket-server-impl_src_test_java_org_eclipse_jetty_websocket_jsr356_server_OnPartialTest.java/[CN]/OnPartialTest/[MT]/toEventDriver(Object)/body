{
  WebSocketPolicy policy=WebSocketPolicy.newServerPolicy();
  policy.setInputBufferSize(1024);
  policy.setMaxBinaryMessageBufferSize(1024);
  policy.setMaxTextMessageBufferSize(1024);
  EventDriverFactory factory=new EventDriverFactory(policy);
  factory.addImplementation(new JsrServerEndpointImpl());
  EventDriverImpl driverImpl=new JsrServerEndpointImpl();
  Class<?> endpoint=websocket.getClass();
  ServerEndpoint anno=endpoint.getAnnotation(ServerEndpoint.class);
  Assert.assertThat("Endpoint: " + endpoint + " should be annotated with @ServerEndpoint",anno,notNullValue());
  EnhancedInstantiator instantiator=new EnhancedInstantiator();
  ServerEndpointConfig config=new BasicServerEndpointConfig(endpoint,"/",instantiator);
  AnnotatedServerEndpointMetadata metadata=new AnnotatedServerEndpointMetadata(endpoint,config,instantiator);
  AnnotatedEndpointScanner<ServerEndpoint,ServerEndpointConfig> scanner=new AnnotatedEndpointScanner<>(metadata);
  scanner.scan();
  EndpointInstance ei=new EndpointInstance(websocket,config,metadata);
  EventDriver driver=driverImpl.create(ei,policy);
  Assert.assertThat("EventDriver",driver,notNullValue());
  String id=testname.getMethodName();
  URI requestURI=URI.create("ws://localhost/" + id);
  DummyConnection connection=new DummyConnection();
  ClientContainer container=new ClientContainer();
  @SuppressWarnings("resource") JsrSession session=new JsrSession(requestURI,driver,connection,container,id,new EnhancedInstantiator());
  session.setPolicy(policy);
  session.open();
  return driver;
}
