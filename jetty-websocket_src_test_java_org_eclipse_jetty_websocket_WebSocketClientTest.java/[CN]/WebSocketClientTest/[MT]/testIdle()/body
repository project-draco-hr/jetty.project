{
  WebSocketClient client=new WebSocketClient();
  client.setBlockingConnect(true);
  client.setConnectTimeout(10000);
  client.setMaxIdleTime(500);
  client.start();
  boolean bad=false;
  final AtomicBoolean open=new AtomicBoolean();
  final AtomicInteger close=new AtomicInteger();
  final CountDownLatch latch=new CountDownLatch(2);
  try {
    client.open(new URI("ws://127.0.0.1:" + serverPort),new WebSocket(){
      public void onOpen(      Connection connection){
        open.set(true);
        latch.countDown();
      }
      public void onError(      String message,      Throwable ex){
        latch.countDown();
      }
      public void onClose(      int closeCode,      String message){
        close.set(closeCode);
        latch.countDown();
      }
    }
);
  }
 catch (  IOException e) {
    bad=true;
  }
  Assert.assertFalse(bad);
  String key="not sent";
  Socket connection=server.accept();
  BufferedReader in=new BufferedReader(new InputStreamReader(connection.getInputStream()));
  for (String line=in.readLine(); line != null; line=in.readLine()) {
    if (line.length() == 0)     break;
    if (line.startsWith("Sec-WebSocket-Key:"))     key=line.substring(18).trim();
  }
  connection.getOutputStream().write(("HTTP/1.1 101 Upgrade\r\n" + "Sec-WebSocket-Accept: " + WebSocketConnectionD10.hashKey(key) + "\r\n"+ "\r\n").getBytes());
  Assert.assertTrue(latch.await(10,TimeUnit.SECONDS));
  Assert.assertTrue(open.get());
  Assert.assertEquals(WebSocketConnectionD10.CLOSE_NORMAL,close.get());
}
