{
  final CountDownLatch mainStreamLatch=new CountDownLatch(2);
  final CountDownLatch pushDataLatch=new CountDownLatch(1);
  final CountDownLatch pushSynHeadersValid=new CountDownLatch(1);
  Session session2=startClient(version,address,new SessionFrameListener.Adapter(){
    @Override public StreamFrameListener onSyn(    Stream stream,    SynInfo synInfo){
      if (validateHeaders)       validateHeaders(synInfo.getHeaders(),pushSynHeadersValid);
      Assert.assertTrue(stream.isUnidirectional());
      Assert.assertTrue(synInfo.getHeaders().get(HTTPSPDYHeader.URI.name(version)).value().endsWith(".css"));
      return new StreamFrameListener.Adapter(){
        @Override public void onData(        Stream stream,        DataInfo dataInfo){
          dataInfo.consume(dataInfo.length());
          if (dataInfo.isClose())           pushDataLatch.countDown();
        }
      }
;
    }
  }
);
  session2.syn(new SynInfo(mainRequestHeaders,true),new StreamFrameListener.Adapter(){
    @Override public void onReply(    Stream stream,    ReplyInfo replyInfo){
      Assert.assertFalse(replyInfo.isClose());
      mainStreamLatch.countDown();
    }
    @Override public void onData(    Stream stream,    DataInfo dataInfo){
      dataInfo.consume(dataInfo.length());
      if (dataInfo.isClose())       mainStreamLatch.countDown();
    }
  }
);
  Assert.assertTrue("Main request reply and/or data not received",mainStreamLatch.await(5,TimeUnit.SECONDS));
  Assert.assertTrue("Pushed data not received",pushDataLatch.await(5,TimeUnit.SECONDS));
  if (validateHeaders)   Assert.assertTrue("Push syn headers not valid",pushSynHeadersValid.await(5,TimeUnit.SECONDS));
}
