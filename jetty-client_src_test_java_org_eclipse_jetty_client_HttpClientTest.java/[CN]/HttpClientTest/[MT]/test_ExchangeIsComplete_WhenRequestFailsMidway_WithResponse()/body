{
  final int chunkSize=16;
  start(new AbstractHandler(){
    @Override public void handle(    String target,    Request baseRequest,    HttpServletRequest request,    HttpServletResponse response) throws IOException, ServletException {
      IO.copy(request.getInputStream(),response.getOutputStream());
    }
  }
);
  final CountDownLatch latch=new CountDownLatch(1);
  client.newRequest("localhost",connector.getLocalPort()).content(new ContentProvider(){
    @Override public long length(){
      return -1;
    }
    @Override public Iterator<ByteBuffer> iterator(){
      return Arrays.asList(ByteBuffer.allocate(chunkSize),null).iterator();
    }
  }
).send(new Response.Listener.Adapter(){
    @Override public void onComplete(    Result result){
      latch.countDown();
    }
  }
);
  Assert.assertTrue(latch.await(5,TimeUnit.SECONDS));
}
