{
  start(new AbstractHandler(){
    @Override public void handle(    String target,    org.eclipse.jetty.server.Request baseRequest,    HttpServletRequest request,    HttpServletResponse response) throws IOException, ServletException {
      IO.copy(request.getInputStream(),response.getOutputStream());
    }
  }
);
  final CountDownLatch latch=new CountDownLatch(1);
  client.newRequest("localhost",connector.getLocalPort()).scheme(scheme).content(new ContentProvider(){
    @Override public long getLength(){
      return -1;
    }
    @Override public Iterator<ByteBuffer> iterator(){
      return new Iterator<ByteBuffer>(){
        @Override public boolean hasNext(){
          return true;
        }
        @Override public ByteBuffer next(){
          throw new NoSuchElementException("explicitly_thrown_by_test");
        }
        @Override public void remove(){
          throw new UnsupportedOperationException();
        }
      }
;
    }
  }
).send(new Response.Listener.Adapter(){
    @Override public void onComplete(    Result result){
      latch.countDown();
    }
  }
);
  Assert.assertTrue(latch.await(5,TimeUnit.SECONDS));
}
