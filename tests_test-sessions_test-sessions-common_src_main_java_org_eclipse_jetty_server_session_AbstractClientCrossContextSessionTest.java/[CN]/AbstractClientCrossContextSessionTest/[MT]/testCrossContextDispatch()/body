{
  String contextA="/contextA";
  String contextB="/contextB";
  String servletMapping="/server";
  AbstractTestServer server=createServer(0);
  ServletContextHandler ctxA=server.addContext(contextA);
  ctxA.addServlet(TestServletA.class,servletMapping);
  ServletContextHandler ctxB=server.addContext(contextB);
  ctxB.addServlet(TestServletB.class,servletMapping);
  server.start();
  int port=server.getPort();
  try {
    HttpClient client=new HttpClient();
    client.setConnectorType(HttpClient.CONNECTOR_SOCKET);
    client.start();
    try {
      ContentExchange exchangeA=new ContentExchange(true);
      exchangeA.setMethod(HttpMethods.GET);
      exchangeA.setURL("http://localhost:" + port + contextA+ servletMapping);
      client.send(exchangeA);
      exchangeA.waitForDone();
      assertEquals(HttpServletResponse.SC_OK,exchangeA.getResponseStatus());
      String sessionCookie=exchangeA.getResponseFields().getStringField("Set-Cookie");
      assertTrue(sessionCookie != null);
      sessionCookie=sessionCookie.replaceFirst("(\\W)(P|p)ath=","$1\\$Path=");
      ContentExchange exchangeB=new ContentExchange(true);
      exchangeB.setMethod(HttpMethods.GET);
      exchangeB.setURL("http://localhost:" + port + contextB+ servletMapping);
      exchangeB.getRequestFields().add("Cookie",sessionCookie);
      client.send(exchangeB);
      exchangeB.waitForDone();
      assertEquals(HttpServletResponse.SC_OK,exchangeB.getResponseStatus());
    }
  finally {
      client.stop();
    }
  }
  finally {
    server.stop();
  }
}
