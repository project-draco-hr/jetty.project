{
  if (!isStarted()) {
    throw new IllegalStateException(WebSocketClient.class.getSimpleName() + "@" + this.hashCode()+ " is not started");
  }
  if (!toUri.isAbsolute()) {
    throw new IllegalArgumentException("WebSocket URI must be absolute");
  }
  if (StringUtil.isBlank(toUri.getScheme())) {
    throw new IllegalArgumentException("WebSocket URI must include a scheme");
  }
  String scheme=toUri.getScheme().toLowerCase(Locale.ENGLISH);
  if (("ws".equals(scheme) == false) && ("wss".equals(scheme) == false)) {
    throw new IllegalArgumentException("WebSocket URI scheme only supports [ws] and [wss], not [" + scheme + "]");
  }
  request.setRequestURI(toUri);
  request.setCookiesFrom(this.cookieStore);
  for (  ExtensionConfig reqExt : request.getExtensions()) {
    if (!extensionRegistry.isAvailable(reqExt.getName())) {
      throw new IllegalArgumentException("Requested extension [" + reqExt.getName() + "] is not installed");
    }
  }
  LOG.debug("connect websocket {} to {}",websocket,toUri);
  initialiseClient();
  ConnectionManager manager=getConnectionManager();
  EventDriver driver=null;
  if (websocket instanceof EventDriver) {
    driver=(EventDriver)websocket;
  }
 else {
    driver=eventDriverFactory.wrap(websocket);
  }
  if (driver == null) {
    throw new IllegalStateException("Unable to identify as websocket object: " + websocket.getClass().getName());
  }
  ConnectPromise promise=manager.connect(this,driver,request);
  if (upgradeListener != null) {
    promise.setUpgradeListener(upgradeListener);
  }
  LOG.debug("Connect Promise: {}",promise);
  executor.execute(promise);
  return promise;
}
