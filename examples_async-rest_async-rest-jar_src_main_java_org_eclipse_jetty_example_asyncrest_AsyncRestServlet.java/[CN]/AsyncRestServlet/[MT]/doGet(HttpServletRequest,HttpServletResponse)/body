{
  Long start=System.nanoTime();
  Queue<Map<String,String>> results=(Queue<Map<String,String>>)request.getAttribute(RESULTS_ATTR);
  if (results == null) {
    final Queue<Map<String,String>> resultsQueue=new ConcurrentLinkedQueue<>();
    request.setAttribute(RESULTS_ATTR,results=resultsQueue);
    final AsyncContext async=request.startAsync();
    async.setTimeout(30000);
    String[] keywords=sanitize(request.getParameter(ITEMS_PARAM)).split(",");
    final AtomicInteger outstanding=new AtomicInteger(keywords.length);
    for (    final String item : keywords) {
      _client.newRequest(restURL(item)).method(HttpMethod.GET).send(new AsyncRestRequest(){
        @Override void onAuctionFound(        Map<String,String> auction){
          resultsQueue.add(auction);
        }
        @Override void onComplete(){
          if (outstanding.decrementAndGet() <= 0)           async.dispatch();
        }
      }
);
    }
    request.setAttribute(START_ATTR,start);
    request.setAttribute(DURATION_ATTR,System.nanoTime() - start);
    return;
  }
  String thumbs=generateThumbs(results);
  response.setContentType("text/html");
  PrintWriter out=response.getWriter();
  out.println("<html><head>");
  out.println(STYLE);
  out.println("</head><body><small>");
  long initial=(Long)request.getAttribute(DURATION_ATTR);
  long start0=(Long)request.getAttribute(START_ATTR);
  long now=System.nanoTime();
  long total=now - start0;
  long generate=now - start;
  long thread=initial + generate;
  out.print("<b>Asynchronous: " + sanitize(request.getParameter(ITEMS_PARAM)) + "</b><br/>");
  out.print("Total Time: " + ms(total) + "ms<br/>");
  out.print("Thread held (<span class='red'>red</span>): " + ms(thread) + "ms ("+ ms(initial)+ " initial + "+ ms(generate)+ " generate )<br/>");
  out.print("Async wait (<span class='green'>green</span>): " + ms(total - thread) + "ms<br/>");
  out.println("<img border='0px' src='asyncrest/red.png'   height='20px' width='" + width(initial) + "px'>"+ "<img border='0px' src='asyncrest/green.png' height='20px' width='"+ width(total - thread)+ "px'>"+ "<img border='0px' src='asyncrest/red.png'   height='20px' width='"+ width(generate)+ "px'>");
  out.println("<hr />");
  out.println(thumbs);
  out.println("</small>");
  out.println("</body></html>");
  out.close();
}
