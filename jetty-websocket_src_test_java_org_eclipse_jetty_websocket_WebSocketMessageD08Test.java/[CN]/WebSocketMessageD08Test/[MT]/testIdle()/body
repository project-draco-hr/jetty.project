{
  Socket socket=new Socket("localhost",__connector.getLocalPort());
  OutputStream output=socket.getOutputStream();
  output.write(("GET /chat HTTP/1.1\r\n" + "Host: server.example.com\r\n" + "Upgrade: websocket\r\n"+ "Connection: Upgrade\r\n"+ "Sec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ==\r\n"+ "Sec-WebSocket-Origin: http://example.com\r\n"+ "Sec-WebSocket-Protocol: onConnect\r\n"+ "Sec-WebSocket-Version: 8\r\n"+ "\r\n").getBytes("ISO-8859-1"));
  output.flush();
  socket.setSoTimeout(10000);
  InputStream input=socket.getInputStream();
  lookFor("HTTP/1.1 101 Switching Protocols\r\n",input);
  skipTo("Sec-WebSocket-Accept: ",input);
  lookFor("s3pPLMBiTxaQ9kYGzzhZRbK+xOo=",input);
  skipTo("\r\n\r\n",input);
  assertTrue(__serverWebSocket.awaitConnected(1000));
  assertNotNull(__serverWebSocket.connection);
  assertEquals(0x81,input.read());
  assertEquals(0x0f,input.read());
  lookFor("sent on connect",input);
  assertEquals((byte)0x88,(byte)input.read());
  assertEquals(26,input.read());
  assertEquals(1000 / 0x100,input.read());
  assertEquals(1000 % 0x100,input.read());
  lookFor("Idle",input);
  output.write(0x88 ^ 0xff);
  output.write(0x80 ^ 0xff);
  output.write(0xff);
  output.write(0xff);
  output.write(0xff);
  output.write(0xff);
  output.flush();
  assertTrue(__serverWebSocket.awaitDisconnected(5000));
  try {
    __serverWebSocket.connection.sendMessage("Don't send");
    assertTrue(false);
  }
 catch (  IOException e) {
    assertTrue(true);
  }
}
