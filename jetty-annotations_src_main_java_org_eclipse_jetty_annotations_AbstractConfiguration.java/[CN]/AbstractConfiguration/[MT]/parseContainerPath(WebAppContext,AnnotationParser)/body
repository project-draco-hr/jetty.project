{
  Log.debug("Scanning container jars");
  List<DiscoveredAnnotation> discoveredAnnotations=new ArrayList<DiscoveredAnnotation>();
  context.setAttribute(DISCOVERED_ANNOTATIONS,discoveredAnnotations);
  ArrayList<URI> containerUris=new ArrayList<URI>();
  List<Resource> jarResources=(List<Resource>)context.getAttribute(CONTAINER_JAR_RESOURCES);
  for (  Resource r : jarResources) {
    URI uri=r.getURI();
    containerUris.add(uri);
  }
  parser.parse(containerUris.toArray(new URI[containerUris.size()]),new ClassNameResolver(){
    public boolean isExcluded(    String name){
      if (context.isSystemClass(name))       return false;
      if (context.isServerClass(name))       return true;
      return false;
    }
    public boolean shouldOverride(    String name){
      if (context.isParentLoaderPriority())       return true;
      return false;
    }
  }
);
  MetaData metaData=(MetaData)context.getAttribute(MetaData.METADATA);
  if (metaData == null)   throw new IllegalStateException("No metadata");
  metaData.addDiscoveredAnnotations((List<DiscoveredAnnotation>)context.getAttribute(DISCOVERED_ANNOTATIONS));
  context.removeAttribute(DISCOVERED_ANNOTATIONS);
}
