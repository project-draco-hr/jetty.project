{
  List<String> negotiated=this.negotiatedProtocols;
  if (negotiated.isEmpty()) {
    negotiated=new ArrayList<>(connector.getProtocols());
    for (Iterator<String> i=negotiated.iterator(); i.hasNext(); ) {
      String protocol=i.next();
      ConnectionFactory f=connector.getConnectionFactory(protocol);
      if ((f instanceof SslConnectionFactory) || (f instanceof NegotiatingServerConnectionFactory)) {
        i.remove();
      }
    }
  }
  String dft=defaultProtocol;
  if (dft == null && !negotiated.isEmpty()) {
    if (negotiated.contains(HttpVersion.HTTP_1_1.asString()))     dft=HttpVersion.HTTP_1_1.asString();
    dft=negotiated.get(0);
  }
  SSLEngine engine=null;
  EndPoint ep=endPoint;
  while (engine == null && ep != null) {
    if (ep instanceof SslConnection.DecryptedEndPoint)     engine=((SslConnection.DecryptedEndPoint)ep).getSslConnection().getSSLEngine();
 else     ep=null;
  }
  return configure(newServerConnection(connector,endPoint,engine,negotiated,dft),connector,endPoint);
}
