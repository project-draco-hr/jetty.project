{
  AtomicLong fills=new AtomicLong();
  connector.clearConnectionFactories();
  HttpConnectionFactory connectionFactory=new HttpConnectionFactory(){
    @Override public Connection newConnection(    Connector connector,    EndPoint endPoint){
      HttpConnection connection=new HttpConnection(getHttpConfiguration(),connector,endPoint){
        @Override public void onFillable(){
          fills.incrementAndGet();
          super.onFillable();
        }
      }
;
      return configure(connection,connector,endPoint);
    }
  }
;
  connector.addConnectionFactory(connectionFactory);
  connector.setDefaultProtocol(connectionFactory.getProtocol());
  byteBufferPool=new MappedByteBufferPool();
  generator=new Generator(byteBufferPool);
  ByteBufferPool.Lease lease=new ByteBufferPool.Lease(byteBufferPool);
  generator.control(lease,new PrefaceFrame());
  try (Socket client=new Socket("localhost",connector.getLocalPort())){
    OutputStream output=client.getOutputStream();
    for (    ByteBuffer buffer : lease.getByteBuffers())     output.write(BufferUtil.toArray(buffer));
    InputStream input=client.getInputStream();
    BufferedReader reader=new BufferedReader(new InputStreamReader(input,StandardCharsets.UTF_8));
    String responseLine=reader.readLine();
    Assert.assertThat(responseLine,Matchers.containsString(" 426 "));
    while (true) {
      if (reader.read() < 0)       break;
    }
  }
   Thread.sleep(1000);
  Assert.assertThat(fills.get(),Matchers.lessThan(5L));
}
