{
  File testLoggingDir=new File(MavenTestingUtils.getTargetTestingDir(this),"logs");
  testLoggingDir.mkdirs();
  System.setProperty("test.dir",testLoggingDir.getAbsolutePath());
  Properties props=new Properties();
  props.setProperty("root.level","DEBUG");
  props.setProperty("root.appenders","console,rollLog");
  props.setProperty("logger.AUDIT.level","INFO");
  props.setProperty("logger.AUDIT.appenders","-rollLog,auditLog");
  props.setProperty("appender.console.class",ConsoleAppender.class.getName());
  props.setProperty("appender.rollLog.class",RollingFileAppender.class.getName());
  props.setProperty("appender.rollLog.filename","${test.dir}/rolling.log");
  props.setProperty("appender.auditLog.class",RollingFileAppender.class.getName());
  props.setProperty("appender.auditLog.filename","${test.dir}/audit.log");
  CentralLoggerConfig root=CentralLoggerConfig.load(props);
  assertNotNull("Root Logger should not be null",root);
  assertEquals("Root Logger.name",Logger.ROOT_LOGGER_NAME,root.getName());
  assertSeverityLevel(root,Severity.DEBUG);
  assertAppendersById(root,"console","rollLog");
  CentralLoggerConfig jettyLogger=root.getConfiguredLogger("AUDIT");
  assertNotNull("Jetty Logger should not be null",jettyLogger);
  assertEquals("Jetty Logger.name","AUDIT",jettyLogger.getName());
  assertSeverityLevel(jettyLogger,Severity.INFO);
  assertAppendersById(jettyLogger,"console","auditLog");
  CentralLoggerConfig implLogger=root.getConfiguredLogger("AUDIT.some.thing.else");
  assertNotNull("Jetty Logging Impl Logger should not be null",implLogger);
  assertEquals("Jetty Logging Impl Logger.name","AUDIT.some.thing.else",implLogger.getName());
  assertSeverityLevel(implLogger,Severity.INFO);
  assertAppendersById(implLogger,"console","auditLog");
}
