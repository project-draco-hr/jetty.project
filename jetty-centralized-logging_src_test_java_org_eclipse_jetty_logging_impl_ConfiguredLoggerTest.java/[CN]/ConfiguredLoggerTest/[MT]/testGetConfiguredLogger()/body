{
  Properties props=new Properties();
  props.setProperty("root.level","DEBUG");
  props.setProperty("root.appenders","console");
  props.setProperty("logger.org.eclipse.jetty.logging.level","WARN");
  props.setProperty("logger.org.eclipse.jetty.logging.appenders","test");
  props.setProperty("appender.test.class",TestAppender.class.getName());
  props.setProperty("appender.console.class",ConsoleAppender.class.getName());
  CentralLoggerConfig root=CentralLoggerConfig.load(props);
  assertNotNull("Root Logger should not be null",root);
  assertEquals("Root Logger.name",Logger.ROOT_LOGGER_NAME,root.getName());
  assertSeverityLevel(root,Severity.DEBUG);
  assertAppenders(root,ConsoleAppender.class);
  CentralLoggerConfig jettyLogger=root.getConfiguredLogger("org.eclipse.jetty");
  assertNotNull("Jetty Logger should not be null",jettyLogger);
  assertEquals("Jetty Logger.name","org.eclipse.jetty",jettyLogger.getName());
  assertSeverityLevel(jettyLogger,Severity.DEBUG);
  assertAppenders(jettyLogger,ConsoleAppender.class);
  CentralLoggerConfig implLogger=root.getConfiguredLogger("org.eclipse.jetty.logging.impl");
  assertNotNull("Jetty Logging Impl Logger should not be null",implLogger);
  assertEquals("Jetty Logging Impl Logger.name","org.eclipse.jetty.logging.impl",implLogger.getName());
  assertSeverityLevel(implLogger,Severity.WARN);
  assertAppenders(implLogger,ConsoleAppender.class,TestAppender.class);
}
