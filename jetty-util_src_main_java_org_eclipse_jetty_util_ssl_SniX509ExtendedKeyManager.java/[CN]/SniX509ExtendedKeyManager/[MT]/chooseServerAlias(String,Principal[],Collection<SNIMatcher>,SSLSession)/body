{
  String[] aliases=_delegate.getServerAliases(keyType,issuers);
  if (aliases == null || aliases.length == 0)   return null;
  String alias=null;
  String host=null;
  String wild=null;
  if (matchers != null) {
    for (    SNIMatcher m : matchers) {
      if (m instanceof SslContextFactory.AliasSNIMatcher) {
        SslContextFactory.AliasSNIMatcher matcher=(SslContextFactory.AliasSNIMatcher)m;
        alias=matcher.getAlias();
        host=matcher.getServerName();
        wild=matcher.getWildDomain();
        break;
      }
    }
  }
  if (LOG.isDebugEnabled())   LOG.debug("matched {}/{} from {}",alias,host,Arrays.asList(aliases));
  if (alias != null) {
    for (    String a : aliases) {
      if (a.equals(alias)) {
        session.putValue(SNI_NAME,host);
        if (wild != null)         session.putValue(SNI_WILD,wild);
        return alias;
      }
    }
    return null;
  }
  return NO_MATCHERS;
}
