{
  String[] aliases=_delegate.getServerAliases(keyType,issuers);
  if (aliases == null || aliases.length == 0)   return null;
  String host=null;
  String alias=null;
  List<String> hosts=null;
  List<String> wilds=null;
  if (matchers != null) {
    for (    SNIMatcher m : matchers) {
      if (m instanceof SslContextFactory.AliasSNIMatcher) {
        SslContextFactory.AliasSNIMatcher matcher=(SslContextFactory.AliasSNIMatcher)m;
        host=matcher.getHost();
        alias=matcher.getAlias();
        hosts=matcher.getHosts();
        wilds=matcher.getWilds();
        break;
      }
    }
  }
  if (LOG.isDebugEnabled())   LOG.debug("Matched {} with alias {}/{}/{} from {}",host,alias,hosts,wilds,Arrays.asList(aliases));
  if (alias != null) {
    for (    String a : aliases) {
      if (a.equals(alias)) {
        session.putValue(SNI_HOSTS,hosts);
        session.putValue(SNI_WILDS,wilds);
        return alias;
      }
    }
    return null;
  }
  return NO_MATCHERS;
}
