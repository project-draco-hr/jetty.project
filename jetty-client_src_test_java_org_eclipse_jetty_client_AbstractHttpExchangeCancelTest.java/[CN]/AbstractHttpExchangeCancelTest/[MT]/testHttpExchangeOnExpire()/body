{
  HttpClient httpClient=getHttpClient();
  httpClient.stop();
  httpClient.setTimeout(1000);
  httpClient.start();
  System.err.println("\n\n\nStart testHttpExchangeOnExpire " + this.getClass());
  TestHttpExchange exchange=new TestHttpExchange(){
    /** 
 * @see org.eclipse.jetty.client.AbstractHttpExchangeCancelTest.TestHttpExchange#onException(java.lang.Throwable)
 */
    @Override protected void onException(    Throwable ex){
      ex.printStackTrace();
      super.onException(ex);
    }
    /** 
 * @see org.eclipse.jetty.client.AbstractHttpExchangeCancelTest.TestHttpExchange#onExpire()
 */
    @Override protected void onExpire(){
      System.err.println("EXPIRED");
      super.onExpire();
    }
    /** 
 * @see org.eclipse.jetty.client.HttpExchange#onConnectionFailed(java.lang.Throwable)
 */
    @Override protected void onConnectionFailed(    Throwable x){
      x.printStackTrace();
      super.onConnectionFailed(x);
    }
  }
;
  exchange.setAddress(newAddress());
  exchange.setURI("/?action=wait5000");
  httpClient.send(exchange);
  int status=exchange.waitForDone();
  assertEquals(HttpExchange.STATUS_EXPIRED,status);
  assertFalse(exchange.isResponseCompleted());
  assertFalse(exchange.isFailed());
  assertTrue(exchange.isExpired());
  assertFalse(exchange.isAssociated());
}
