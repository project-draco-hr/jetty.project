{
  if (LOG.isDebugEnabled())   LOG.debug("C -> P {} on {}",clientSynInfo,clientStream);
  final Session clientSession=clientStream.getSession();
  short clientVersion=clientSession.getVersion();
  Fields headers=new Fields(clientSynInfo.getHeaders(),false);
  Fields.Field hostHeader=headers.get(HTTPSPDYHeader.HOST.name(clientVersion));
  if (hostHeader == null) {
    if (LOG.isDebugEnabled())     LOG.debug("No host header found: " + headers);
    rst(clientStream);
    return null;
  }
  String host=hostHeader.getValue();
  int colon=host.indexOf(':');
  if (colon >= 0)   host=host.substring(0,colon);
  ProxyServerInfo proxyServerInfo=getProxyServerInfo(host);
  if (proxyServerInfo == null) {
    if (LOG.isDebugEnabled())     LOG.debug("No matching ProxyServerInfo found for: " + host);
    rst(clientStream);
    return null;
  }
  String protocol=proxyServerInfo.getProtocol();
  ProxyEngine proxyEngine=proxyEngines.get(protocol);
  if (proxyEngine == null) {
    if (LOG.isDebugEnabled())     LOG.debug("No matching ProxyEngine found for: " + protocol);
    rst(clientStream);
    return null;
  }
  if (LOG.isDebugEnabled())   LOG.debug("Forwarding request: {} -> {}",clientSynInfo,proxyServerInfo);
  return proxyEngine.proxy(clientStream,clientSynInfo,proxyServerInfo);
}
