{
  HttpExchange exchange=connection.getExchange();
  if (exchange == null)   return false;
  AtomicMarkableReference<Result> completion=exchange.requestComplete(failure);
  if (!completion.isMarked())   return false;
  generator.abort();
  State current;
  while (true) {
    current=state.get();
    if (updateState(current,State.FAILURE))     break;
  }
  exchange.terminate();
  Request request=exchange.request();
  requestNotifier.notifyFailure(request,failure);
  LOG.debug("Failed {} {}",request,failure);
  Result result=completion.getReference();
  boolean notCommitted=current == State.IDLE || current == State.SEND;
  if (result == null && notCommitted && !request.aborted()) {
    result=exchange.responseComplete(failure).getReference();
    exchange.terminate();
    LOG.debug("Failed on behalf {}",exchange);
  }
  if (result != null) {
    connection.complete(exchange,false);
    HttpConversation conversation=exchange.conversation();
    responseNotifier.notifyComplete(conversation.listener(),result);
  }
  return true;
}
