{
  if (!expects100Continue(exchange.getRequest()))   return;
  if (proceed) {
    while (true) {
      SenderState current=senderState.get();
switch (current) {
case EXPECTING:
{
          if (!updateSenderState(current,SenderState.SENDING))           break;
          LOG.debug("Proceed while expecting");
          return;
        }
case WAITING:
{
        if (!updateSenderState(current,SenderState.SENDING))         break;
        HttpContent content=this.content;
        if (content.advance()) {
          LOG.debug("Proceed while waiting");
          sendContent(exchange,content,contentCallback);
        }
 else {
          if (!updateSenderState(SenderState.SENDING,SenderState.IDLE))           break;
          LOG.debug("Proceed deferred");
        }
        return;
      }
case SCHEDULED:
{
      if (!updateSenderState(current,SenderState.WAITING))       throw new IllegalStateException();
      LOG.debug("Proceed while scheduled");
      break;
    }
default :
{
    throw new IllegalStateException();
  }
}
}
}
 else {
anyToFailure(new HttpRequestException("Expectation failed",exchange.getRequest()));
}
}
