{
  HttpExchange exchange=getHttpExchange();
  if (exchange == null)   return false;
  Request request=exchange.getRequest();
  ByteBuffer contentBuffer=getContent();
  if (contentBuffer != null) {
    if (!someToContent(request,contentBuffer))     return false;
  }
  if (advance()) {
    sendContent(exchange,ContentCallback.this);
  }
 else {
    if (isLast()) {
      sendContent(exchange,new LastContentCallback(ContentCallback.this));
    }
 else {
      while (true) {
        SenderState current=senderState.get();
switch (current) {
case SENDING:
{
            if (updateSenderState(current,SenderState.IDLE)) {
              LOG.debug("Waiting for deferred content for {}",request);
              return false;
            }
            break;
          }
case SCHEDULED:
{
          if (updateSenderState(current,SenderState.SENDING)) {
            LOG.debug("Deferred content available for {}",request);
            sendContent(exchange,ContentCallback.this);
            return false;
          }
          break;
        }
default :
{
        throw new IllegalStateException();
      }
  }
}
}
}
return false;
}
