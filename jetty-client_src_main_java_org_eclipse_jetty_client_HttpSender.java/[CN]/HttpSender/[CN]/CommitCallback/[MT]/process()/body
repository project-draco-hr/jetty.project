{
  HttpExchange exchange=getHttpExchange();
  if (exchange == null)   return;
  if (!headersToCommit(exchange))   return;
  HttpContent content=HttpSender.this.content;
  if (content == null)   return;
  if (!content.hasContent()) {
    someToSuccess(exchange);
  }
 else {
    ByteBuffer contentBuffer=content.getContent();
    if (contentBuffer != null) {
      if (!someToContent(exchange,contentBuffer))       return;
    }
    while (true) {
      SenderState current=senderState.get();
switch (current) {
case SENDING:
{
          contentCallback.iterate();
          return;
        }
case SENDING_WITH_CONTENT:
{
        updateSenderState(current,SenderState.SENDING);
        break;
      }
case EXPECTING:
{
      if (updateSenderState(current,SenderState.WAITING))       return;
      break;
    }
case EXPECTING_WITH_CONTENT:
{
    if (updateSenderState(current,SenderState.WAITING))     return;
    break;
  }
case PROCEEDING:
{
  if (updateSenderState(current,SenderState.IDLE))   return;
  break;
}
case PROCEEDING_WITH_CONTENT:
{
updateSenderState(current,SenderState.SENDING);
break;
}
case FAILED:
{
return;
}
default :
{
illegalSenderState(current);
return;
}
}
}
}
}
