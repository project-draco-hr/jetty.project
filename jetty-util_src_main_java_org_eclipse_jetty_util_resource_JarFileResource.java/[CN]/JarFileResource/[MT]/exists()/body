{
  if (_exists)   return true;
  if (_urlString.endsWith("!/")) {
    String file_url=_urlString.substring(4,_urlString.length() - 2);
    try {
      return newResource(file_url).exists();
    }
 catch (    Exception e) {
      LOG.ignore(e);
      return false;
    }
  }
  boolean check=checkConnection();
  if (_jarUrl != null && _path == null) {
    _directory=check;
    return true;
  }
 else {
    boolean close_jar_file=false;
    JarFile jar_file=null;
    if (check)     jar_file=_jarFile;
 else {
      try {
        JarURLConnection c=(JarURLConnection)((new URL(_jarUrl)).openConnection());
        c.setUseCaches(getUseCaches());
        jar_file=c.getJarFile();
        close_jar_file=!getUseCaches();
      }
 catch (      Exception e) {
        LOG.ignore(e);
      }
    }
    if (jar_file != null && _entry == null && !_directory) {
      JarEntry entry=jar_file.getJarEntry(_path);
      if (entry == null) {
        _exists=false;
      }
 else       if (entry.isDirectory()) {
        _directory=true;
        _entry=entry;
      }
 else {
        JarEntry directory=jar_file.getJarEntry(_path + '/');
        if (directory != null) {
          _directory=true;
          _entry=directory;
        }
 else {
          _directory=false;
          _entry=entry;
        }
      }
    }
    if (close_jar_file && jar_file != null) {
      try {
        jar_file.close();
      }
 catch (      IOException ioe) {
        LOG.ignore(ioe);
      }
    }
  }
  _exists=(_directory || _entry != null);
  return _exists;
}
