{
  TextFrame text1=new TextFrame();
  TextFrame text2=new TextFrame();
  text1.setFin(false);
  text2.setFin(true);
  text2.setContinuation(true);
  text1.setPayload("Hel");
  text2.setPayload("lo");
  WebSocketPolicy policy=new WebSocketPolicy(WebSocketBehavior.SERVER);
  TextFrameGenerator generator=new TextFrameGenerator(policy);
  ByteBuffer actual1=ByteBuffer.allocate(32);
  ByteBuffer actual2=ByteBuffer.allocate(32);
  generator.generate(actual1,text1);
  generator.generate(actual2,text2);
  ByteBuffer expected1=ByteBuffer.allocate(5);
  expected1.put(new byte[]{(byte)0x01,(byte)0x03,(byte)0x48,(byte)0x65,(byte)0x6c});
  ByteBuffer expected2=ByteBuffer.allocate(4);
  expected2.put(new byte[]{(byte)0x80,(byte)0x02,(byte)0x6c,(byte)0x6f});
  expected1.flip();
  actual1.flip();
  expected2.flip();
  actual2.flip();
  ByteBufferAssert.assertEquals("t1 buffers are not equal",expected1,actual1);
  ByteBufferAssert.assertEquals("t2 buffers are not equal",expected2,actual2);
}
