{
  final byte[] chunk1=new byte[512];
  final byte[] chunk2=new byte[512];
  Random random=new Random();
  random.nextBytes(chunk1);
  random.nextBytes(chunk2);
  start(new AbstractHandler(){
    @Override public void handle(    String target,    Request baseRequest,    HttpServletRequest request,    HttpServletResponse response) throws IOException, ServletException {
      baseRequest.setHandled(true);
      ServletInputStream input=request.getInputStream();
      byte[] buffer=new byte[512];
      input.read(buffer);
      throw new IOException();
    }
  }
);
  org.eclipse.jetty.client.api.Request request=client.newRequest("localhost",connector.getLocalPort());
  DeferredContentProvider content=new DeferredContentProvider();
  FutureResponseListener listener=new FutureResponseListener(request);
  request.method(HttpMethod.POST).content(content).timeout(5,TimeUnit.SECONDS).send(listener);
  content.offer(ByteBuffer.wrap(chunk1));
  ContentResponse response=listener.get();
  Assert.assertEquals(500,response.getStatus());
}
