{
  Map<String,Object> result=new HashMap<String,Object>();
  Pattern pattern=Pattern.compile("--([^=]+)=(.+)");
  for (  String arg : args) {
    Matcher matcher=pattern.matcher(arg);
    if (matcher.matches()) {
      String argName=matcher.group(1);
      if (PORT_ARG.equals(argName)) {
        result.put(PORT_ARG,Integer.parseInt(matcher.group(2)));
      }
 else       if (RESOURCES_ARG.equals(argName)) {
        String argValue=matcher.group(2);
        result.put(RESOURCES_ARG,argValue);
      }
 else       if (RETRIEVER_ARG.equals(argName)) {
        String argValue=matcher.group(2);
        if (argValue.startsWith("host,")) {
          String[] typeAndSuffix=StringUtil.split(argValue);
          if (typeAndSuffix.length != 2)           throw new IllegalArgumentException("Invalid option " + arg + ", must be of the form --"+ RETRIEVER_ARG+ "=host,suffix");
          result.put(RETRIEVER_ARG,new HostTargetIdRetriever(typeAndSuffix[1]));
        }
      }
    }
  }
  return result;
}
