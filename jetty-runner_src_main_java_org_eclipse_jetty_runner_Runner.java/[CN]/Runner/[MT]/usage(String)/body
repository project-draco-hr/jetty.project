{
  if (error != null)   System.err.println("ERROR: " + error);
  System.err.println("Usage: java [-DDEBUG] [-Djetty.home=dir] -jar jetty-runner.jar [--help|--version] [ server opts] [[ context opts] context ...] ");
  System.err.println("Server Options:");
  System.err.println(" --version                          - display version and exit");
  System.err.println(" --log file                         - request log filename (with optional 'yyyy_mm_dd' wildcard");
  System.err.println(" --out file                         - info/warn/debug log filename (with optional 'yyyy_mm_dd' wildcard");
  System.err.println(" --port n                           - port to listen on (default 8080)");
  System.err.println(" --stop-port n                      - port to listen for stop command");
  System.err.println(" --stop-key n                       - security string for stop command (required if --stop-port is present)");
  System.err.println(" --jar file                         - a jar to be added to the classloader");
  System.err.println(" --jdbc classname properties jndiname - classname of XADataSource or driver; properties string; name to register in jndi");
  System.err.println(" --lib dir                          - a directory of jars to be added to the classloader");
  System.err.println(" --classes dir                      - a directory of classes to be added to the classloader");
  System.err.println(" --txFile                           - override properties file for Atomikos");
  System.err.println(" --stats [unsecure|realm.properties] - enable stats gathering servlet context");
  System.err.println(" --config file                      - a jetty xml config file to use instead of command line options");
  System.err.println("Context Options:");
  System.err.println(" --path /path       - context path (default /)");
  System.err.println(" context            - WAR file, web app dir or context.xml file");
  System.exit(1);
}
