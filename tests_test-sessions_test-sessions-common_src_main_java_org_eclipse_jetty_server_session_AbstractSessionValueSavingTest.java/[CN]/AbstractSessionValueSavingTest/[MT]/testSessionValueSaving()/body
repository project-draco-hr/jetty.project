{
  String contextPath="";
  String servletMapping="/server";
  int maxInactivePeriod=10000;
  int scavengePeriod=20000;
  AbstractTestServer server1=createServer(0,maxInactivePeriod,scavengePeriod);
  server1.addContext(contextPath).addServlet(TestServlet.class,servletMapping);
  server1.start();
  int port1=server1.getPort();
  try {
    HttpClient client=new HttpClient();
    client.start();
    try {
      long sessionTestValue=0;
      Future<ContentResponse> future=client.GET("http://localhost:" + port1 + contextPath+ servletMapping+ "?action=init");
      ContentResponse response1=future.get();
      assertEquals(HttpServletResponse.SC_OK,response1.getStatus());
      assertTrue(sessionTestValue < Long.parseLong(response1.getContentAsString()));
      sessionTestValue=Long.parseLong(response1.getContentAsString());
      String sessionCookie=response1.getHeaders().getStringField("Set-Cookie");
      assertTrue(sessionCookie != null);
      sessionCookie=sessionCookie.replaceFirst("(\\W)(P|p)ath=","$1\\$Path=");
      int requestInterval=500;
      for (int i=0; i < 10; ++i) {
        Request request2=client.newRequest("http://localhost:" + port1 + contextPath+ servletMapping);
        request2.header("Cookie",sessionCookie);
        future=request2.send();
        ContentResponse response2=future.get();
        assertEquals(HttpServletResponse.SC_OK,response2.getStatus());
        assertTrue(sessionTestValue < Long.parseLong(response2.getContentAsString()));
        sessionTestValue=Long.parseLong(response2.getContentAsString());
        String setCookie=response1.getHeaders().getStringField("Set-Cookie");
        if (setCookie != null)         sessionCookie=setCookie.replaceFirst("(\\W)(P|p)ath=","$1\\$Path=");
        Thread.sleep(requestInterval);
      }
    }
  finally {
      client.stop();
    }
  }
  finally {
    server1.stop();
  }
}
