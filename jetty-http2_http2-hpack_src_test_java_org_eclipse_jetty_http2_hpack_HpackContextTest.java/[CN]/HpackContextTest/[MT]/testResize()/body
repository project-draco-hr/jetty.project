{
  HpackContext ctx=new HpackContext(38 * 5);
  HttpField methodPost=new HttpField(":method","POST");
  HttpField[] field={new HttpField("fo0","b0r"),new HttpField("fo1","b1r"),new HttpField("fo2","b2r"),new HttpField("fo3","b3r"),new HttpField("fo4","b4r"),new HttpField("fo5","b5r"),new HttpField("fo6","b6r"),new HttpField("fo7","b7r"),new HttpField("fo8","b8r"),new HttpField("fo9","b9r"),new HttpField("foA","bAr")};
  Entry[] entry=new Entry[field.length];
  for (int i=0; i <= 4; i++)   entry[i]=ctx.add(field[i]);
  assertEquals(5,ctx.size());
  int index=5;
  for (int i=0; i <= 4; i++) {
    assertEquals(index,ctx.index(entry[i]));
    assertEquals(entry[i],ctx.get(index));
    index--;
  }
  assertEquals(":authority",ctx.get(1 + 5).getHttpField().getName());
  assertEquals(3 + 5,ctx.index(ctx.get(methodPost)));
  assertEquals(methodPost,ctx.get(3 + 5).getHttpField());
  assertEquals("www-authenticate",ctx.get(61 + 5).getHttpField().getName());
  assertEquals(null,ctx.get(62 + 5));
  ctx.addToRefSet(ctx.get(3));
  ctx.addToRefSet(ctx.get(1));
  ctx.addToRefSet(ctx.get(5));
  HashSet<HttpField> fields=new HashSet<>();
  for (  Entry e : ctx.getReferenceSet())   fields.add(e.getHttpField());
  assertEquals(3,fields.size());
  assertTrue(fields.contains(field[0]));
  assertTrue(fields.contains(field[2]));
  assertTrue(fields.contains(field[4]));
  ctx.resize(38 * 2);
  assertEquals(2,ctx.size());
  index=2;
  for (int i=3; i <= 4; i++) {
    assertEquals(index,ctx.index(entry[i]));
    assertEquals(entry[i],ctx.get(index));
    index--;
  }
  assertEquals(":authority",ctx.get(1 + 2).getHttpField().getName());
  assertEquals(3 + 2,ctx.index(ctx.get(methodPost)));
  assertEquals(methodPost,ctx.get(3 + 2).getHttpField());
  assertEquals("www-authenticate",ctx.get(61 + 2).getHttpField().getName());
  assertEquals(null,ctx.get(62 + 2));
  fields.clear();
  for (  Entry e : ctx.getReferenceSet())   fields.add(e.getHttpField());
  assertEquals(1,fields.size());
  assertFalse(fields.contains(field[0]));
  assertFalse(fields.contains(field[2]));
  assertTrue(fields.contains(field[4]));
  ctx.resize(38 * 6 + 19);
  assertEquals(2,ctx.size());
  index=2;
  for (int i=3; i <= 4; i++) {
    assertEquals(index,ctx.index(entry[i]));
    assertEquals(entry[i],ctx.get(index));
    index--;
  }
  assertEquals(":authority",ctx.get(1 + 2).getHttpField().getName());
  assertEquals(3 + 2,ctx.index(ctx.get(methodPost)));
  assertEquals(methodPost,ctx.get(3 + 2).getHttpField());
  assertEquals("www-authenticate",ctx.get(61 + 2).getHttpField().getName());
  assertEquals(null,ctx.get(62 + 2));
  fields.clear();
  for (  Entry e : ctx.getReferenceSet())   fields.add(e.getHttpField());
  assertEquals(1,fields.size());
  assertFalse(fields.contains(field[0]));
  assertFalse(fields.contains(field[2]));
  assertTrue(fields.contains(field[4]));
  for (int i=5; i <= 9; i++)   entry[i]=ctx.add(field[i]);
  assertEquals(6,ctx.size());
  index=6;
  for (int i=4; i <= 9; i++) {
    assertEquals(index,ctx.index(entry[i]));
    assertEquals(entry[i],ctx.get(index));
    index--;
  }
  assertEquals(":authority",ctx.get(1 + 6).getHttpField().getName());
  assertEquals(3 + 6,ctx.index(ctx.get(methodPost)));
  assertEquals(methodPost,ctx.get(3 + 6).getHttpField());
  assertEquals("www-authenticate",ctx.get(61 + 6).getHttpField().getName());
  assertEquals(null,ctx.get(62 + 6));
  fields.clear();
  for (  Entry e : ctx.getReferenceSet())   fields.add(e.getHttpField());
  assertEquals(1,fields.size());
  assertFalse(fields.contains(field[0]));
  assertFalse(fields.contains(field[2]));
  assertTrue(fields.contains(field[4]));
}
