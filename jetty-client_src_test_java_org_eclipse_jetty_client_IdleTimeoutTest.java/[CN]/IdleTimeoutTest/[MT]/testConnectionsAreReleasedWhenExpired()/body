{
  Server server=new Server();
  Connector connector=new SelectChannelConnector();
  server.addConnector(connector);
  server.setHandler(new AbstractHandler(){
    public void handle(    String target,    Request baseRequest,    HttpServletRequest request,    HttpServletResponse response) throws IOException, ServletException {
      if (request.getParameter("timeout") != null) {
        try {
          Thread.sleep(1000);
        }
 catch (        InterruptedException e) {
          e.printStackTrace();
        }
      }
      baseRequest.setHandled(true);
      response.getWriter().write("Hello world");
    }
  }
);
  server.start();
  HttpClient httpClient=new HttpClient();
  httpClient.setMaxConnectionsPerAddress(1);
  httpClient.setConnectTimeout(200);
  httpClient.setTimeout(200);
  httpClient.setIdleTimeout(200);
  httpClient.start();
  String uriString="http://localhost:" + connector.getLocalPort() + "/";
  HttpExchange httpExchange=new HttpExchange();
  httpExchange.setURI(URI.create(uriString).resolve("?timeout=true"));
  httpExchange.setMethod(HttpMethods.GET);
  httpClient.send(httpExchange);
  int status=httpExchange.waitForDone();
  assertThat("First request expired",status,is(8));
  httpExchange=new HttpExchange();
  httpExchange.setURI(URI.create(uriString));
  httpExchange.setMethod(HttpMethods.GET);
  httpClient.send(httpExchange);
  status=httpExchange.waitForDone();
  assertThat("Second request was successful as timeout is not set",status,is(7));
}
