{
  if (!"websocket".equalsIgnoreCase(request.getHeader("Upgrade"))) {
    throw new IllegalStateException("Not a 'WebSocket: Upgrade' request");
  }
  if (!"HTTP/1.1".equals(request.getProtocol())) {
    throw new IllegalStateException("Not a 'HTTP/1.1' request");
  }
  int version=request.getIntHeader("Sec-WebSocket-Version");
  if (version < 0) {
    version=request.getIntHeader("Sec-WebSocket-Draft");
  }
  WebSocketHandshake handshaker=handshakes.get(version);
  if (handshaker == null) {
    LOG.warn("Unsupported Websocket version: " + version);
    response.setHeader("Sec-WebSocket-Version",supportedVersions);
    response.sendError(HttpStatus.BAD_REQUEST_400,"Unsupported websocket version specification");
    return false;
  }
  HttpConnection http=HttpConnection.getCurrentConnection();
  AsyncEndPoint endp=http.getEndPoint();
  Executor executor=http.getConnector().getExecutor();
  ByteBufferPool bufferPool=http.getConnector().getByteBufferPool();
  WebSocketServerAsyncConnection connection=new WebSocketServerAsyncConnection(endp,executor,scheduler,websocket.getPolicy(),bufferPool,this);
  request.setAttribute(HttpConnection.UPGRADE_CONNECTION_ATTR,connection);
  LOG.debug("HttpConnection: {}",http);
  LOG.debug("AsyncWebSocketConnection: {}",connection);
  WebSocketSession session=new WebSocketSession(websocket,connection,getPolicy(),response.getAcceptedSubProtocol());
  connection.setSession(session);
  List<Extension> extensions=initExtensions(request.getExtensions());
  IncomingFrames incoming=session;
  OutgoingFrames outgoing=connection;
  if (extensions != null) {
    Iterator<Extension> extIter;
    extIter=extensions.iterator();
    while (extIter.hasNext()) {
      Extension ext=extIter.next();
      ext.setNextOutgoingFrames(outgoing);
      outgoing=ext;
      if (ext.useRsv1()) {
        connection.getGenerator().setRsv1InUse(true);
        connection.getParser().setRsv1InUse(true);
      }
      if (ext.useRsv2()) {
        connection.getGenerator().setRsv2InUse(true);
        connection.getParser().setRsv2InUse(true);
      }
      if (ext.useRsv3()) {
        connection.getGenerator().setRsv3InUse(true);
        connection.getParser().setRsv3InUse(true);
      }
    }
    Collections.reverse(extensions);
    extIter=extensions.iterator();
    while (extIter.hasNext()) {
      Extension ext=extIter.next();
      ext.setNextIncomingFrames(incoming);
      incoming=ext;
    }
  }
  session.setOutgoing(outgoing);
  connection.getParser().setIncomingFramesHandler(incoming);
  LOG.debug("Handshake Response: {}",handshaker);
  handshaker.doHandshakeResponse(request,response);
  LOG.debug("Websocket upgrade {} {} {} {}",request.getRequestURI(),version,response.getAcceptedSubProtocol(),connection);
  return true;
}
