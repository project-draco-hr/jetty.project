{
  if (!"websocket".equalsIgnoreCase(request.getHeader("Upgrade"))) {
    throw new IllegalStateException("Not a 'WebSocket: Upgrade' request");
  }
  if (!"HTTP/1.1".equals(request.getHttpVersion())) {
    throw new IllegalStateException("Not a 'HTTP/1.1' request");
  }
  int version=request.getHeaderInt("Sec-WebSocket-Version");
  if (version < 0) {
    version=request.getHeaderInt("Sec-WebSocket-Draft");
  }
  WebSocketHandshake handshaker=handshakes.get(version);
  if (handshaker == null) {
    LOG.warn("Unsupported Websocket version: " + version);
    response.setHeader("Sec-WebSocket-Version",supportedVersions);
    response.sendError(HttpStatus.BAD_REQUEST_400,"Unsupported websocket version specification");
    return false;
  }
  UpgradeContext context=getActiveUpgradeContext();
  LogicalConnection connection=context.getConnection();
  if (connection == null) {
    HttpConnection http=HttpConnection.getCurrentConnection();
    EndPoint endp=http.getEndPoint();
    Executor executor=http.getConnector().getExecutor();
    ByteBufferPool bufferPool=http.getConnector().getByteBufferPool();
    connection=new WebSocketServerConnection(endp,executor,scheduler,driver.getPolicy(),bufferPool,this);
    LOG.debug("HttpConnection: {}",http);
    LOG.debug("AsyncWebSocketConnection: {}",connection);
  }
  WebSocketSession session=new WebSocketSession(request.getRequestURI(),driver,connection);
  session.setPolicy(getPolicy().clonePolicy());
  session.setNegotiatedSubprotocol(response.getAcceptedSubProtocol());
  session.setNegotiatedExtensionConfigs(request.getExtensions());
  session.setExtensionFactory(extensionFactory);
  connection.setSession(session);
  IncomingFrames incoming=session;
  OutgoingFrames outgoing=connection;
  session.setOutgoingHandler(outgoing);
  connection.setNextIncomingFrames(incoming);
  request.setAttribute(HttpConnection.UPGRADE_CONNECTION_ATTRIBUTE,connection);
  LOG.debug("Handshake Response: {}",handshaker);
  handshaker.doHandshakeResponse(request,response);
  LOG.debug("Websocket upgrade {} {} {} {}",request.getRequestURI(),version,response.getAcceptedSubProtocol(),connection);
  return true;
}
