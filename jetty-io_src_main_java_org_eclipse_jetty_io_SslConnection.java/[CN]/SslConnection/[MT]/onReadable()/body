{
  _lock.lock();
  try {
    LOG.debug("onReadable {}",this);
    _netReadFuture=null;
    allocateBuffers();
    boolean progress=true;
    while (progress) {
      progress=false;
      if (!BufferUtil.isFull(_inNet)) {
        int filled=_endp.fill(_inNet);
        LOG.debug("filled {}",filled);
        if (filled > 0)         progress=true;
      }
      progress|=process(null);
    }
  }
 catch (  IOException e) {
    LOG.warn(e);
  }
 finally {
    releaseBuffers();
    if (_appReadFuture != null && !_appReadFuture.isDone() && _netReadFuture == null && !BufferUtil.isFull(_inNet))     _netReadFuture=scheduleOnReadable();
    LOG.debug("!onReadable {} {}",this,_netReadFuture);
    _lock.unlock();
  }
}
