{
  HttpTester request=new HttpTester();
  HttpTester.Response response;
  request.setMethod("GET");
  request.setVersion("HTTP/1.0");
  request.setHeader("Host","tester");
  request.setURI("/context/file.txt");
  response=HttpTester.parseResponse(tester.getResponses(request.generate()));
  assertEquals(HttpServletResponse.SC_NOT_FOUND,response.getStatus());
  request.setMethod("PUT");
  request.setURI("/context/file.txt");
  request.setHeader("Content-Type","text/plain");
  String data0="Now is the time for all good men to come to the aid of the party";
  request.setContent(data0);
  response=HttpTester.parseResponse(tester.getResponses(request.generate()));
  assertEquals(HttpServletResponse.SC_CREATED,response.getStatus());
  File file=new File(_dir,"file.txt");
  assertTrue(file.exists());
  assertEquals(data0,IO.toString(new FileInputStream(file)));
  request.setMethod("GET");
  request.setVersion("HTTP/1.0");
  request.setHeader("Host","tester");
  request.setURI("/context/file.txt");
  response=HttpTester.parseResponse(tester.getResponses(request.generate()));
  assertEquals(HttpServletResponse.SC_OK,response.getStatus());
  assertEquals(data0,response.getContent());
  request.setMethod("PUT");
  request.setURI("/context/file.txt");
  request.setHeader("Content-Type","text/plain");
  String data1="How Now BROWN COW!!!!";
  request.setContent(data1);
  response=HttpTester.parseResponse(tester.getResponses(request.generate()));
  assertEquals(HttpServletResponse.SC_OK,response.getStatus());
  file=new File(_dir,"file.txt");
  assertTrue(file.exists());
  assertEquals(data1,IO.toString(new FileInputStream(file)));
  request.setMethod("PUT");
  request.setURI("/context/file.txt");
  request.setHeader("Content-Type","text/plain");
  String data2="Blah blah blah Blah blah";
  request.setContent(data2);
  String to_send=BufferUtil.toString(request.generate());
  URL url=new URL(tester.createConnector(true));
  Socket socket=new Socket(url.getHost(),url.getPort());
  OutputStream out=socket.getOutputStream();
  int l=to_send.length();
  out.write(to_send.substring(0,l - 10).getBytes());
  out.flush();
  Thread.sleep(100);
  out.write(to_send.substring(l - 10,l - 5).getBytes());
  out.flush();
  do {
    Thread.sleep(100);
    request.setMethod("GET");
    request.setVersion("HTTP/1.0");
    request.setHeader("Host","tester");
    request.setURI("/context/file.txt");
    response=HttpTester.parseResponse(tester.getResponses(request.generate()));
  }
 while (response.getStatus() == 200);
  assertEquals(HttpServletResponse.SC_NOT_FOUND,response.getStatus());
  out.write(to_send.substring(l - 5).getBytes());
  out.flush();
  String in=IO.toString(socket.getInputStream());
  request.setMethod("GET");
  request.setVersion("HTTP/1.0");
  request.setHeader("Host","tester");
  request.setURI("/context/file.txt");
  response=HttpTester.parseResponse(tester.getResponses(request.generate()));
  assertEquals(HttpServletResponse.SC_OK,response.getStatus());
  assertEquals(data2,response.getContent());
}
