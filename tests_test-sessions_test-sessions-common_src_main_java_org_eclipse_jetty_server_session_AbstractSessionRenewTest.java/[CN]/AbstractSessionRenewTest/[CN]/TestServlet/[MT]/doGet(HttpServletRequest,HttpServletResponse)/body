{
  String action=request.getParameter("action");
  if ("create".equals(action)) {
    HttpSession session=request.getSession(true);
    assertTrue(session.isNew());
  }
 else   if ("renew".equals(action)) {
    HttpSession beforeSession=request.getSession(false);
    assertTrue(beforeSession != null);
    String beforeSessionId=beforeSession.getId();
    ((AbstractSession)beforeSession).renewId(request);
    HttpSession afterSession=request.getSession(false);
    assertTrue(afterSession != null);
    String afterSessionId=afterSession.getId();
    assertTrue(beforeSession == afterSession);
    assertFalse(beforeSessionId.equals(afterSessionId));
    AbstractSessionManager sessionManager=(AbstractSessionManager)((AbstractSession)afterSession).getSessionManager();
    AbstractSessionIdManager sessionIdManager=(AbstractSessionIdManager)sessionManager.getSessionIdManager();
    assertTrue(sessionIdManager.idInUse(afterSessionId));
    assertFalse(sessionIdManager.idInUse(beforeSessionId));
    HttpSession session=sessionManager.getSession(afterSessionId);
    assertNotNull(session);
    session=sessionManager.getSession(beforeSessionId);
    assertNull(session);
    if (((AbstractSession)afterSession).isIdChanged()) {
      ((org.eclipse.jetty.server.Response)response).addCookie(sessionManager.getSessionCookie(afterSession,request.getContextPath(),request.isSecure()));
    }
  }
}
