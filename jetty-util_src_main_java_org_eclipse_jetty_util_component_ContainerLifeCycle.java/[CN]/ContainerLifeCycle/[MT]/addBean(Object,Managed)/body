{
  if (contains(o))   return false;
  Bean new_bean=new Bean(o);
  if (o instanceof Container.Listener)   addEventListener((Container.Listener)o);
  _beans.add(new_bean);
  for (  Container.Listener l : _listeners)   l.beanAdded(this,o);
  try {
switch (managed) {
case UNMANAGED:
      unmanage(new_bean);
    break;
case MANAGED:
  manage(new_bean);
if (isStarting() && _doStarted) {
  LifeCycle l=(LifeCycle)o;
  if (!l.isRunning())   start(l);
}
break;
case AUTO:
if (o instanceof LifeCycle) {
LifeCycle l=(LifeCycle)o;
if (isStarting()) {
if (l.isRunning()) unmanage(new_bean);
 else if (_doStarted) {
  manage(new_bean);
  start(l);
}
 else new_bean._managed=Managed.AUTO;
}
 else if (isStarted()) unmanage(new_bean);
 else new_bean._managed=Managed.AUTO;
}
 else new_bean._managed=Managed.POJO;
break;
case POJO:
new_bean._managed=Managed.POJO;
}
}
 catch (RuntimeException|Error e) {
throw e;
}
catch (Exception e) {
throw new RuntimeException(e);
}
if (LOG.isDebugEnabled()) LOG.debug("{} added {}",this,new_bean);
return true;
}
