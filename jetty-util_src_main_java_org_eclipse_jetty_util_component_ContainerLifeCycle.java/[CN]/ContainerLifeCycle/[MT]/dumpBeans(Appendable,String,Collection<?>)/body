{
  dumpThis(out);
  int size=_beans.size();
  for (  Collection<?> c : collections)   size+=c.size();
  if (size == 0)   return;
  int i=0;
  for (  Bean b : _beans) {
    i++;
switch (b._managed) {
case POJO:
      out.append(indent).append(" +- ");
    if (b._bean instanceof Dumpable)     ((Dumpable)b._bean).dump(out,indent + (i == size ? "    " : " |  "));
 else     dumpObject(out,b._bean);
  break;
case MANAGED:
out.append(indent).append(" += ");
if (b._bean instanceof Dumpable) ((Dumpable)b._bean).dump(out,indent + (i == size ? "    " : " |  "));
 else dumpObject(out,b._bean);
break;
case UNMANAGED:
out.append(indent).append(" +~ ");
dumpObject(out,b._bean);
break;
case AUTO:
out.append(indent).append(" +? ");
if (b._bean instanceof Dumpable) ((Dumpable)b._bean).dump(out,indent + (i == size ? "    " : " |  "));
 else dumpObject(out,b._bean);
break;
}
}
if (i < size) out.append(indent).append(" |\n");
for (Collection<?> c : collections) {
for (Object o : c) {
i++;
out.append(indent).append(" +> ");
if (o instanceof Dumpable) ((Dumpable)o).dump(out,indent + (i == size ? "    " : " |  "));
 else dumpObject(out,o);
}
}
}
