{
  server=new Server();
  if (ssl) {
    HttpConfiguration http_config=new HttpConfiguration();
    http_config.setSecureScheme("https");
    http_config.setSecurePort(0);
    http_config.setOutputBufferSize(32768);
    http_config.setRequestHeaderSize(8192);
    http_config.setResponseHeaderSize(8192);
    http_config.setSendServerVersion(true);
    http_config.setSendDateHeader(false);
    sslContextFactory=new SslContextFactory();
    sslContextFactory.setKeyStorePath(MavenTestingUtils.getTestResourceFile("keystore").getAbsolutePath());
    sslContextFactory.setKeyStorePassword("storepwd");
    sslContextFactory.setKeyManagerPassword("keypwd");
    sslContextFactory.setExcludeCipherSuites("SSL_RSA_WITH_DES_CBC_SHA","SSL_DHE_RSA_WITH_DES_CBC_SHA","SSL_DHE_DSS_WITH_DES_CBC_SHA","SSL_RSA_EXPORT_WITH_RC4_40_MD5","SSL_RSA_EXPORT_WITH_DES40_CBC_SHA","SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA","SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA");
    HttpConfiguration https_config=new HttpConfiguration(http_config);
    https_config.addCustomizer(new SecureRequestCustomizer());
    connector=new ServerConnector(server,new SslConnectionFactory(sslContextFactory,HttpVersion.HTTP_1_1.asString()),new HttpConnectionFactory(https_config));
    connector.setPort(0);
  }
 else {
    connector=new ServerConnector(server);
    connector.setPort(0);
  }
  server.addConnector(connector);
  ServletContextHandler context=new ServletContextHandler();
  context.setContextPath("/");
  server.setHandler(context);
  context.addServlet(new ServletHolder(servlet),"/*");
  server.start();
  String host=connector.getHost();
  if (host == null) {
    host="localhost";
  }
  int port=connector.getLocalPort();
  serverUri=new URI(String.format("%s://%s:%d/",ssl ? "wss" : "ws",host,port));
  if (LOG.isDebugEnabled()) {
    LOG.debug(server.dump());
  }
}
