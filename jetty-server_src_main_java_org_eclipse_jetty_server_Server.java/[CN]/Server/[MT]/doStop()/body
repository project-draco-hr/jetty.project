{
  if (isDumpBeforeStop())   dumpStdErr();
  MultiException mex=new MultiException();
  List<Future<Void>> futures=new ArrayList<>();
  for (  Connector connector : _connectors)   futures.add(connector.shutdown((Void)null));
  Handler[] contexts=getChildHandlersByClass(Graceful.class);
  for (  Handler context : contexts)   futures.add(((Graceful)context).shutdown((Void)null));
  long stopTimeout=getStopTimeout();
  if (stopTimeout > 0) {
    long stop_by=System.currentTimeMillis() + stopTimeout;
    LOG.info("Graceful shutdown {} by ",this,new Date(stop_by));
    for (    Future<Void> future : futures) {
      try {
        if (!future.isDone())         future.get(Math.max(1L,stop_by - System.currentTimeMillis()),TimeUnit.MILLISECONDS);
      }
 catch (      ExecutionException e) {
        mex.add(e.getCause());
      }
catch (      Exception e) {
        mex.add(e.getCause());
      }
    }
  }
  for (  Future<Void> future : futures)   if (!future.isDone())   future.cancel(true);
  for (  Connector connector : _connectors) {
    try {
      connector.stop();
    }
 catch (    Throwable e) {
      mex.add(e);
    }
  }
  try {
    super.doStop();
  }
 catch (  Throwable e) {
    mex.add(e);
  }
  if (getStopAtShutdown())   ShutdownThread.deregister(this);
  mex.ifExceptionThrow();
}
