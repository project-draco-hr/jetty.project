{
  if (getStopAtShutdown())   ShutdownThread.register(this);
  ShutdownMonitor.register(this);
  ShutdownMonitor.getInstance().start();
  LOG.info("jetty-" + getVersion());
  HttpGenerator.setJettyVersion(HttpConfiguration.SERVER_VERSION);
  MultiException mex=new MultiException();
  SizedThreadPool pool=getBean(SizedThreadPool.class);
  int max=pool == null ? -1 : pool.getMaxThreads();
  int selectors=0;
  int acceptors=0;
  if (mex.size() == 0) {
    for (    Connector connector : _connectors) {
      if (connector instanceof AbstractConnector)       acceptors+=((AbstractConnector)connector).getAcceptors();
      if (connector instanceof ServerConnector)       selectors+=((ServerConnector)connector).getSelectorManager().getSelectorCount();
    }
  }
  int needed=1 + selectors + acceptors;
  if (max > 0 && needed > max)   throw new IllegalStateException(String.format("Insufficient threads: max=%d < needed(acceptors=%d + selectors=%d + request=1)",max,acceptors,selectors));
  try {
    super.doStart();
  }
 catch (  Throwable e) {
    mex.add(e);
  }
  for (  Connector connector : _connectors) {
    try {
      connector.start();
    }
 catch (    Throwable e) {
      mex.add(e);
    }
  }
  if (isDumpAfterStart())   dumpStdErr();
  mex.ifExceptionThrow();
  LOG.info(String.format("Started @%dms",Uptime.getUptime()));
}
