{
  try {
    String response;
    int offset=0;
    connector.reopen();
    offset=0;
    connector.reopen();
    response=connector.getResponses("GET /R1 HTTP/1.1\n" + "Host: localhost\n" + "Transfer-Encoding: identity\n"+ "Content-Type: text/plain\n"+ "Content-Length: 5\n"+ "\n"+ "123\015\012"+ "GET /R2 HTTP/1.1\n"+ "Host: localhost\n"+ "Connection: close\n"+ "\n");
    offset=checkContains(response,offset,"HTTP/1.1 200 OK","2. identity") + 10;
    offset=checkContains(response,offset,"/R1","2. identity") + 3;
    offset=checkContains(response,offset,"HTTP/1.1 200 OK","2. identity") + 10;
    offset=checkContains(response,offset,"/R2","2. identity") + 3;
    offset=0;
    connector.reopen();
    response=connector.getResponses("GET /R1 HTTP/1.1\n" + "Host: localhost\n" + "Transfer-Encoding: chunked\n"+ "Content-Type: text/plain\n"+ "Content-Length: 100\n"+ "\n"+ "3;\n"+ "123\n"+ "3;\n"+ "456\n"+ "0;\n"+ "\n"+ "GET /R2 HTTP/1.1\n"+ "Host: localhost\n"+ "Connection: close\n"+ "Content-Type: text/plain\n"+ "Content-Length: 6\n"+ "\n"+ "123456");
    offset=checkContains(response,offset,"HTTP/1.1 200 OK","3. ignore c-l") + 1;
    offset=checkContains(response,offset,"/R1","3. ignore c-l") + 1;
    offset=checkContains(response,offset,"123456","3. ignore c-l") + 1;
    offset=checkContains(response,offset,"HTTP/1.1 200 OK","3. ignore c-l") + 1;
    offset=checkContains(response,offset,"/R2","3. _content-length") + 1;
    offset=checkContains(response,offset,"123456","3. _content-length") + 1;
    assertTrue("Skip 411 checks as IE breaks this rule",true);
  }
 catch (  Exception e) {
    e.printStackTrace();
    assertTrue(false);
  }
}
