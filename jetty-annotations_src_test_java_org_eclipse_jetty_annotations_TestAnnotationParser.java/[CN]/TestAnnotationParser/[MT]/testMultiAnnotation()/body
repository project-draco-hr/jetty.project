{
  String[] classNames=new String[]{"org.eclipse.jetty.annotations.ClassB"};
  AnnotationParser parser=new AnnotationParser();
class MultiAnnotationHandler extends AnnotationParser.AbstractHandler {
    public void handle(    ClassInfo info,    String annotation){
      if (annotation == null || !"org.eclipse.jetty.annotations.Multi".equals(annotation))       return;
      assertTrue("org.eclipse.jetty.annotations.ClassB".equals(info.getClassName()));
    }
    public void handle(    FieldInfo info,    String annotation){
      if (annotation == null || !"org.eclipse.jetty.annotations.Multi".equals(annotation))       return;
      fail();
    }
    public void handle(    MethodInfo info,    String annotation){
      if (annotation == null || !"org.eclipse.jetty.annotations.Multi".equals(annotation))       return;
      assertTrue("org.eclipse.jetty.annotations.ClassB".equals(info.getClassName()));
      assertTrue("a".equals(info.getMethodName()));
    }
  }
  parser.registerHandler(new MultiAnnotationHandler());
  parser.parse(classNames,null);
}
