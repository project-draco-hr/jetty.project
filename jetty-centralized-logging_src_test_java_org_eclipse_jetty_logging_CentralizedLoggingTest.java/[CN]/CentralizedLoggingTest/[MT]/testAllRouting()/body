{
  CentralLoggerConfig root=CentralizedWebAppLoggingConfiguration.getLoggerRoot();
  TestAppender testAppender=(TestAppender)root.findAppender(TestAppender.class);
  assertNotNull("Should have found TestAppender in configuration",testAppender);
  boolean isSurefireExecuting=MavenTestingUtils.isSurefireExecuting();
  if (!isSurefireExecuting) {
    SimpleRequest.get(jetty,"/dummy-webapp-logging-log4j/logging");
    SimpleRequest.get(jetty,"/dummy-webapp-logging-commons/logging");
  }
  SimpleRequest.get(jetty,"/dummy-webapp-logging-slf4j/logging");
  SimpleRequest.get(jetty,"/dummy-webapp-logging-java/logging");
  TestAppender.LogEvent expectedLogs[];
  if (isSurefireExecuting) {
    expectedLogs=new LogEvent[]{new LogEvent(null,-1,Severity.DEBUG,LOGGING_SERVLET_ID,"LoggingServlet(slf4j) initialized",null),new LogEvent(null,-1,Severity.INFO,LOGGING_SERVLET_ID,"LoggingServlet(slf4j) GET requested",null),new LogEvent(null,-1,Severity.DEBUG,LOGGING_SERVLET_ID,"LoggingServlet(java) initialized",null),new LogEvent(null,-1,Severity.INFO,LOGGING_SERVLET_ID,"LoggingServlet(java) GET requested",null)};
  }
 else {
    expectedLogs=new LogEvent[]{new LogEvent(null,-1,Severity.DEBUG,LOGGING_SERVLET_ID,"LoggingServlet(log4j) initialized",null),new LogEvent(null,-1,Severity.INFO,LOGGING_SERVLET_ID,"LoggingServlet(log4j) GET requested",null),new LogEvent(null,-1,Severity.DEBUG,LOGGING_SERVLET_ID,"LoggingServlet(slf4j) initialized",null),new LogEvent(null,-1,Severity.INFO,LOGGING_SERVLET_ID,"LoggingServlet(slf4j) GET requested",null),new LogEvent(null,-1,Severity.DEBUG,LOGGING_SERVLET_ID,"LoggingServlet(commons-logging) initialized",null),new LogEvent(null,-1,Severity.INFO,LOGGING_SERVLET_ID,"LoggingServlet(commons-logging) GET requested",null),new LogEvent(null,-1,Severity.DEBUG,LOGGING_SERVLET_ID,"LoggingServlet(java) initialized",null),new LogEvent(null,-1,Severity.INFO,LOGGING_SERVLET_ID,"LoggingServlet(java) GET requested",null)};
  }
  assertContainsLogEvents(testAppender,expectedLogs);
}
