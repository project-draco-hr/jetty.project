{
  Object listeners=null;
synchronized (this) {
switch (_state) {
case __SUSPENDING:
case __SUSPENDED:
      listeners=_listeners;
    break;
default :
  return;
}
_expired=true;
}
if (listeners != null) {
for (int i=0; i < LazyList.size(listeners); i++) {
try {
  ContinuationListener listener=((ContinuationListener)LazyList.get(listeners,i));
  listener.onTimeout(this);
}
 catch (Exception e) {
  Log.warn(e);
}
}
}
synchronized (this) {
switch (_state) {
case __SUSPENDING:
case __SUSPENDED:
dispatch();
}
}
scheduleDispatch();
}
