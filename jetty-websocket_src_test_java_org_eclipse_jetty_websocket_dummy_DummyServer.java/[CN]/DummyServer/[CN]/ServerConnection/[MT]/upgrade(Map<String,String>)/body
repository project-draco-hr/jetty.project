{
  @SuppressWarnings("unused") Pattern patExts=Pattern.compile("^Sec-WebSocket-Extensions: (.*)$",Pattern.CASE_INSENSITIVE);
  Pattern patKey=Pattern.compile("^Sec-WebSocket-Key: (.*)$",Pattern.CASE_INSENSITIVE);
  LOG.debug("(Upgrade) Reading HTTP Request");
  Matcher mat;
  String key="not sent";
  BufferedReader in=new BufferedReader(new InputStreamReader(getInputStream()));
  for (String line=in.readLine(); line != null; line=in.readLine()) {
    if (line.length() == 0) {
      break;
    }
    mat=patKey.matcher(line);
    if (mat.matches()) {
      key=mat.group(1);
    }
  }
  LOG.debug("(Upgrade) Writing HTTP Response");
  StringBuilder resp=new StringBuilder();
  resp.append("HTTP/1.1 101 Upgrade\r\n");
  resp.append("Upgrade: websocket\r\n");
  resp.append("Connection: upgrade\r\n");
  resp.append("Sec-WebSocket-Accept: ");
  resp.append(WebSocketConnectionRFC6455.hashKey(key)).append("\r\n");
  if (extraResponseHeaders != null) {
    for (    Map.Entry<String,String> header : extraResponseHeaders.entrySet()) {
      resp.append(header.getKey());
      resp.append(": ");
      resp.append(header.getValue());
      resp.append("\r\n");
    }
  }
  resp.append("\r\n");
  getOutputStream().write(resp.toString().getBytes());
  flush();
}
