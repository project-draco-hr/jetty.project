{
  _caseInsensitive=ignoreCase;
  _map=new TreeMap<Object,O>(new Comparator<Object>(){
    @Override public int compare(    Object o1,    Object o2){
      String s1=(o1 instanceof String) ? (String)o1 : null;
      ByteBuffer b1=(o1 instanceof ByteBuffer) ? (ByteBuffer)o1 : null;
      if (s1 == null && b1 == null)       s1=o1.toString();
      String s2=(String)o2;
      int n1=s1 == null ? b1.remaining() : s1.length();
      int n2=s2.length();
      int min=Math.min(n1,n2);
      for (int i=0; i < min; i++) {
        char c1=s1 == null ? (char)b1.get(b1.position() + i) : s1.charAt(i);
        char c2=s2.charAt(i);
        if (c1 != c2) {
          if (ignoreCase) {
            c1=Character.toUpperCase(c1);
            c2=Character.toUpperCase(c2);
            if (c1 != c2) {
              c1=Character.toLowerCase(c1);
              c2=Character.toLowerCase(c2);
              if (c1 != c2) {
                return c1 - c2;
              }
            }
          }
 else           return c1 - c2;
        }
      }
      return n1 - n2;
    }
  }
);
}
