{
  File dir=MavenTestingUtils.getTargetFile("test-classes/simple");
  File bigger=new File(dir,"bigger.txt");
  File big=new File(dir,"big.txt");
  try (OutputStream out=new FileOutputStream(bigger)){
    for (int i=0; i < 100; i++) {
      try (InputStream in=new FileInputStream(big)){
        IO.copy(in,out);
      }
     }
  }
   bigger.deleteOnExit();
  LN=System.getProperty("line.separator");
  try (BufferedReader reader=Files.newBufferedReader(big.toPath(),StandardCharsets.UTF_8)){
    char cbuf[]=new char[128];
    reader.read(cbuf);
    String sample=new String(cbuf);
    if (sample.contains("\r\n")) {
      LN="\r\n";
    }
 else     if (sample.contains("\n\r")) {
      LN="\n\r";
    }
 else {
      LN="\n";
    }
  }
   _server=new Server();
  _config=new HttpConfiguration();
  _config.setOutputBufferSize(2048);
  _connector=new ServerConnector(_server,new HttpConnectionFactory(_config));
  _local=new LocalConnector(_server);
  _server.setConnectors(new Connector[]{_connector,_local});
  _resourceHandler=new ResourceHandler();
  _resourceHandler.setMinAsyncContentLength(4096);
  _resourceHandler.setMinMemoryMappedContentLength(8192);
  _resourceHandler.setResourceBase(MavenTestingUtils.getTargetFile("test-classes/simple").getAbsolutePath());
  _contextHandler=new ContextHandler("/resource");
  _contextHandler.setHandler(_resourceHandler);
  _server.setHandler(_contextHandler);
  _server.start();
}
