{
  Socket socket=new Socket("localhost",__connector.getLocalPort());
  OutputStream output=socket.getOutputStream();
  output.write(("GET /chat HTTP/1.1\r\n" + "Host: server.example.com\r\n" + "Upgrade: websocket\r\n"+ "Connection: Upgrade\r\n"+ "Sec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ==\r\n"+ "Sec-WebSocket-Origin: http://example.com\r\n"+ "Sec-WebSocket-Protocol: aggregate\r\n"+ "Sec-WebSocket-Version: " + WebSocketConnectionRFC6455.VERSION + "\r\n"+ "\r\n").getBytes("ISO-8859-1"));
  output.flush();
  socket.setSoTimeout(1000);
  InputStream input=socket.getInputStream();
  lookFor("HTTP/1.1 101 Switching Protocols\r\n",input);
  skipTo("Sec-WebSocket-Accept: ",input);
  lookFor("s3pPLMBiTxaQ9kYGzzhZRbK+xOo=",input);
  skipTo("\r\n\r\n",input);
  assertTrue(__serverWebSocket.awaitConnected(1000));
  assertNotNull(__serverWebSocket.connection);
  __serverWebSocket.getConnection().setMaxBinaryMessageSize(1024);
  output.write(WebSocketConnectionRFC6455.OP_BINARY);
  output.write(0x8a);
  output.write(0xff);
  output.write(0xff);
  output.write(0xff);
  output.write(0xff);
  byte[] bytes="0123456789".getBytes(StringUtil.__ISO_8859_1);
  for (int i=0; i < bytes.length; i++)   output.write(bytes[i] ^ 0xff);
  output.flush();
  output.write(0x80);
  output.write(0x8a);
  output.write(0xff);
  output.write(0xff);
  output.write(0xff);
  output.write(0xff);
  for (int i=0; i < bytes.length; i++)   output.write(bytes[i] ^ 0xff);
  output.flush();
  assertEquals(0x80 + WebSocketConnectionRFC6455.OP_BINARY,input.read());
  assertEquals(20,input.read());
  lookFor("01234567890123456789",input);
}
