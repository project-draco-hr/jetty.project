{
synchronized (this) {
    _status=status;
    this.notifyAll();
    try {
switch (status) {
case STATUS_WAITING_FOR_CONNECTION:
        break;
case STATUS_WAITING_FOR_COMMIT:
      break;
case STATUS_SENDING_REQUEST:
    break;
case HttpExchange.STATUS_WAITING_FOR_RESPONSE:
  getEventListener().onRequestCommitted();
break;
case STATUS_PARSING_HEADERS:
break;
case STATUS_PARSING_CONTENT:
getEventListener().onResponseHeaderComplete();
break;
case STATUS_COMPLETED:
getEventListener().onResponseComplete();
break;
case STATUS_EXPIRED:
getEventListener().onExpire();
break;
}
}
 catch (IOException e) {
Log.warn(e);
}
}
}
