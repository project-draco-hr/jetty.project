{
  try {
    int oldStatus=getStatus();
switch (oldStatus) {
case STATUS_START:
switch (newStatus) {
case STATUS_WAITING_FOR_CONNECTION:
case STATUS_WAITING_FOR_COMMIT:
case STATUS_CANCELLING:
        updateStatus(newStatus);
      break;
default :
    throw new IllegalStateException(oldStatus + " => " + newStatus);
}
break;
case STATUS_WAITING_FOR_CONNECTION:
switch (newStatus) {
case STATUS_WAITING_FOR_COMMIT:
case STATUS_CANCELLING:
case STATUS_EXCEPTED:
updateStatus(newStatus);
break;
default :
throw new IllegalStateException(oldStatus + " => " + newStatus);
}
break;
case STATUS_WAITING_FOR_COMMIT:
switch (newStatus) {
case STATUS_SENDING_REQUEST:
case STATUS_CANCELLING:
case STATUS_EXCEPTED:
updateStatus(newStatus);
break;
case STATUS_EXPIRED:
updateStatus(newStatus);
getEventListener().onExpire();
break;
default :
throw new IllegalStateException(oldStatus + " => " + newStatus);
}
break;
case STATUS_SENDING_REQUEST:
switch (newStatus) {
case STATUS_WAITING_FOR_RESPONSE:
updateStatus(newStatus);
getEventListener().onRequestCommitted();
break;
case STATUS_CANCELLING:
case STATUS_EXCEPTED:
updateStatus(newStatus);
break;
case STATUS_EXPIRED:
updateStatus(newStatus);
getEventListener().onExpire();
break;
default :
throw new IllegalStateException(oldStatus + " => " + newStatus);
}
break;
case STATUS_WAITING_FOR_RESPONSE:
switch (newStatus) {
case STATUS_PARSING_HEADERS:
case STATUS_CANCELLING:
case STATUS_EXCEPTED:
updateStatus(newStatus);
break;
case STATUS_EXPIRED:
updateStatus(newStatus);
getEventListener().onExpire();
break;
default :
throw new IllegalStateException(oldStatus + " => " + newStatus);
}
break;
case STATUS_PARSING_HEADERS:
switch (newStatus) {
case STATUS_PARSING_CONTENT:
updateStatus(newStatus);
getEventListener().onResponseHeaderComplete();
break;
case STATUS_CANCELLING:
case STATUS_EXCEPTED:
updateStatus(newStatus);
break;
case STATUS_EXPIRED:
updateStatus(newStatus);
getEventListener().onExpire();
break;
default :
throw new IllegalStateException(oldStatus + " => " + newStatus);
}
break;
case STATUS_PARSING_CONTENT:
switch (newStatus) {
case STATUS_COMPLETED:
updateStatus(newStatus);
getEventListener().onResponseComplete();
break;
case STATUS_CANCELLING:
case STATUS_EXCEPTED:
updateStatus(newStatus);
break;
case STATUS_EXPIRED:
updateStatus(newStatus);
getEventListener().onExpire();
break;
default :
throw new IllegalStateException(oldStatus + " => " + newStatus);
}
break;
case STATUS_COMPLETED:
switch (newStatus) {
case STATUS_START:
updateStatus(newStatus);
break;
case STATUS_CANCELLING:
case STATUS_EXPIRED:
break;
default :
throw new IllegalStateException(oldStatus + " => " + newStatus);
}
break;
case STATUS_CANCELLING:
switch (newStatus) {
case STATUS_CANCELLED:
updateStatus(newStatus);
break;
default :
break;
}
break;
case STATUS_EXCEPTED:
case STATUS_EXPIRED:
case STATUS_CANCELLED:
switch (newStatus) {
case STATUS_START:
updateStatus(newStatus);
break;
default :
throw new IllegalStateException(oldStatus + " => " + newStatus);
}
break;
default :
throw new AssertionError(oldStatus + " => " + newStatus);
}
}
 catch (IOException x) {
Log.warn(x);
}
}
