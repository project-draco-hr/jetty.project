{
  boolean abortRequest;
  boolean abortResponse;
synchronized (this) {
    abortRequest=completeRequest(failure);
    abortResponse=completeResponse(failure);
  }
  if (LOG.isDebugEnabled())   LOG.debug("Failed {}: req={}/rsp={} {}",this,abortRequest,abortResponse,failure);
  if (!abortRequest && !abortResponse)   return false;
  if (destination.remove(this)) {
    if (LOG.isDebugEnabled())     LOG.debug("Aborting while queued {}: {}",this,failure);
    notifyFailureComplete(failure);
    return true;
  }
  HttpChannel channel=getHttpChannel();
  if (channel == null) {
    if (LOG.isDebugEnabled())     LOG.debug("Aborted before association {}: {}",this,failure);
    notifyFailureComplete(failure);
    return true;
  }
  boolean aborted=channel.abort(this,abortRequest ? failure : null,abortResponse ? failure : null);
  if (LOG.isDebugEnabled())   LOG.debug("Aborted ({}) while active {}: {}",aborted,this,failure);
  return aborted;
}
