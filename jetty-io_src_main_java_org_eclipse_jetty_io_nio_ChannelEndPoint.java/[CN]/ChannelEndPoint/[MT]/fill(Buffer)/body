{
  if (_ishut)   return -1;
  Buffer buf=buffer.buffer();
  int len=0;
  if (buf instanceof NIOBuffer) {
    final NIOBuffer nbuf=(NIOBuffer)buf;
    final ByteBuffer bbuf=nbuf.getByteBuffer();
    try {
synchronized (bbuf) {
        try {
          bbuf.position(buffer.putIndex());
          len=_channel.read(bbuf);
        }
  finally {
          buffer.setPutIndex(bbuf.position());
          bbuf.position(0);
        }
      }
      if (len < 0 && isOpen()) {
        if (!isInputShutdown())         shutdownInput();
        if (isOutputShutdown())         _channel.close();
      }
    }
 catch (    IOException x) {
      LOG.debug("Exception while filling",x);
      try {
        if (_channel.isOpen())         _channel.close();
      }
 catch (      Exception xx) {
        LOG.ignore(xx);
      }
      if (len > 0)       throw x;
      len=-1;
    }
  }
 else {
    throw new IOException("Not Implemented");
  }
  return len;
}
