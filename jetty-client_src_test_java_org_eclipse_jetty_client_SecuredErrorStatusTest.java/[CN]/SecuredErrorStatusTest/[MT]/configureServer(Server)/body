{
  setProtocol("http");
  _testRealm=new Realm(){
    public String getId(){
      return "MyRealm";
    }
    public String getPrincipal(){
      return "jetty";
    }
    public String getCredentials(){
      return "jetty";
    }
  }
;
  _dummyRealm=new Realm(){
    public String getId(){
      return "MyRealm";
    }
    public String getPrincipal(){
      return "jetty";
    }
    public String getCredentials(){
      return "dummy";
    }
  }
;
  setRealm(_testRealm);
  SelectChannelConnector connector=new SelectChannelConnector();
  server.addConnector(connector);
  LoginService loginService=new HashLoginService("MyRealm","src/test/resources/realm.properties");
  server.addBean(loginService);
  ConstraintSecurityHandler security=new ConstraintSecurityHandler();
  server.setHandler(security);
  Constraint constraint=new Constraint();
  constraint.setName("auth");
  constraint.setAuthenticate(true);
  constraint.setRoles(new String[]{"user","admin"});
  ConstraintMapping mapping=new ConstraintMapping();
  mapping.setPathSpec("/*");
  mapping.setConstraint(constraint);
  Set<String> knownRoles=new HashSet<String>();
  knownRoles.add("user");
  knownRoles.add("admin");
  security.setConstraintMappings(Collections.singletonList(mapping),knownRoles);
  security.setAuthenticator(new BasicAuthenticator());
  security.setLoginService(loginService);
  security.setStrict(false);
  ServletContextHandler root=new ServletContextHandler();
  root.setContextPath("/");
  root.setResourceBase(getBasePath());
  ServletHolder servletHolder=new ServletHolder(new DefaultServlet());
  servletHolder.setInitParameter("gzip","true");
  root.addServlet(servletHolder,"/*");
  Handler status=new StatusHandler();
  Handler test=new TestHandler(getBasePath());
  HandlerCollection handlers=new HandlerCollection();
  handlers.setHandlers(new Handler[]{status,test,root});
  security.setHandler(handlers);
}
