{
  _in=new HttpInput(new HttpChannelState(new HttpChannel(null,new HttpConfiguration(),null,null){
    @Override public void asyncReadFillInterested(){
      _history.add("asyncReadFillInterested");
    }
  }
){
    @Override public void onReadUnready(){
      _history.add("unready");
      super.onReadUnready();
    }
    @Override public boolean onReadPossible(){
      _history.add("onReadPossible");
      return super.onReadPossible();
    }
  }
){
    @Override protected void produceContent() throws IOException {
      _history.add("produceContent " + _fillAndParseSimulate.size());
      for (String s=_fillAndParseSimulate.poll(); s != null; s=_fillAndParseSimulate.poll()) {
        if ("_EOF_".equals(s))         _in.eof();
 else         _in.addContent(new TContent(s));
      }
    }
    @Override protected void blockForContent() throws IOException {
      _history.add("blockForContent");
      super.blockForContent();
    }
  }
;
}
