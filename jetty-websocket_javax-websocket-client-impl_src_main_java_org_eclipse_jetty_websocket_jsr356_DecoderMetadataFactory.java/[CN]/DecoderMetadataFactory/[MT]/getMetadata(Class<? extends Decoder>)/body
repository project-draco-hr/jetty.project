{
  LOG.debug("getDecoder({})",decoder);
  List<DecoderMetadata> ret=cache.get(decoder);
  if (ret == null) {
    ret=new ArrayList<>();
    if (Decoder.Binary.class.isAssignableFrom(decoder)) {
      Class<?> objType=getDecoderMessageClass(decoder,Decoder.Binary.class);
      ret.add(new DecoderMetadata(objType,decoder,MessageType.BINARY,false));
    }
    if (Decoder.BinaryStream.class.isAssignableFrom(decoder)) {
      Class<?> objType=getDecoderMessageClass(decoder,Decoder.BinaryStream.class);
      ret.add(new DecoderMetadata(objType,decoder,MessageType.BINARY,true));
    }
    if (Decoder.Text.class.isAssignableFrom(decoder)) {
      Class<?> objType=getDecoderMessageClass(decoder,Decoder.Text.class);
      ret.add(new DecoderMetadata(objType,decoder,MessageType.TEXT,false));
    }
    if (Decoder.TextStream.class.isAssignableFrom(decoder)) {
      Class<?> objType=getDecoderMessageClass(decoder,Decoder.TextStream.class);
      ret.add(new DecoderMetadata(objType,decoder,MessageType.TEXT,true));
    }
    if (ret.size() <= 0) {
      throw new InvalidSignatureException("Not a valid Decoder class: " + decoder.getName());
    }
    LOG.debug("New Hit [{} entries]",ret.size());
    cache.put(decoder,ret);
  }
 else {
    LOG.debug("From Cache");
  }
  return ret;
}
