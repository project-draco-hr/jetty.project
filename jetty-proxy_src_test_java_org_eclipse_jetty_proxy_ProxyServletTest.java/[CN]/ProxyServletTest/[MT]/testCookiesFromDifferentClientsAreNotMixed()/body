{
  final String name="biscuit";
  startServer(new HttpServlet(){
    @Override protected void doGet(    HttpServletRequest req,    HttpServletResponse resp) throws ServletException, IOException {
      if (req.getHeader("Via") != null)       resp.addHeader(PROXIED_HEADER,"true");
      String value=req.getHeader(name);
      if (value != null) {
        Cookie cookie=new Cookie(name,value);
        cookie.setMaxAge(3600);
        resp.addCookie(cookie);
      }
 else {
        Cookie[] cookies=req.getCookies();
        Assert.assertEquals(1,cookies.length);
      }
    }
  }
);
  startProxy();
  startClient();
  String value1="1";
  ContentResponse response1=client.newRequest("localhost",serverConnector.getLocalPort()).header(name,value1).timeout(5,TimeUnit.SECONDS).send();
  Assert.assertEquals(200,response1.getStatus());
  Assert.assertTrue(response1.getHeaders().containsKey(PROXIED_HEADER));
  List<HttpCookie> cookies=client.getCookieStore().getCookies();
  Assert.assertEquals(1,cookies.size());
  Assert.assertEquals(name,cookies.get(0).getName());
  Assert.assertEquals(value1,cookies.get(0).getValue());
  HttpClient client2=prepareClient();
  try {
    String value2="2";
    ContentResponse response2=client2.newRequest("localhost",serverConnector.getLocalPort()).header(name,value2).timeout(5,TimeUnit.SECONDS).send();
    Assert.assertEquals(200,response2.getStatus());
    Assert.assertTrue(response2.getHeaders().containsKey(PROXIED_HEADER));
    cookies=client2.getCookieStore().getCookies();
    Assert.assertEquals(1,cookies.size());
    Assert.assertEquals(name,cookies.get(0).getName());
    Assert.assertEquals(value2,cookies.get(0).getValue());
    ContentResponse response3=client.newRequest("localhost",serverConnector.getLocalPort()).timeout(5,TimeUnit.SECONDS).send();
    Assert.assertEquals(200,response3.getStatus());
    Assert.assertTrue(response3.getHeaders().containsKey(PROXIED_HEADER));
  }
  finally {
    client2.stop();
  }
}
