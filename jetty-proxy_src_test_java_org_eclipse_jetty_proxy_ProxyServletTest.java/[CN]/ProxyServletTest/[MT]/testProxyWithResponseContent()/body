{
  prepareProxy(new ProxyServlet());
  HttpClient result=new HttpClient();
  result.getProxyConfiguration().getProxies().add(new HttpProxy("localhost",proxyConnector.getLocalPort()));
  QueuedThreadPool threadPool=new QueuedThreadPool();
  threadPool.setName("foo");
  threadPool.setMaxThreads(20);
  result.setExecutor(threadPool);
  result.start();
  ContentResponse[] responses=new ContentResponse[10];
  final byte[] content=new byte[1024];
  Arrays.fill(content,(byte)'A');
  prepareServer(new HttpServlet(){
    @Override protected void doGet(    HttpServletRequest req,    HttpServletResponse resp) throws ServletException, IOException {
      if (req.getHeader("Via") != null)       resp.addHeader(PROXIED_HEADER,"true");
      resp.getOutputStream().write(content);
    }
  }
);
  for (int i=0; i < 10; ++i) {
    responses[i]=result.newRequest("localhost",serverConnector.getLocalPort()).timeout(5,TimeUnit.SECONDS).send();
  }
  for (int i=0; i < 10; ++i) {
    Assert.assertEquals(200,responses[i].getStatus());
    Assert.assertTrue(responses[i].getHeaders().containsKey(PROXIED_HEADER));
    Assert.assertArrayEquals(content,responses[i].getContent());
  }
}
