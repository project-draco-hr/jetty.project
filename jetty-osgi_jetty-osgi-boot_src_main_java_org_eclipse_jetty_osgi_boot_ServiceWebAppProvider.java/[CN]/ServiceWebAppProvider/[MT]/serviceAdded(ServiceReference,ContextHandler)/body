{
  if (context == null || !(context instanceof WebAppContext))   return false;
  WebAppContext webApp=(WebAppContext)context;
  Dictionary properties=new Hashtable<String,String>();
  String contextPath=(String)serviceRef.getProperty(OSGiWebappConstants.RFC66_WEB_CONTEXTPATH);
  if (contextPath == null)   contextPath=(String)serviceRef.getProperty(OSGiWebappConstants.SERVICE_PROP_CONTEXT_PATH);
  if (contextPath == null)   return false;
  String base=(String)serviceRef.getProperty(OSGiWebappConstants.JETTY_WAR_FOLDER_PATH);
  if (base == null)   base=(String)serviceRef.getProperty(OSGiWebappConstants.SERVICE_PROP_WAR);
  if (base == null)   return false;
  String webdefaultXml=(String)serviceRef.getProperty(OSGiWebappConstants.JETTY_DEFAULT_WEB_XML_PATH);
  if (webdefaultXml == null)   webdefaultXml=(String)serviceRef.getProperty(OSGiWebappConstants.SERVICE_PROP_DEFAULT_WEB_XML_PATH);
  if (webdefaultXml != null)   properties.put(OSGiWebappConstants.JETTY_DEFAULT_WEB_XML_PATH,webdefaultXml);
  String webXml=(String)serviceRef.getProperty(OSGiWebappConstants.JETTY_WEB_XML_PATH);
  if (webXml == null)   webXml=(String)serviceRef.getProperty(OSGiWebappConstants.SERVICE_PROP_WEB_XML_PATH);
  if (webXml != null)   properties.put(OSGiWebappConstants.JETTY_WEB_XML_PATH,webXml);
  String extraClassPath=(String)serviceRef.getProperty(OSGiWebappConstants.JETTY_EXTRA_CLASSPATH);
  if (extraClassPath == null)   extraClassPath=(String)serviceRef.getProperty(OSGiWebappConstants.SERVICE_PROP_EXTRA_CLASSPATH);
  if (extraClassPath != null)   properties.put(OSGiWebappConstants.JETTY_EXTRA_CLASSPATH,extraClassPath);
  String bundleInstallOverride=(String)serviceRef.getProperty(OSGiWebappConstants.JETTY_BUNDLE_INSTALL_LOCATION_OVERRIDE);
  if (bundleInstallOverride == null)   bundleInstallOverride=(String)serviceRef.getProperty(OSGiWebappConstants.SERVICE_PROP_BUNDLE_INSTALL_LOCATION_OVERRIDE);
  if (bundleInstallOverride != null)   properties.put(OSGiWebappConstants.JETTY_BUNDLE_INSTALL_LOCATION_OVERRIDE,bundleInstallOverride);
  String requiredTlds=(String)serviceRef.getProperty(OSGiWebappConstants.REQUIRE_TLD_BUNDLE);
  if (requiredTlds == null)   requiredTlds=(String)serviceRef.getProperty(OSGiWebappConstants.SERVICE_PROP_REQUIRE_TLD_BUNDLE);
  if (requiredTlds != null)   properties.put(OSGiWebappConstants.REQUIRE_TLD_BUNDLE,requiredTlds);
  ClassLoader cl=Thread.currentThread().getContextClassLoader();
  Thread.currentThread().setContextClassLoader(getServerInstanceWrapper().getParentClassLoaderForWebapps());
  try {
    String originId=getOriginId(serviceRef.getBundle(),base);
    BundleApp app=new BundleApp(getDeploymentManager(),this,serviceRef.getBundle(),properties,originId);
    app.setContextPath(contextPath);
    app.setWebAppPath(base);
    app.setWebAppContext(webApp);
    _serviceMap.put(serviceRef,app);
    getDeploymentManager().addApp(app);
    return true;
  }
  finally {
    Thread.currentThread().setContextClassLoader(cl);
  }
}
