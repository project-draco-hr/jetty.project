{
  ServletConfig config=getServletConfig();
  HttpClient client=newHttpClient();
  client.setFollowRedirects(false);
  client.setCookieStore(new HttpCookieStore.Empty());
  Executor executor;
  String value=config.getInitParameter("maxThreads");
  if (value == null || "-".equals(value)) {
    executor=(Executor)getServletContext().getAttribute("org.eclipse.jetty.server.Executor");
    if (executor == null)     throw new IllegalStateException("No server executor for proxy");
  }
 else {
    QueuedThreadPool qtp=new QueuedThreadPool(Integer.parseInt(value));
    String servletName=config.getServletName();
    int dot=servletName.lastIndexOf('.');
    if (dot >= 0)     servletName=servletName.substring(dot + 1);
    qtp.setName(servletName);
    executor=qtp;
  }
  client.setExecutor(executor);
  value=config.getInitParameter("maxConnections");
  if (value == null)   value="256";
  client.setMaxConnectionsPerDestination(Integer.parseInt(value));
  value=config.getInitParameter("idleTimeout");
  if (value == null)   value="30000";
  client.setIdleTimeout(Long.parseLong(value));
  value=config.getInitParameter("timeout");
  if (value == null)   value="60000";
  _timeout=Long.parseLong(value);
  value=config.getInitParameter("requestBufferSize");
  if (value != null)   client.setRequestBufferSize(Integer.parseInt(value));
  value=config.getInitParameter("responseBufferSize");
  if (value != null)   client.setResponseBufferSize(Integer.parseInt(value));
  try {
    client.start();
    client.getContentDecoderFactories().clear();
    return client;
  }
 catch (  Exception x) {
    throw new ServletException(x);
  }
}
