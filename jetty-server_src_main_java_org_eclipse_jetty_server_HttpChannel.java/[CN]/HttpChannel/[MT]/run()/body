{
  LOG.debug("{} handle enter",this);
  setCurrentHttpChannel(this);
  String threadName=null;
  if (LOG.isDebugEnabled()) {
    threadName=Thread.currentThread().getName();
    Thread.currentThread().setName(threadName + " - " + _uri);
  }
  try {
    boolean handling=_state.handling();
    while (handling && getServer().isRunning()) {
      try {
        _request.setHandled(false);
        _response.getHttpOutput().reopen();
        if (_state.isInitial()) {
          _request.setDispatcherType(DispatcherType.REQUEST);
          getHttpConfiguration().customize(_request);
          getServer().handle(this);
        }
 else {
          _request.setDispatcherType(DispatcherType.ASYNC);
          getServer().handleAsync(this);
        }
      }
 catch (      ContinuationThrowable e) {
        LOG.ignore(e);
      }
catch (      EofException e) {
        LOG.debug(e);
        _state.error(e);
        _request.setHandled(true);
      }
catch (      Throwable e) {
        LOG.warn(String.valueOf(_uri),e);
        _state.error(e);
        _request.setHandled(true);
        handleError(e);
      }
 finally {
        handling=!_state.unhandle();
      }
    }
  }
  finally {
    if (threadName != null && LOG.isDebugEnabled())     Thread.currentThread().setName(threadName);
    setCurrentHttpChannel(null);
    if (_state.isCompleting()) {
      try {
        _state.completed();
        if (_expect100Continue) {
          LOG.debug("100 continues not sent");
          _expect100Continue=false;
          if (!_response.isCommitted())           _response.getHttpFields().add(HttpHeader.CONNECTION,HttpHeaderValue.CLOSE.toString());
 else           LOG.warn("Can't close non-100 response");
        }
        if (!_response.isCommitted() && !_request.isHandled())         _response.sendError(404);
        _response.complete();
      }
 catch (      EofException e) {
        LOG.debug(e);
      }
catch (      Exception e) {
        LOG.warn(e);
      }
 finally {
        _request.setHandled(true);
        _transport.httpChannelCompleted();
      }
    }
    LOG.debug("{} handle exit",this);
  }
}
