{
  LOG.debug("{} handle enter",this);
  setCurrentHttpChannel(this);
  String threadName=null;
  if (LOG.isDebugEnabled()) {
    threadName=Thread.currentThread().getName();
    Thread.currentThread().setName(threadName + " - " + _uri);
  }
  HttpChannelState.Action action=_state.handling();
  loop:   while (action.ordinal() < HttpChannelState.Action.WAIT.ordinal() && getServer().isRunning()) {
    try {
      LOG.debug("{} action {}",this,action);
switch (action) {
case REQUEST_DISPATCH:
        _request.setHandled(false);
      _response.getHttpOutput().reopen();
    _request.setTimeStamp(System.currentTimeMillis());
  _request.setDispatcherType(DispatcherType.REQUEST);
for (HttpConfiguration.Customizer customizer : _configuration.getCustomizers()) customizer.customize(getConnector(),_configuration,_request);
getServer().handle(this);
break;
case ASYNC_DISPATCH:
_request.setHandled(false);
_response.getHttpOutput().reopen();
_request.setDispatcherType(DispatcherType.ASYNC);
getServer().handleAsync(this);
break;
case ASYNC_EXPIRED:
_request.setHandled(false);
_response.getHttpOutput().reopen();
_request.setDispatcherType(DispatcherType.ERROR);
_request.setAttribute(RequestDispatcher.ERROR_STATUS_CODE,new Integer(500));
_request.setAttribute(RequestDispatcher.ERROR_MESSAGE,"Async Timeout");
_request.setAttribute(RequestDispatcher.ERROR_REQUEST_URI,_request.getRequestURI());
_response.setStatusWithReason(500,"Async Timeout");
getServer().handleAsync(this);
break;
case READ_CALLBACK:
{
ContextHandler handler=_state.getContextHandler();
if (handler != null) handler.handle(_request.getHttpInput());
 else _request.getHttpInput().run();
break;
}
case WRITE_CALLBACK:
{
ContextHandler handler=_state.getContextHandler();
if (handler != null) handler.handle(_response.getHttpOutput());
 else _response.getHttpOutput().run();
break;
}
default :
break loop;
}
}
 catch (Error e) {
if ("ContinuationThrowable".equals(e.getClass().getSimpleName())) LOG.ignore(e);
 else throw e;
}
catch (Exception e) {
if (e instanceof EofException) LOG.debug(e);
 else LOG.warn(String.valueOf(_uri),e);
_state.error(e);
_request.setHandled(true);
handleException(e);
}
 finally {
action=_state.unhandle();
}
}
if (threadName != null && LOG.isDebugEnabled()) Thread.currentThread().setName(threadName);
setCurrentHttpChannel(null);
if (action == Action.COMPLETE) {
try {
_state.completed();
if (!_response.isCommitted() && !_request.isHandled()) _response.sendError(404);
 else _response.closeOutput();
}
 catch (EofException|ClosedChannelException e) {
LOG.debug(e);
}
catch (Exception e) {
LOG.warn("complete failed",e);
}
 finally {
_request.setHandled(true);
_transport.completed();
}
}
LOG.debug("{} handle exit, result {}",this,action);
return action != Action.WAIT;
}
