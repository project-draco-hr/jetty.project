{
  try {
    _request.setAttribute(RequestDispatcher.ERROR_EXCEPTION,x);
    _request.setAttribute(RequestDispatcher.ERROR_EXCEPTION_TYPE,x.getClass());
    if (_state.isSuspended()) {
      HttpFields fields=new HttpFields();
      fields.add(HttpHeader.CONNECTION,HttpHeaderValue.CLOSE);
      MetaData.Response info=new MetaData.Response(_request.getHttpVersion(),HttpStatus.INTERNAL_SERVER_ERROR_500,null,fields,0);
      boolean committed=sendResponse(info,null,true);
      if (!committed)       LOG.warn("Could not send response error 500: " + x);
      _request.getAsyncContext().complete();
    }
 else     if (isCommitted()) {
      abort(x);
      if (!(x instanceof EofException))       LOG.warn("Could not send response error 500: " + x);
    }
 else {
      _response.setHeader(HttpHeader.CONNECTION.asString(),HttpHeaderValue.CLOSE.asString());
      if (x instanceof BadMessageException) {
        BadMessageException bme=(BadMessageException)x;
        _response.sendError(bme.getCode(),bme.getReason());
      }
 else       _response.sendError(500,x.getClass().toString());
    }
  }
 catch (  IOException e) {
    LOG.debug("Could not commit response error 500",e);
  }
}
