{
  scanner.watch(project.getFile().toPath());
  File webInfDir=new File(war,"WEB-INF");
  scanner.watch(new File(webInfDir,"web.xml").toPath());
  File jettyWebXmlFile=findJettyWebXmlFile(webInfDir);
  if (jettyWebXmlFile != null)   scanner.watch(jettyWebXmlFile.toPath());
  File jettyEnvXmlFile=new File(webInfDir,"jetty-env.xml");
  if (jettyEnvXmlFile.exists())   scanner.watch(jettyEnvXmlFile.toPath());
  PathWatcher.Config classesConfig=new PathWatcher.Config(new File(webInfDir,"classes").toPath());
  classesConfig.setRecurseDepth(PathWatcher.Config.UNLIMITED_DEPTH);
  scanner.watch(classesConfig);
  PathWatcher.Config libConfig=new PathWatcher.Config(new File(webInfDir,"lib").toPath());
  libConfig.setRecurseDepth(PathWatcher.Config.UNLIMITED_DEPTH);
  scanner.watch(libConfig);
  scanner.addListener(new PathWatcher.EventListListener(){
    @Override public void onPathWatchEvents(    List<PathWatchEvent> events){
      try {
        boolean reconfigure=false;
        for (        PathWatchEvent e : events) {
          if (e.getPath().equals(project.getFile().toPath())) {
            reconfigure=true;
            break;
          }
        }
        restartWebApp(reconfigure);
      }
 catch (      Exception e) {
        getLog().error("Error reconfiguring/restarting webapp after change in watched files",e);
      }
    }
  }
);
}
