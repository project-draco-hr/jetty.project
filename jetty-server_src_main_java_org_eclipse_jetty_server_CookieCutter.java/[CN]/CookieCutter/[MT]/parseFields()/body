{
  Object cookies=null;
  int version=0;
  for (int f=0; f < _added; f++) {
    String hdr=_fields[f];
    String name=null;
    String value=null;
    Cookie cookie=null;
    byte state=STATE_NAME;
    for (int i=0, tokenstart=0, length=hdr.length(); i < length; i++) {
      char c=hdr.charAt(i);
switch (c) {
case ',':
case ';':
switch (state) {
case STATE_DELIMITER:
          state=STATE_NAME;
        tokenstart=i + 1;
      break;
case STATE_UNQUOTED_VALUE:
    state=STATE_NAME;
  value=hdr.substring(tokenstart,i).trim();
if (_request != null && _request.isRequestedSessionIdFromURL()) value=URIUtil.decodePath(value);
tokenstart=i + 1;
break;
case STATE_NAME:
name=hdr.substring(tokenstart,i);
value="";
tokenstart=i + 1;
break;
case STATE_VALUE:
state=STATE_NAME;
value="";
tokenstart=i + 1;
break;
}
break;
case '=':
switch (state) {
case STATE_NAME:
state=STATE_VALUE;
name=hdr.substring(tokenstart,i);
tokenstart=i + 1;
break;
case STATE_VALUE:
state=STATE_UNQUOTED_VALUE;
tokenstart=i;
break;
}
break;
case '"':
switch (state) {
case STATE_VALUE:
state=STATE_QUOTED_VALUE;
tokenstart=i + 1;
break;
case STATE_QUOTED_VALUE:
state=STATE_DELIMITER;
value=hdr.substring(tokenstart,i);
break;
}
break;
case ' ':
case '\t':
break;
default :
switch (state) {
case STATE_VALUE:
state=STATE_UNQUOTED_VALUE;
tokenstart=i;
break;
case STATE_DELIMITER:
state=STATE_NAME;
tokenstart=i;
break;
}
}
if (i + 1 == length) {
switch (state) {
case STATE_UNQUOTED_VALUE:
value=hdr.substring(tokenstart).trim();
if (_request != null && _request.isRequestedSessionIdFromURL()) value=URIUtil.decodePath(value);
break;
case STATE_NAME:
name=hdr.substring(tokenstart);
value="";
break;
case STATE_VALUE:
value="";
break;
}
}
if (name != null && value != null) {
name=name.trim();
try {
if (name.startsWith("$")) {
String lowercaseName=name.toLowerCase();
if ("$path".equals(lowercaseName)) {
cookie.setPath(value);
}
 else if ("$domain".equals(lowercaseName)) {
cookie.setDomain(value);
}
 else if ("$version".equals(lowercaseName)) {
version=Integer.parseInt(value);
}
}
 else {
cookie=new Cookie(name,value);
if (version > 0) {
cookie.setVersion(version);
}
cookies=LazyList.add(cookies,cookie);
}
}
 catch (Exception e) {
Log.ignore(e);
}
name=null;
value=null;
}
}
}
int l=LazyList.size(cookies);
if (l > 0) {
if (_cookies != null && _cookies.length == l) {
for (int i=0; i < l; i++) _cookies[i]=(Cookie)LazyList.get(cookies,i);
}
 else _cookies=(Cookie[])LazyList.toArray(cookies,Cookie.class);
}
_added=0;
_dirty=false;
}
