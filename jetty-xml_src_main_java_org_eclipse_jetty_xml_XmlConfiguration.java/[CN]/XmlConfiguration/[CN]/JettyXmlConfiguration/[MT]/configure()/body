{
  Class<?> oClass=nodeClass(_root);
  String id=_root.getAttribute("id");
  Object obj=id == null ? null : _configuration.getIdMap().get(id);
  int index=0;
  if (obj == null && oClass != null) {
    index=_root.size();
    Map<String,Object> namedArgMap=new HashMap<>();
    List<Object> arguments=new LinkedList<>();
    for (int i=0; i < _root.size(); i++) {
      Object o=_root.get(i);
      if (o instanceof String) {
        continue;
      }
      XmlParser.Node node=(XmlParser.Node)o;
      if (!(node.getTag().equals("Arg"))) {
        index=i;
        break;
      }
 else {
        String namedAttribute=node.getAttribute("name");
        Object value=value(obj,(XmlParser.Node)o);
        if (namedAttribute != null)         namedArgMap.put(namedAttribute,value);
        arguments.add(value);
      }
    }
    try {
      if (namedArgMap.size() > 0)       obj=TypeUtil.construct(oClass,arguments.toArray(),namedArgMap);
 else       obj=TypeUtil.construct(oClass,arguments.toArray());
    }
 catch (    NoSuchMethodException x) {
      throw new IllegalStateException(String.format("No constructor %s(%s,%s) in %s",oClass,arguments,namedArgMap,_url));
    }
  }
  _configuration.initializeDefaults(obj);
  configure(obj,_root,index);
  return obj;
}
