{
  AttrOrElementNode aoeNode=new AttrOrElementNode(obj,node,"Id","Class","Arg");
  String id=aoeNode.getString("Id");
  String clazz=aoeNode.getString("Class");
  List<XmlParser.Node> argNodes=aoeNode.getNodes("Arg");
  if (LOG.isDebugEnabled())   LOG.debug("XML new " + clazz);
  Class<?> oClass=Loader.loadClass(XmlConfiguration.class,clazz);
  Map<String,Object> namedArgMap=new HashMap<>();
  List<Object> arguments=new LinkedList<>();
  for (  XmlParser.Node child : argNodes) {
    String namedAttribute=child.getAttribute("name");
    Object value=value(obj,child);
    if (namedAttribute != null) {
      namedArgMap.put(namedAttribute,value);
    }
    arguments.add(value);
  }
  Object nobj;
  try {
    if (namedArgMap.size() > 0) {
      LOG.debug("using named mapping");
      nobj=TypeUtil.construct(oClass,arguments.toArray(),namedArgMap);
    }
 else {
      LOG.debug("using normal mapping");
      nobj=TypeUtil.construct(oClass,arguments.toArray());
    }
  }
 catch (  NoSuchMethodException e) {
    throw new IllegalStateException("No suitable constructor: " + node + " on "+ obj);
  }
  if (id != null)   _configuration.getIdMap().put(id,nobj);
  _configuration.initializeDefaults(nobj);
  configure(nobj,node,aoeNode.getNext());
  return nobj;
}
