{
  final AtomicReference<Throwable> exception=new AtomicReference<>();
  AccessController.doPrivileged(new PrivilegedAction<Object>(){
    public Object run(){
      try {
        Properties properties=null;
        try {
          Class<?> config=XmlConfiguration.class.getClassLoader().loadClass("org.eclipse.jetty.start.Config");
          properties=(Properties)config.getMethod("getProperties").invoke(null);
          LOG.debug("org.eclipse.jetty.start.Config properties = {}",properties);
        }
 catch (        NoClassDefFoundError|ClassNotFoundException e) {
          LOG.ignore(e);
        }
catch (        Exception e) {
          LOG.warn(e);
        }
        if (properties == null) {
          properties=new Properties();
          Enumeration<?> ensysprop=System.getProperties().propertyNames();
          while (ensysprop.hasMoreElements()) {
            String name=(String)ensysprop.nextElement();
            properties.put(name,System.getProperty(name));
          }
        }
        for (int i=0; i < args.length; i++) {
          if (args[i].toLowerCase(Locale.ENGLISH).endsWith(".properties"))           properties.load(Resource.newResource(args[i]).getInputStream());
        }
        XmlConfiguration last=null;
        Object[] obj=new Object[args.length];
        for (int i=0; i < args.length; i++) {
          if (!args[i].toLowerCase(Locale.ENGLISH).endsWith(".properties")) {
            XmlConfiguration configuration=new XmlConfiguration(Resource.newResource(args[i]).getURL());
            if (last != null)             configuration.getIdMap().putAll(last.getIdMap());
            if (properties.size() > 0) {
              Map<String,String> props=new HashMap<>();
              for (              Object key : properties.keySet()) {
                props.put(key.toString(),String.valueOf(properties.get(key)));
              }
              configuration.getProperties().putAll(props);
            }
            obj[i]=configuration.configure();
            last=configuration;
          }
        }
        for (int i=0; i < args.length; i++) {
          if (obj[i] instanceof LifeCycle) {
            LifeCycle lc=(LifeCycle)obj[i];
            if (!lc.isRunning())             lc.start();
          }
        }
      }
 catch (      Exception e) {
        LOG.debug(Log.EXCEPTION,e);
        exception.set(e);
      }
      return null;
    }
  }
);
  Throwable th=exception.get();
  if (th != null) {
    if (th instanceof RuntimeException)     throw (RuntimeException)th;
 else     if (th instanceof Exception)     throw (Exception)th;
 else     if (th instanceof Error)     throw (Error)th;
    throw new Error(th);
  }
}
