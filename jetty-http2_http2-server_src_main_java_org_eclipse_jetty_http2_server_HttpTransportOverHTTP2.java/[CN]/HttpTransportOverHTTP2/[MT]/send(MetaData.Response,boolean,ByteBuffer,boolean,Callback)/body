{
  boolean hasContent=BufferUtil.hasContent(content) && !isHeadRequest;
  if (info != null) {
    int status=info.getStatus();
    boolean informational=HttpStatus.isInformational(status) && status != HttpStatus.SWITCHING_PROTOCOLS_101;
    boolean committed=false;
    if (!informational)     committed=commit.compareAndSet(false,true);
    if (committed || informational) {
      if (hasContent) {
        Callback commitCallback=new Callback.Nested(callback){
          @Override public void succeeded(){
            if (transportCallback.start(callback,false))             send(content,lastContent,transportCallback);
          }
        }
;
        if (transportCallback.start(commitCallback,true))         commit(info,false,transportCallback);
      }
 else {
        if (transportCallback.start(callback,false))         commit(info,lastContent,transportCallback);
      }
    }
 else {
      callback.failed(new IllegalStateException("committed"));
    }
  }
 else {
    if (hasContent || lastContent) {
      if (transportCallback.start(callback,false))       send(content,lastContent,transportCallback);
    }
 else {
      callback.succeeded();
    }
  }
}
