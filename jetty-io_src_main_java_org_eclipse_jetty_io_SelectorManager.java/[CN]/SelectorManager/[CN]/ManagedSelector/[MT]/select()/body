{
  boolean debug=LOG.isDebugEnabled();
  try {
    _state.set(State.CHANGING);
    loop:     while (true) {
switch (_state.get()) {
case CHANGING:
        runChanges();
      if (_state.compareAndSet(State.CHANGING,State.SELECTING))       break loop;
    continue;
case MORE_CHANGES:
  _state.set(State.CHANGING);
continue;
default :
throw new IllegalStateException();
}
}
if (debug) LOG.debug("Selector loop waiting on select");
int selected=_selector.select();
if (debug) LOG.debug("Selector loop woken up from select, {}/{} selected",selected,_selector.keys().size());
_state.set(State.PROCESSING);
Set<SelectionKey> selectedKeys=_selector.selectedKeys();
for (SelectionKey key : selectedKeys) {
if (key.isValid()) {
processKey(key);
}
 else {
if (debug) LOG.debug("Selector loop ignoring invalid key for channel {}",key.channel());
Object attachment=key.attachment();
if (attachment instanceof EndPoint) ((EndPoint)attachment).close();
}
}
selectedKeys.clear();
}
 catch (Exception x) {
if (isRunning()) LOG.warn(x);
 else LOG.ignore(x);
}
}
