{
  boolean debug=LOG.isDebugEnabled();
  try {
    processChanges();
    if (debug)     LOG.debug("Selector loop waiting on select");
    int selected=_selector.select();
    if (debug)     LOG.debug("Selector loop woken up from select, {}/{} selected",selected,_selector.keys().size());
    needsWakeup=false;
    Set<SelectionKey> selectedKeys=_selector.selectedKeys();
    for (    SelectionKey key : selectedKeys) {
      try {
        if (!key.isValid()) {
          if (debug)           LOG.debug("Selector loop ignoring invalid key for channel {}",key.channel());
          continue;
        }
        processKey(key);
      }
 catch (      Exception x) {
        if (isRunning())         LOG.warn(x);
 else         LOG.debug(x);
        execute(new Close(key));
      }
    }
    selectedKeys.clear();
  }
 catch (  ClosedSelectorException x) {
    if (isRunning())     LOG.warn(x);
 else     LOG.ignore(x);
  }
}
