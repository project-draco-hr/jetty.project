{
  try {
    WebSocketPolicy policy=new WebSocketPolicy(WebSocketBehavior.SERVER);
    String max=getInitParameter("maxIdleTime");
    if (max != null) {
      policy.setIdleTimeout(Long.parseLong(max));
    }
    max=getInitParameter("maxMessageSize");
    if (max != null) {
      policy.setMaxMessageSize(Long.parseLong(max));
    }
    max=getInitParameter("inputBufferSize");
    if (max != null) {
      policy.setInputBufferSize(Integer.parseInt(max));
    }
    WebSocketServletFactory baseFactory;
    Iterator<WebSocketServletFactory> factories=ServiceLoader.load(WebSocketServletFactory.class).iterator();
    if (factories.hasNext()) {
      baseFactory=factories.next();
    }
 else {
      @SuppressWarnings("unchecked") Class<WebSocketServletFactory> wssf=(Class<WebSocketServletFactory>)getServletContext().getClass().getClassLoader().loadClass("org.eclipse.jetty.websocket.server.WebSocketServerFactory");
      baseFactory=wssf.newInstance();
    }
    factory=baseFactory.createFactory(policy);
    configure(factory);
    factory.init();
  }
 catch (  Exception x) {
    throw new ServletException(x);
  }
}
