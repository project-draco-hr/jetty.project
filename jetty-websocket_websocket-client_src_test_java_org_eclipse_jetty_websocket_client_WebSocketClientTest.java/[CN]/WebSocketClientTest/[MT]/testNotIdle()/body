{
  WebSocketClientFactory factory=new WebSocketClientFactory();
  WebSocketClient client=factory.newWebSocketClient();
  client.getPolicy().setMaxIdleTime(500);
  TrackingSocket wsocket=new TrackingSocket();
  URI wsUri=new URI("ws://127.0.0.1:" + server.getPort() + "/");
  Future<WebSocketConnection> future=client.connect(wsUri,wsocket);
  ServerConnection ssocket=server.accept();
  ssocket.upgrade();
  WebSocketConnection connection=future.get(250,TimeUnit.MILLISECONDS);
  Assert.assertNotNull(connection);
  wsocket.assertIsOpen();
  byte[] recv=new byte[1024];
  int len=-1;
  for (int i=0; i < 10; i++) {
    Thread.sleep(250);
    connection.write(null,new FutureCallback<Void>(),"Hello");
    len=ssocket.getInputStream().read(recv,0,recv.length);
    Assert.assertTrue(len > 0);
  }
  byte[] send=new byte[]{(byte)0x81,(byte)0x02,(byte)'H',(byte)'i'};
  for (int i=0; i < 10; i++) {
    Thread.sleep(250);
    ssocket.write(send,0,send.length);
    ssocket.flush();
    Assert.assertEquals("Hi",wsocket.messageQueue.poll(1,TimeUnit.SECONDS));
  }
  long start=System.currentTimeMillis();
  ssocket.write(new byte[]{(byte)0x88,(byte)0x02,(byte)4,(byte)87},0,4);
  ssocket.flush();
  wsocket.closeLatch.await(10,TimeUnit.SECONDS);
  Assert.assertTrue((System.currentTimeMillis() - start) < 5000);
  wsocket.assertClose(StatusCode.PROTOCOL,"Invalid close code 1111");
}
