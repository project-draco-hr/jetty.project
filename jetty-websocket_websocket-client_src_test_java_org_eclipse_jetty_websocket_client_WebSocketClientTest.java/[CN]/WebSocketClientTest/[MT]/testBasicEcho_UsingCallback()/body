{
  WebSocketClient client=new WebSocketClient();
  client.start();
  try {
    JettyTrackingSocket cliSock=new JettyTrackingSocket();
    client.getPolicy().setIdleTimeout(10000);
    URI wsUri=server.getWsUri();
    ClientUpgradeRequest request=new ClientUpgradeRequest();
    request.setSubProtocols("echo");
    Future<Session> future=client.connect(cliSock,wsUri,request);
    final IBlockheadServerConnection srvSock=server.accept();
    srvSock.upgrade();
    Session sess=future.get(500,TimeUnit.MILLISECONDS);
    Assert.assertThat("Session",sess,notNullValue());
    Assert.assertThat("Session.open",sess.isOpen(),is(true));
    Assert.assertThat("Session.upgradeRequest",sess.getUpgradeRequest(),notNullValue());
    Assert.assertThat("Session.upgradeResponse",sess.getUpgradeResponse(),notNullValue());
    cliSock.assertWasOpened();
    cliSock.assertNotClosed();
    Assert.assertThat("client.connectionManager.sessions.size",client.getConnectionManager().getSessions().size(),is(1));
    FutureWriteCallback callback=new FutureWriteCallback();
    cliSock.getSession().getRemote().sendString("Hello World!",callback);
    callback.get(1,TimeUnit.SECONDS);
  }
  finally {
    client.stop();
  }
}
