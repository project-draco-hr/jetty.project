{
  final byte[] data=new byte[1000];
  final CountDownLatch latch=new CountDownLatch(1);
  Session session=startClient(version,startHTTPServer(version,new AbstractHandler(){
    @Override public void handle(    String target,    final Request request,    HttpServletRequest httpRequest,    HttpServletResponse httpResponse) throws IOException, ServletException {
      request.setHandled(true);
      if (request.getAttribute(SUSPENDED_ATTRIBUTE) == Boolean.TRUE) {
        OutputStream output=httpResponse.getOutputStream();
        output.write(data);
      }
 else {
        final AsyncContext asyncContext=request.startAsync();
        request.setAttribute(SUSPENDED_ATTRIBUTE,Boolean.TRUE);
        InputStream input=request.getInputStream();
        byte[] buffer=new byte[256];
        int read=0;
        while (read < data.length)         read+=input.read(buffer);
        new Thread(){
          @Override public void run(){
            try {
              TimeUnit.SECONDS.sleep(1);
              asyncContext.dispatch();
              latch.countDown();
            }
 catch (            InterruptedException x) {
              x.printStackTrace();
            }
          }
        }
.start();
      }
    }
  }
,30000),null);
  Fields headers=SPDYTestUtils.createHeaders("localhost",connector.getPort(),version,"POST","/foo");
  final CountDownLatch responseLatch=new CountDownLatch(2);
  Stream stream=session.syn(new SynInfo(5,TimeUnit.SECONDS,headers,false,(byte)0),new StreamFrameListener.Adapter(){
    @Override public void onReply(    Stream stream,    ReplyInfo replyInfo){
      Fields replyHeaders=replyInfo.getHeaders();
      assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).getValue().contains("200"));
      responseLatch.countDown();
    }
    @Override public void onData(    Stream stream,    DataInfo dataInfo){
      if (dataInfo.isClose())       responseLatch.countDown();
    }
  }
);
  stream.data(new BytesDataInfo(data,true));
  assertTrue(latch.await(5,TimeUnit.SECONDS));
  assertTrue(responseLatch.await(5,TimeUnit.SECONDS));
}
