{
  StdErrLog log=StdErrLog.getLogger(HttpChannel.class);
  log.setHideStacks(true);
  Session session=startClient(version,startHTTPServer(version,new AbstractHandler(){
    @Override public void handle(    String target,    Request request,    HttpServletRequest httpRequest,    HttpServletResponse httpResponse) throws IOException, ServletException {
      throw new NullPointerException("thrown_explicitly_by_the_test");
    }
  }
,30000),null);
  Fields headers=SPDYTestUtils.createHeaders("localhost",connector.getPort(),version,"GET","/foo");
  final CountDownLatch replyLatch=new CountDownLatch(1);
  final CountDownLatch latch=new CountDownLatch(1);
  session.syn(new SynInfo(headers,true),new StreamFrameListener.Adapter(){
    private final AtomicInteger replies=new AtomicInteger();
    @Override public void onReply(    Stream stream,    ReplyInfo replyInfo){
      assertEquals(1,replies.incrementAndGet());
      Fields replyHeaders=replyInfo.getHeaders();
      assertTrue(replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).getValue().contains("500"));
      replyLatch.countDown();
      if (replyInfo.isClose())       latch.countDown();
    }
    @Override public void onData(    Stream stream,    DataInfo dataInfo){
      if (dataInfo.isClose())       latch.countDown();
    }
  }
);
  assertTrue(replyLatch.await(5,TimeUnit.SECONDS));
  assertTrue(latch.await(5,TimeUnit.SECONDS));
  log.setHideStacks(false);
}
