{
  final String path="/foo";
  final String data1="a=1&";
  final String data2="b=2";
  final CountDownLatch handlerLatch=new CountDownLatch(1);
  Session session=startClient(version,startHTTPServer(version,new AbstractHandler(){
    @Override public void handle(    String target,    Request request,    HttpServletRequest httpRequest,    HttpServletResponse httpResponse) throws IOException, ServletException {
      request.setHandled(true);
      assertEquals("POST",httpRequest.getMethod());
      assertEquals("1",httpRequest.getParameter("a"));
      assertEquals("2",httpRequest.getParameter("b"));
      handlerLatch.countDown();
    }
  }
,30000),null);
  Fields headers=SPDYTestUtils.createHeaders("localhost",connector.getPort(),version,"POST",path);
  headers.put("content-type","application/x-www-form-urlencoded");
  final CountDownLatch replyLatch=new CountDownLatch(1);
  Stream stream=session.syn(new SynInfo(5,TimeUnit.SECONDS,headers,false,(byte)0),new StreamFrameListener.Adapter(){
    @Override public void onReply(    Stream stream,    ReplyInfo replyInfo){
      assertTrue(replyInfo.isClose());
      Fields replyHeaders=replyInfo.getHeaders();
      assertTrue(replyHeaders.toString(),replyHeaders.get(HTTPSPDYHeader.STATUS.name(version)).value().contains("200"));
      replyLatch.countDown();
    }
  }
);
  stream.data(new StringDataInfo(data1,false));
  stream.data(new StringDataInfo(data2,true));
  assertTrue(handlerLatch.await(5,TimeUnit.SECONDS));
  assertTrue(replyLatch.await(5,TimeUnit.SECONDS));
}
