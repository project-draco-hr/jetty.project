{
  Set<String> result=Collections.<String>emptySet();
  short version=stream.getSession().getVersion();
  if (!isIfModifiedSinceHeaderPresent(requestHeaders) && isValidMethod(requestHeaders.get(HTTPSPDYHeader.METHOD.name(version)).value()) && !isUserAgentBlacklisted(requestHeaders)) {
    String scheme=requestHeaders.get(HTTPSPDYHeader.SCHEME.name(version)).value();
    String host=requestHeaders.get(HTTPSPDYHeader.HOST.name(version)).value();
    String origin=scheme + "://" + host;
    String url=requestHeaders.get(HTTPSPDYHeader.URI.name(version)).value();
    String absoluteURL=origin + url;
    logger.debug("Applying push strategy for {}",absoluteURL);
    if (isMainResource(url,responseHeaders)) {
      MainResource mainResource=getOrCreateMainResource(absoluteURL);
      result=mainResource.getResources();
    }
 else     if (isPushResource(url,responseHeaders)) {
      Fields.Field referrerHeader=requestHeaders.get("referer");
      if (referrerHeader != null) {
        String referrer=referrerHeader.value();
        MainResource mainResource=mainResources.get(referrer);
        if (mainResource == null)         mainResource=getOrCreateMainResource(referrer);
        Set<String> pushResources=mainResource.getResources();
        if (!pushResources.contains(url))         mainResource.addResource(url,origin,referrer);
 else         result=getPushResources(absoluteURL);
      }
    }
    logger.debug("Pushing {} resources for {}: {}",result.size(),absoluteURL,result);
  }
  return result;
}
