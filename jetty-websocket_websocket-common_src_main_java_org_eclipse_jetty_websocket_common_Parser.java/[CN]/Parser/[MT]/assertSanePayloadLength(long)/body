{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Payload Length: {} - {}",len,this);
  }
  if (len > Integer.MAX_VALUE) {
    throw new MessageTooLargeException("[int-sane!] cannot handle payload lengths larger than " + Integer.MAX_VALUE);
  }
switch (frame.getOpCode()) {
case OpCode.CLOSE:
    if (len == 1) {
      throw new ProtocolException("Invalid close frame payload length, [" + payloadLength + "]");
    }
case OpCode.PING:
case OpCode.PONG:
  if (len > ControlFrame.MAX_CONTROL_PAYLOAD) {
    throw new ProtocolException("Invalid control frame payload length, [" + payloadLength + "] cannot exceed ["+ ControlFrame.MAX_CONTROL_PAYLOAD+ "]");
  }
break;
case OpCode.TEXT:
policy.assertValidTextMessageSize((int)len);
break;
case OpCode.BINARY:
policy.assertValidBinaryMessageSize((int)len);
break;
}
}
