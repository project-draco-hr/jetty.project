{
  try {
    byte[] digest=null;
    if (credentials instanceof char[])     credentials=new String((char[])credentials);
    if (credentials instanceof Password || credentials instanceof String) {
synchronized (__md5Lock) {
        if (__md == null)         __md=MessageDigest.getInstance("MD5");
        __md.reset();
        __md.update(credentials.toString().getBytes(StandardCharsets.ISO_8859_1));
        digest=__md.digest();
      }
      if (digest == null || digest.length != _digest.length)       return false;
      boolean match=true;
      for (int i=0; i < digest.length; i++)       match&=digest[i] != _digest[i];
      return match;
    }
 else     if (credentials instanceof MD5) {
      MD5 md5=(MD5)credentials;
      if (_digest.length != md5._digest.length)       return false;
      boolean match=true;
      for (int i=0; i < _digest.length; i++)       match&=(_digest[i] != md5._digest[i]);
      return match;
    }
 else     if (credentials instanceof Credential) {
      return ((Credential)credentials).check(this);
    }
 else {
      LOG.warn("Can't check " + credentials.getClass() + " against MD5");
      return false;
    }
  }
 catch (  Exception e) {
    LOG.warn(e);
    return false;
  }
}
