{
  ServerSocket acceptor=new ServerSocket(0);
  Selector selector=Selector.open();
  SocketChannel client=SocketChannel.open(acceptor.getLocalSocketAddress());
  Socket server=acceptor.accept();
  server.setTcpNoDelay(true);
  client.configureBlocking(false);
  SelectionKey key=client.register(selector,SelectionKey.OP_READ);
  assertTrue(key.isValid());
  assertFalse(key.isReadable());
  assertEquals(0,key.readyOps());
  int selected=selector.selectNow();
  assertEquals(0,selected);
  assertEquals(0,selector.selectedKeys().size());
  assertTrue(key.isValid());
  assertFalse(key.isReadable());
  assertEquals(0,key.readyOps());
  server.getOutputStream().write(42);
  server.getOutputStream().flush();
  selected=selector.selectNow();
  assertEquals(1,selected);
  assertEquals(1,selector.selectedKeys().size());
  assertTrue(key.isValid());
  assertTrue(key.isReadable());
  assertEquals(1,key.readyOps());
  selected=selector.selectNow();
  assertEquals(0,selected);
  assertEquals(1,selector.selectedKeys().size());
  assertTrue(key.isValid());
  assertTrue(key.isReadable());
  assertEquals(1,key.readyOps());
  ByteBuffer buf=ByteBuffer.allocate(1024);
  int len=client.read(buf);
  assertEquals(1,len);
  buf.flip();
  assertEquals(42,buf.get());
  buf.clear();
  assertTrue(key.isValid());
  assertTrue(key.isReadable());
  assertEquals(1,key.readyOps());
  selected=selector.selectNow();
  assertEquals(0,selected);
  assertEquals(1,selector.selectedKeys().size());
  assertTrue(key.isValid());
  assertTrue(key.isReadable());
  assertEquals(1,key.readyOps());
  selector.selectedKeys().clear();
  assertEquals(0,selector.selectedKeys().size());
  assertTrue(key.isValid());
  assertTrue(key.isReadable());
  assertEquals(1,key.readyOps());
  selected=selector.selectNow();
  assertEquals(0,selected);
  assertEquals(0,selector.selectedKeys().size());
  assertTrue(key.isValid());
  assertTrue(key.isReadable());
  assertEquals(1,key.readyOps());
  key.interestOps(SelectionKey.OP_READ | SelectionKey.OP_WRITE);
  selected=selector.selectNow();
  assertEquals(1,selected);
  assertEquals(1,selector.selectedKeys().size());
  assertTrue(key.isValid());
  assertTrue(key.isWritable());
  assertFalse(key.isReadable());
  assertEquals(SelectionKey.OP_WRITE,key.readyOps());
}
