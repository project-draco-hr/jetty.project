{
  Resource resource=null;
  if (isClosed())   throw new IOException("Closed");
  if (super._generator.isWritten())   throw new IllegalStateException("!empty");
  if (content instanceof HttpContent) {
    HttpContent httpContent=(HttpContent)content;
    ByteBuffer contentType=httpContent.getContentType();
    if (contentType != null && !_responseFields.containsKey(HttpHeader.CONTENT_TYPE_BUFFER)) {
      String enc=_response.getSetCharacterEncoding();
      if (enc == null)       _responseFields.add(HttpHeader.CONTENT_TYPE_BUFFER,contentType);
 else {
        if (contentType instanceof CachedBuffer) {
          CachedBuffer content_type=((CachedBuffer)contentType).getAssociate(enc);
          if (content_type != null)           _responseFields.put(HttpHeader.CONTENT_TYPE_BUFFER,content_type);
 else {
            _responseFields.put(HttpHeader.CONTENT_TYPE_BUFFER,contentType + ";charset=" + QuotedStringTokenizer.quoteIfNeeded(enc,";= "));
          }
        }
 else {
          _responseFields.put(HttpHeader.CONTENT_TYPE_BUFFER,contentType + ";charset=" + QuotedStringTokenizer.quoteIfNeeded(enc,";= "));
        }
      }
    }
    if (httpContent.getContentLength() > 0)     _responseFields.putLongField(HttpHeader.CONTENT_LENGTH_BUFFER,httpContent.getContentLength());
    ByteBuffer lm=httpContent.getLastModified();
    long lml=httpContent.getResource().lastModified();
    if (lm != null)     _responseFields.put(HttpHeader.LAST_MODIFIED_BUFFER,lm);
 else     if (httpContent.getResource() != null) {
      if (lml != -1)       _responseFields.putDateField(HttpHeader.LAST_MODIFIED_BUFFER,lml);
    }
    boolean direct=_connector instanceof NIOConnector && ((NIOConnector)_connector).getUseDirectBuffers() && !(_connector instanceof SslConnector);
    content=direct ? httpContent.getDirectBuffer() : httpContent.getIndirectBuffer();
    if (content == null)     content=httpContent.getInputStream();
  }
 else   if (content instanceof Resource) {
    resource=(Resource)content;
    _responseFields.putDateField(HttpHeader.LAST_MODIFIED_BUFFER,resource.lastModified());
    content=resource.getInputStream();
  }
  if (content instanceof ByteBuffer) {
    super._generator.addContent((ByteBuffer)content,Generator.LAST);
    commitResponse(Generator.LAST);
  }
 else   if (content instanceof InputStream) {
    InputStream in=(InputStream)content;
    try {
      int max=super._generator.prepareUncheckedAddContent();
      ByteBuffer buffer=super._generator.getUncheckedBuffer();
      int len=buffer.readFrom(in,max);
      while (len >= 0) {
        super._generator.completeUncheckedAddContent();
        _out.flush();
        max=super._generator.prepareUncheckedAddContent();
        buffer=super._generator.getUncheckedBuffer();
        len=buffer.readFrom(in,max);
      }
      super._generator.completeUncheckedAddContent();
      _out.flush();
    }
  finally {
      if (resource != null)       resource.release();
 else       in.close();
    }
  }
 else   throw new IllegalArgumentException("unknown content type?");
}
