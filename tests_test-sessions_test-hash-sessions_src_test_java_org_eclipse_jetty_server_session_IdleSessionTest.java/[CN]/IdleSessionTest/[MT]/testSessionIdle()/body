{
  String contextPath="";
  String servletMapping="/server";
  int inactivePeriod=200;
  int scavengePeriod=3;
  int idlePeriod=5;
  File storeDir=new File(System.getProperty("java.io.tmpdir"),"idle-test");
  storeDir.deleteOnExit();
  HashTestServer server1=createServer(0,inactivePeriod,scavengePeriod,idlePeriod,storeDir);
  TestServlet servlet=new TestServlet();
  ServletHolder holder=new ServletHolder(servlet);
  ServletContextHandler contextHandler=server1.addContext(contextPath);
  contextHandler.addServlet(holder,servletMapping);
  server1.start();
  int port1=server1.getPort();
  try (StacklessLogging stackless=new StacklessLogging(HashedSession.class)){
    HttpClient client=new HttpClient();
    client.start();
    String url="http://localhost:" + port1 + contextPath+ servletMapping;
    ContentResponse response=client.GET(url + "?action=init");
    assertEquals(HttpServletResponse.SC_OK,response.getStatus());
    String sessionCookie=response.getHeaders().get("Set-Cookie");
    assertTrue(sessionCookie != null);
    sessionCookie=sessionCookie.replaceFirst("(\\W)(P|p)ath=","$1\\$Path=");
    pause(idlePeriod * 2);
    checkSessionIdled(storeDir,getSessionId(sessionCookie));
    Request request=client.newRequest(url + "?action=test");
    request.getHeaders().add("Cookie",sessionCookie);
    ContentResponse response2=request.send();
    assertEquals(HttpServletResponse.SC_OK,response2.getStatus());
    checkSessionDeIdled(storeDir);
    pause(idlePeriod * 2);
    checkSessionIdled(storeDir,getSessionId(sessionCookie));
    File idleFile=getIdleFile(storeDir,getSessionId(sessionCookie));
    assertTrue(idleFile.exists());
    assertTrue(idleFile.delete());
    request=client.newRequest(url + "?action=testfail");
    request.getHeaders().add("Cookie",sessionCookie);
    response2=request.send();
    assertEquals(HttpServletResponse.SC_OK,response2.getStatus());
  }
  finally {
    server1.stop();
    IO.delete(storeDir);
  }
}
