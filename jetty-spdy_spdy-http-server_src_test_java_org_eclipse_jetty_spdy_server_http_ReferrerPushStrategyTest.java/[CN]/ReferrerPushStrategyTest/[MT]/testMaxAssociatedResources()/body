{
  pushStrategy.setMaxAssociatedResources(1);
  Session session=sendMainRequestAndCSSRequest(null,false);
  sendRequest(session,associatedJSRequestHeaders,null,null,false);
  final CountDownLatch mainStreamLatch=new CountDownLatch(2);
  final CountDownLatch pushDataLatch=new CountDownLatch(2);
  final CountDownLatch pushSynHeadersValid=new CountDownLatch(1);
  final CountDownLatch pushResponseHeaders=new CountDownLatch(1);
  Session session2=startClient(version,serverAddress,null);
  session2.syn(new SynInfo(mainRequestHeaders,true),new StreamFrameListener.Adapter(){
    @Override public StreamFrameListener onPush(    Stream stream,    PushInfo pushInfo){
      validateHeaders(pushInfo.getHeaders(),pushSynHeadersValid);
      assertThat("Stream is unidirectional",stream.isUnidirectional(),is(true));
      assertThat("URI header ends with css",pushInfo.getHeaders().get(HTTPSPDYHeader.URI.name(version)).getValue().endsWith("" + ".css"),is(true));
      return new StreamFrameListener.Adapter(){
        @Override public void onHeaders(        Stream stream,        HeadersInfo headersInfo){
          Fields headers=headersInfo.getHeaders();
          if (validateHeader(headers,HTTPSPDYHeader.STATUS.name(version),"200 OK") && validateHeader(headers,HTTPSPDYHeader.VERSION.name(version),"HTTP/1.1") && validateHeader(headers,"content-encoding","gzip"))           pushResponseHeaders.countDown();
        }
        @Override public void onData(        Stream stream,        DataInfo dataInfo){
          dataInfo.consume(dataInfo.length());
          if (dataInfo.isClose())           pushDataLatch.countDown();
        }
      }
;
    }
    @Override public void onReply(    Stream stream,    ReplyInfo replyInfo){
      assertThat("replyInfo.isClose() is false",replyInfo.isClose(),is(false));
      mainStreamLatch.countDown();
    }
    @Override public void onData(    Stream stream,    DataInfo dataInfo){
      dataInfo.consume(dataInfo.length());
      if (dataInfo.isClose())       mainStreamLatch.countDown();
    }
  }
);
  assertThat("Main request reply and/or data received",mainStreamLatch.await(5,TimeUnit.SECONDS),is(true));
  assertThat("Not more than one push is received",pushDataLatch.await(1,TimeUnit.SECONDS),is(false));
  assertThat("Push push headers valid",pushSynHeadersValid.await(5,TimeUnit.SECONDS),is(true));
  assertThat("Push response headers are valid",pushResponseHeaders.await(5,TimeUnit.SECONDS),is(true));
}
