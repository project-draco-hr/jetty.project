{
  InetSocketAddress address=startHTTPServer(version,new AbstractHandler(){
    @Override public void handle(    String target,    Request baseRequest,    HttpServletRequest request,    HttpServletResponse response) throws IOException, ServletException {
      String url=request.getRequestURI();
      PrintWriter output=response.getWriter();
      if (url.endsWith(".html"))       output.print("<html><head/><body>HELLO</body></html>");
      baseRequest.setHandled(true);
    }
  }
,30000);
  Session session1=startClient(version,address,null);
  final CountDownLatch mainResourceLatch=new CountDownLatch(1);
  Fields mainRequestHeaders=createHeadersWithoutReferrer(mainResource);
  session1.syn(new SynInfo(mainRequestHeaders,true),new StreamFrameListener.Adapter(){
    @Override public void onData(    Stream stream,    DataInfo dataInfo){
      dataInfo.consume(dataInfo.length());
      if (dataInfo.isClose())       mainResourceLatch.countDown();
    }
  }
);
  Assert.assertTrue(mainResourceLatch.await(5,TimeUnit.SECONDS));
  final CountDownLatch associatedResourceLatch=new CountDownLatch(1);
  String associatedResource="/home.html";
  Fields associatedRequestHeaders=createHeaders(associatedResource);
  session1.syn(new SynInfo(associatedRequestHeaders,true),new StreamFrameListener.Adapter(){
    @Override public void onData(    Stream stream,    DataInfo dataInfo){
      dataInfo.consume(dataInfo.length());
      if (dataInfo.isClose())       associatedResourceLatch.countDown();
    }
  }
);
  Assert.assertTrue(associatedResourceLatch.await(5,TimeUnit.SECONDS));
  final CountDownLatch mainStreamLatch=new CountDownLatch(2);
  final CountDownLatch pushLatch=new CountDownLatch(1);
  Session session2=startClient(version,address,new SessionFrameListener.Adapter(){
    @Override public StreamFrameListener onSyn(    Stream stream,    SynInfo synInfo){
      pushLatch.countDown();
      return null;
    }
  }
);
  session2.syn(new SynInfo(mainRequestHeaders,true),new StreamFrameListener.Adapter(){
    @Override public void onReply(    Stream stream,    ReplyInfo replyInfo){
      Assert.assertFalse(replyInfo.isClose());
      mainStreamLatch.countDown();
    }
    @Override public void onData(    Stream stream,    DataInfo dataInfo){
      dataInfo.consume(dataInfo.length());
      if (dataInfo.isClose())       mainStreamLatch.countDown();
    }
  }
);
  Assert.assertTrue(mainStreamLatch.await(5,TimeUnit.SECONDS));
  Assert.assertFalse(pushLatch.await(1,TimeUnit.SECONDS));
}
