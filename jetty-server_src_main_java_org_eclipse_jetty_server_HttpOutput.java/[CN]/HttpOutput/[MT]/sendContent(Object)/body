{
  final BlockingCallback callback=_channel.getWriteBlockingCallback();
  if (content instanceof HttpContent) {
    _channel.getResponse().setHeaders((HttpContent)content);
    sendContent((HttpContent)content,callback);
    return;
  }
  if (content instanceof Resource) {
    Resource resource=(Resource)content;
    _channel.getResponse().getHttpFields().putDateField(HttpHeader.LAST_MODIFIED,resource.lastModified());
    ReadableByteChannel in=((Resource)content).getReadableByteChannel();
    if (in != null)     sendContent(in,callback);
 else     sendContent(resource.getInputStream(),callback);
  }
 else   if (content instanceof ByteBuffer) {
    sendContent((ByteBuffer)content,callback);
  }
 else   if (content instanceof ReadableByteChannel) {
    sendContent((ReadableByteChannel)content,callback);
  }
 else   if (content instanceof InputStream) {
    sendContent((InputStream)content,callback);
  }
 else   callback.failed(new IllegalArgumentException("unknown content type " + content.getClass()));
  try {
    callback.block();
  }
 catch (  InterruptedException|TimeoutException e) {
    throw new IOException(e);
  }
}
