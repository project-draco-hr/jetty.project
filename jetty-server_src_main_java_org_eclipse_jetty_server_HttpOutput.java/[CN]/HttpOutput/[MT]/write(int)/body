{
  _written+=1;
  boolean complete=_channel.getResponse().isAllContentWritten(_written);
  while (true) {
switch (_state.get()) {
case OPEN:
      if (_aggregate == null)       _aggregate=_channel.getByteBufferPool().acquire(getBufferSize(),false);
    BufferUtil.append(_aggregate,(byte)b);
  if (complete || BufferUtil.isFull(_aggregate)) {
    BlockingCallback callback=_channel.getWriteBlockingCallback();
    _channel.write(_aggregate,complete,callback);
    callback.block();
    if (complete)     closed();
  }
break;
case ASYNC:
throw new IllegalStateException("isReady() not called");
case READY:
if (!_state.compareAndSet(State.READY,State.PENDING)) continue;
if (_aggregate == null) _aggregate=_channel.getByteBufferPool().acquire(getBufferSize(),false);
BufferUtil.append(_aggregate,(byte)b);
if (!complete && !BufferUtil.isFull(_aggregate)) {
if (!_state.compareAndSet(State.PENDING,State.ASYNC)) throw new IllegalStateException();
return;
}
new AsyncFlush().process();
return;
case PENDING:
case UNREADY:
throw new WritePendingException();
case CLOSED:
throw new EofException("Closed");
}
break;
}
}
