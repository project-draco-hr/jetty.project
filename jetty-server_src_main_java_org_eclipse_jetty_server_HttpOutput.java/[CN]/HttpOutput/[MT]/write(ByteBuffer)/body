{
  _written+=buffer.remaining();
  boolean complete=_channel.getResponse().isAllContentWritten(_written);
  while (true) {
switch (_state.get()) {
case OPEN:
      break;
case ASYNC:
    throw new IllegalStateException("isReady() not called");
case READY:
  if (!_state.compareAndSet(State.READY,State.PENDING))   continue;
new AsyncWrite(buffer,complete).process();
return;
case PENDING:
case UNREADY:
throw new WritePendingException();
case CLOSED:
throw new EofException("Closed");
}
break;
}
int len=BufferUtil.length(buffer);
if (BufferUtil.hasContent(_aggregate)) _channel.write(_aggregate,complete && len == 0);
if (len > 0) _channel.write(buffer,complete);
 else if (complete) _channel.write(BufferUtil.EMPTY_BUFFER,complete);
if (complete) closed();
}
