{
  if (_eof) {
    _in.close();
    closed();
    _channel.getByteBufferPool().release(_buffer);
    return State.SUCCEEDED;
  }
  int len=0;
  while (len < _buffer.capacity() && !_eof) {
    int r=_in.read(_buffer.array(),_buffer.arrayOffset() + len,_buffer.capacity() - len);
    if (r < 0)     _eof=true;
 else     len+=r;
  }
  _buffer.position(0);
  _buffer.limit(len);
  write(_buffer,_eof,this);
  return State.SCHEDULED;
}
