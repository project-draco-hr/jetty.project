{
  super.configureWebApplication();
  Resource webAppSourceDirectoryResource=Resource.newResource(webAppSourceDirectory.getCanonicalPath());
  if (webApp.getWar() == null)   webApp.setWar(webAppSourceDirectoryResource.toString());
  if (webApp.getBaseResource() == null)   webApp.setBaseResource(webAppSourceDirectoryResource);
  if (classesDirectory != null)   webApp.setClasses(classesDirectory);
  if (useTestScope && (testClassesDirectory != null))   webApp.setTestClasses(testClassesDirectory);
  webApp.setWebInfLib(getDependencyFiles());
  Set<Artifact> matchedWarArtifacts=new HashSet<Artifact>();
  List<Overlay> overlays=new ArrayList<Overlay>();
  for (  OverlayConfig config : warPluginInfo.getMavenWarOverlayConfigs()) {
    if (config.isSkip())     continue;
    if (config.isCurrentProject()) {
      Overlay overlay=new Overlay(config,null);
      overlays.add(overlay);
      continue;
    }
    Artifact a=getArtifactForOverlay(config,getWarArtifacts());
    if (a != null) {
      matchedWarArtifacts.add(a);
      SelectiveJarResource r=new SelectiveJarResource(new URL("jar:" + Resource.toURL(a.getFile()).toString() + "!/"));
      r.setIncludes(config.getIncludes());
      r.setExcludes(config.getExcludes());
      Overlay overlay=new Overlay(config,r);
      overlays.add(overlay);
    }
  }
  for (  Artifact a : getWarArtifacts()) {
    if (!matchedWarArtifacts.contains(a)) {
      Overlay overlay=new Overlay(null,Resource.newResource(new URL("jar:" + Resource.toURL(a.getFile()).toString() + "!/")));
      overlays.add(overlay);
    }
  }
  webApp.setOverlays(overlays);
  if (webApp.getDescriptor() == null) {
    if (webXml != null) {
      Resource r=Resource.newResource(webXml);
      if (r.exists() && !r.isDirectory()) {
        webApp.setDescriptor(r.toString());
      }
    }
    if (webApp.getDescriptor() == null && webApp.getBaseResource() != null) {
      Resource r=webApp.getBaseResource().addPath("WEB-INF/web.xml");
      if (r.exists() && !r.isDirectory()) {
        webApp.setDescriptor(r.toString());
      }
    }
    if (webApp.getDescriptor() == null && (webAppSourceDirectory != null)) {
      File f=new File(new File(webAppSourceDirectory,"WEB-INF"),"web.xml");
      if (f.exists() && f.isFile()) {
        webApp.setDescriptor(f.getCanonicalPath());
      }
    }
  }
  getLog().info("web.xml file = " + webApp.getDescriptor());
  getLog().info("Webapp directory = " + webAppSourceDirectory.getCanonicalPath());
}
