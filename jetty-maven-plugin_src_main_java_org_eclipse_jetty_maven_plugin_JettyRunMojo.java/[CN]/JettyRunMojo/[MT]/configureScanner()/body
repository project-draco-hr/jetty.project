{
  final ArrayList<File> scanList=new ArrayList<File>();
  if (webApp.getDescriptor() != null) {
    try {
      Resource r=Resource.newResource(webApp.getDescriptor());
      scanList.add(r.getFile());
    }
 catch (    IOException e) {
      throw new MojoExecutionException("Problem configuring scanner for web.xml",e);
    }
  }
  if (webApp.getJettyEnvXml() != null) {
    try {
      Resource r=Resource.newResource(webApp.getJettyEnvXml());
      scanList.add(r.getFile());
    }
 catch (    IOException e) {
      throw new MojoExecutionException("Problem configuring scanner for jetty-env.xml",e);
    }
  }
  if (webApp.getDefaultsDescriptor() != null) {
    try {
      if (!WebAppContext.WEB_DEFAULTS_XML.equals(webApp.getDefaultsDescriptor())) {
        Resource r=Resource.newResource(webApp.getDefaultsDescriptor());
        scanList.add(r.getFile());
      }
    }
 catch (    IOException e) {
      throw new MojoExecutionException("Problem configuring scanner for webdefaults.xml",e);
    }
  }
  if (webApp.getOverrideDescriptor() != null) {
    try {
      Resource r=Resource.newResource(webApp.getOverrideDescriptor());
      scanList.add(r.getFile());
    }
 catch (    IOException e) {
      throw new MojoExecutionException("Problem configuring scanner for webdefaults.xml",e);
    }
  }
  File jettyWebXmlFile=findJettyWebXmlFile(new File(getWebAppSourceDirectory(),"WEB-INF"));
  if (jettyWebXmlFile != null)   scanList.add(jettyWebXmlFile);
  scanList.addAll(getExtraScanTargets());
  scanList.add(getProject().getFile());
  if (webApp.getTestClasses() != null)   scanList.add(webApp.getTestClasses());
  if (webApp.getClasses() != null)   scanList.add(webApp.getClasses());
  scanList.addAll(webApp.getWebInfLib());
  setScanList(scanList);
  ArrayList<Scanner.BulkListener> listeners=new ArrayList<Scanner.BulkListener>();
  listeners.add(new Scanner.BulkListener(){
    public void filesChanged(    List changes){
      try {
        boolean reconfigure=changes.contains(getProject().getFile().getCanonicalPath());
        restartWebApp(reconfigure);
      }
 catch (      Exception e) {
        getLog().error("Error reconfiguring/restarting webapp after change in watched files",e);
      }
    }
  }
);
  setScannerListeners(listeners);
}
