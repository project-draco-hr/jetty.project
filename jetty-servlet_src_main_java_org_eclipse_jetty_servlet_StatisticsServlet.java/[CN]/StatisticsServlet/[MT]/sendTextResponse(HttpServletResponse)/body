{
  StringBuilder sb=new StringBuilder();
  sb.append(_statsHandler.toStatsHTML());
  sb.append("<h2>Connections:</h2>\n");
  for (  Connector connector : _connectors) {
    sb.append("<h3>").append(connector.getName()).append("</h3>");
    if (connector.getStatsOn()) {
      sb.append("Statistics gathering started ").append(connector.getStatsOnMs()).append("ms ago").append("<br />\n");
      sb.append("Total connections: ").append(connector.getConnections()).append("<br />\n");
      sb.append("Current connections open: ").append(connector.getConnectionsOpen()).append("<br />\n");
      sb.append("Max concurrent connections open: ").append(connector.getConnectionsOpenMax()).append("<br />\n");
      sb.append("Total connections duration: ").append(connector.getConnectionsDurationTotal()).append("<br />\n");
      sb.append("Mean connection duration: ").append(connector.getConnectionsDurationMean()).append("<br />\n");
      sb.append("Max connection duration: ").append(connector.getConnectionsDurationMax()).append("<br />\n");
      sb.append("Connection duration standard deviation: ").append(connector.getConnectionsDurationStdDev()).append("<br />\n");
      sb.append("Total requests: ").append(connector.getRequests()).append("<br />\n");
      sb.append("Mean requests per connection: ").append(connector.getConnectionsRequestsMean()).append("<br />\n");
      sb.append("Max requests per connection: ").append(connector.getConnectionsRequestsMax()).append("<br />\n");
      sb.append("Requests per connection standard deviation: ").append(connector.getConnectionsRequestsStdDev()).append("<br />\n");
    }
 else {
      sb.append("Statistics gathering off.\n");
    }
  }
  sb.append("<h2>Memory:</h2>\n");
  sb.append("Heap memory usage: ").append(_memoryBean.getHeapMemoryUsage().getUsed()).append(" bytes").append("<br />\n");
  sb.append("Non-heap memory usage: ").append(_memoryBean.getNonHeapMemoryUsage().getUsed()).append(" bytes").append("<br />\n");
  response.setContentType("text/html");
  PrintWriter pout=response.getWriter();
  pout.write(sb.toString());
}
