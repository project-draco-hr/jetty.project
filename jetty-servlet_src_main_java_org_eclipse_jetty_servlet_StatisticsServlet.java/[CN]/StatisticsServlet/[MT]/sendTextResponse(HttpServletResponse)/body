{
  StringBuilder sb=new StringBuilder();
  sb.append("<h1>Statistics:</h1>\n");
  sb.append("<h2>Requests:</h2>\n");
  sb.append("Statistics gathering started " + _statsHandler.getStatsOnMs() + "ms ago").append("<br />\n");
  sb.append("Total requests: " + _statsHandler.getRequests()).append("<br />\n");
  sb.append("Total requests timed out: " + _statsHandler.getRequestsTimedout()).append("<br />\n");
  sb.append("Total requests resumed: " + _statsHandler.getRequestsResumed()).append("<br />\n");
  sb.append("Current requests active: " + _statsHandler.getRequestsActive()).append("<br />\n");
  sb.append("Min concurrent requests active: " + _statsHandler.getRequestsActiveMin()).append("<br />\n");
  sb.append("Max concurrent requests active: " + _statsHandler.getRequestsActiveMax()).append("<br />\n");
  sb.append("Total requests duration: " + _statsHandler.getRequestsDurationTotal()).append("<br />\n");
  sb.append("Average request duration: " + _statsHandler.getRequestsDurationAve()).append("<br />\n");
  sb.append("Min request duration: " + _statsHandler.getRequestsDurationMin()).append("<br />\n");
  sb.append("Max request duration: " + _statsHandler.getRequestsDurationMax()).append("<br />\n");
  sb.append("Average request active duration: " + _statsHandler.getRequestsActiveDurationAve()).append("<br />\n");
  sb.append("Min request active duration: " + _statsHandler.getRequestsActiveDurationMin()).append("<br />\n");
  sb.append("Max request active duration: " + _statsHandler.getRequestsActiveDurationMax()).append("<br />\n");
  sb.append("<h2>Responses:</h2>\n");
  sb.append("1xx responses: " + _statsHandler.getResponses1xx()).append("<br />\n");
  sb.append("2xx responses: " + _statsHandler.getResponses2xx()).append("<br />\n");
  sb.append("3xx responses: " + _statsHandler.getResponses3xx()).append("<br />\n");
  sb.append("4xx responses: " + _statsHandler.getResponses4xx()).append("<br />\n");
  sb.append("5xx responses: " + _statsHandler.getResponses5xx()).append("<br />\n");
  sb.append("Bytes sent total: " + _statsHandler.getResponsesBytesTotal()).append("<br />\n");
  sb.append("<h2>Connections:</h2>\n");
  for (  Connector connector : _connectors) {
    sb.append("<h3>" + connector.getName() + "</h3>");
    if (connector.getStatsOn()) {
      sb.append("Statistics gathering started " + connector.getStatsOnMs() + "ms ago").append("<br />\n");
      sb.append("Total connections: " + connector.getConnections()).append("<br />\n");
      sb.append("Current connections open: " + connector.getConnectionsOpen());
      sb.append("Min concurrent connections open: " + connector.getConnectionsOpenMin()).append("<br />\n");
      sb.append("Max concurrent connections open: " + connector.getConnectionsOpenMax()).append("<br />\n");
      sb.append("Total connections duration: " + connector.getConnectionsDurationTotal()).append("<br />\n");
      sb.append("Average connection duration: " + connector.getConnectionsDurationAve()).append("<br />\n");
      sb.append("Min connection duration: " + connector.getConnectionsDurationMin()).append("<br />\n");
      sb.append("Max connection duration: " + connector.getConnectionsDurationMax()).append("<br />\n");
      sb.append("Total requests: " + connector.getRequests()).append("<br />\n");
      sb.append("Average requests per connection: " + connector.getConnectionsRequestsAve()).append("<br />\n");
      sb.append("Min requests per connection: " + connector.getConnectionsRequestsMin()).append("<br />\n");
      sb.append("Max requests per connection: " + connector.getConnectionsRequestsMax()).append("<br />\n");
    }
 else {
      sb.append("Statistics gathering off.\n");
    }
  }
  sb.append("<h2>Memory:</h2>\n");
  sb.append("Heap memory usage: " + _memoryBean.getHeapMemoryUsage().getUsed() + " bytes").append("<br />\n");
  sb.append("Non-heap memory usage: " + _memoryBean.getNonHeapMemoryUsage().getUsed() + " bytes").append("<br />\n");
  response.setContentType("text/html");
  PrintWriter pout=null;
  pout=response.getWriter();
  pout.write(sb.toString());
}
