{
  configureServer(new EchoHandler());
  Socket client=newSocket(HOST,_connector.getLocalPort());
  try {
    OutputStream os=client.getOutputStream();
    InputStream is=client.getInputStream();
    os.write(("POST /echo?charset=utf-8 HTTP/1.1\r\n" + "host: " + HOST + ":"+ _connector.getLocalPort()+ "\r\n"+ "content-type: text/plain; charset=utf-8\r\n"+ "content-length: 10\r\n"+ "\r\n").getBytes("iso-8859-1"));
    os.write(("123456789\n").getBytes("utf-8"));
    os.write(("POST /echo?charset=utf-8 HTTP/1.1\r\n" + "host: " + HOST + ":"+ _connector.getLocalPort()+ "\r\n"+ "content-type: text/plain; charset=utf-8\r\n"+ "content-length: 10\r\n"+ "\r\n").getBytes("iso-8859-1"));
    os.write(("abcdefghZ\n").getBytes("utf-8"));
    String content="Wibble";
    byte[] contentB=content.getBytes("utf-8");
    os.write(("POST /echo?charset=utf-16 HTTP/1.1\r\n" + "host: " + HOST + ":"+ _connector.getLocalPort()+ "\r\n"+ "content-type: text/plain; charset=utf-8\r\n"+ "content-length: "+ contentB.length+ "\r\n"+ "connection: close\r\n"+ "\r\n").getBytes("iso-8859-1"));
    os.write(contentB);
    os.flush();
    ByteArrayOutputStream bout=new ByteArrayOutputStream();
    IO.copy(is,bout);
    byte[] b=bout.toByteArray();
    int i=0;
    while (b[i] != 'Z')     i++;
    int state=0;
    while (state != 4) {
switch (b[i++]) {
case '\r':
        if (state == 0 || state == 2)         state++;
      continue;
case '\n':
    if (state == 1 || state == 3)     state++;
  continue;
default :
state=0;
}
}
String in=new String(b,0,i,"utf-8");
assertTrue(in.indexOf("123456789") >= 0);
assertTrue(in.indexOf("abcdefghZ") >= 0);
assertTrue(in.indexOf("Wibble") < 0);
in=new String(b,i,b.length - i,"utf-16");
assertEquals("Wibble\n",in);
}
  finally {
client.close();
}
}
