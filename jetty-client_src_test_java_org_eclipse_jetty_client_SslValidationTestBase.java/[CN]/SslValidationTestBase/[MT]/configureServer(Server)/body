{
  setProtocol("https");
  String keypath=MavenTestingUtils.getTargetFile("test-policy/validation/jetty-valid.keystore").getAbsolutePath();
  String trustpath=new File(System.getProperty("java.home"),"./lib/security/cacerts").getAbsolutePath();
  String crlpath=MavenTestingUtils.getTargetFile("test-policy/validation/crlfile.pem").getAbsolutePath();
  SslContextFactory srvFactory=new SslContextFactory();
  srvFactory.setValidateCerts(true);
  srvFactory.setKeystore(keypath);
  srvFactory.setKeystorePassword("webtide");
  srvFactory.setKeyManagerPassword("webtide");
  srvFactory.setTruststore(trustpath);
  srvFactory.setTruststorePassword("changeit");
  srvFactory.setCrlPath(crlpath);
  Constructor<? extends SslConnector> constructor=__klass.getConstructor(SslContextFactory.class);
  SslConnector connector=constructor.newInstance(srvFactory);
  connector.setMaxIdleTime(5000);
  server.addConnector(connector);
  Handler handler=new TestHandler(getBasePath());
  ServletContextHandler root=new ServletContextHandler();
  root.setContextPath("/");
  root.setResourceBase(getBasePath());
  ServletHolder servletHolder=new ServletHolder(new DefaultServlet());
  servletHolder.setInitParameter("gzip","true");
  root.addServlet(servletHolder,"/*");
  HandlerCollection handlers=new HandlerCollection();
  handlers.setHandlers(new Handler[]{handler,root});
  server.setHandler(handlers);
}
