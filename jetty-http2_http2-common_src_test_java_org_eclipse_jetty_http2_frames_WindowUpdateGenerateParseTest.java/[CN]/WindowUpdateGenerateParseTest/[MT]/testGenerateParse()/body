{
  Generator generator=new Generator(byteBufferPool);
  int streamId=13;
  int windowUpdate=17;
  final List<WindowUpdateFrame> frames=new ArrayList<>();
  for (int i=0; i < 2; ++i) {
    ByteBufferPool.Lease lease=generator.generateWindowUpdate(streamId,windowUpdate);
    Parser parser=new Parser(byteBufferPool,new Parser.Listener.Adapter(){
      @Override public boolean onWindowUpdate(      WindowUpdateFrame frame){
        frames.add(frame);
        return false;
      }
    }
);
    frames.clear();
    for (    ByteBuffer buffer : lease.getByteBuffers()) {
      while (buffer.hasRemaining()) {
        parser.parse(buffer);
      }
    }
  }
  Assert.assertEquals(1,frames.size());
  WindowUpdateFrame frame=frames.get(0);
  Assert.assertEquals(streamId,frame.getStreamId());
  Assert.assertEquals(windowUpdate,frame.getWindowDelta());
}
