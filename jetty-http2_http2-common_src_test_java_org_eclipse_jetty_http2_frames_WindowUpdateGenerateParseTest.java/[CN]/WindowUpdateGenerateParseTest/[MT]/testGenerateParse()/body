{
  WindowUpdateGenerator generator=new WindowUpdateGenerator(new HeaderGenerator());
  final List<WindowUpdateFrame> frames=new ArrayList<>();
  Parser parser=new Parser(byteBufferPool,new Parser.Listener.Adapter(){
    @Override public boolean onWindowUpdate(    WindowUpdateFrame frame){
      frames.add(frame);
      return false;
    }
  }
);
  int streamId=13;
  int windowUpdate=17;
  for (int i=0; i < 2; ++i) {
    ByteBufferPool.Lease lease=new ByteBufferPool.Lease(byteBufferPool);
    generator.generateWindowUpdate(lease,streamId,windowUpdate);
    frames.clear();
    for (    ByteBuffer buffer : lease.getByteBuffers()) {
      while (buffer.hasRemaining()) {
        parser.parse(buffer);
      }
    }
  }
  Assert.assertEquals(1,frames.size());
  WindowUpdateFrame frame=frames.get(0);
  Assert.assertEquals(streamId,frame.getStreamId());
  Assert.assertEquals(windowUpdate,frame.getWindowDelta());
}
