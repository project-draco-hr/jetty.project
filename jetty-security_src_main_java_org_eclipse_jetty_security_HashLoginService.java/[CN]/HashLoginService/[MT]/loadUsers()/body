{
  if (_config == null)   return;
  _configResource=Resource.newResource(_config);
  if (LOG.isDebugEnabled())   LOG.debug("Load " + this + " from "+ _config);
  Properties properties=new Properties();
  properties.load(_configResource.getInputStream());
  Set<String> known=new HashSet<String>();
  for (  Map.Entry<Object,Object> entry : properties.entrySet()) {
    String username=((String)entry.getKey()).trim();
    String credentials=((String)entry.getValue()).trim();
    String roles=null;
    int c=credentials.indexOf(',');
    if (c > 0) {
      roles=credentials.substring(c + 1).trim();
      credentials=credentials.substring(0,c).trim();
    }
    if (username != null && username.length() > 0 && credentials != null && credentials.length() > 0) {
      String[] roleArray=IdentityService.NO_ROLES;
      if (roles != null && roles.length() > 0)       roleArray=roles.split(",");
      known.add(username);
      putUser(username,Credential.getCredential(credentials),roleArray);
    }
  }
  Iterator<String> users=_users.keySet().iterator();
  while (users.hasNext()) {
    String user=users.next();
    if (!known.contains(user))     users.remove();
  }
}
