{
  EventMethods events=new EventMethods(pojo,true);
  for (  Method method : pojo.getDeclaredMethods()) {
    if (method.getAnnotation(OnWebSocketConnect.class) != null) {
      assertValidParams(method,OnWebSocketConnect.class,validConnectParams);
      assertUnset(events.onConnect,OnWebSocketConnect.class,method);
      events.onConnect=new EventMethod(pojo,method);
      continue;
    }
    if (method.getAnnotation(OnWebSocketBinary.class) != null) {
      assertValidParams(method,OnWebSocketBinary.class,validBinaryParams);
      assertUnset(events.onBinary,OnWebSocketBinary.class,method);
      events.onBinary=new EventMethod(pojo,method);
      continue;
    }
    if (method.getAnnotation(OnWebSocketClose.class) != null) {
      assertValidParams(method,OnWebSocketClose.class,validCloseParams);
      assertUnset(events.onClose,OnWebSocketClose.class,method);
      events.onClose=new EventMethod(pojo,method);
      continue;
    }
    if (method.getAnnotation(OnWebSocketText.class) != null) {
      assertValidParams(method,OnWebSocketText.class,validTextParams);
      assertUnset(events.onText,OnWebSocketText.class,method);
      events.onText=new EventMethod(pojo,method);
      continue;
    }
    if (method.getAnnotation(OnWebSocketFrame.class) != null) {
      assertValidParams(method,OnWebSocketFrame.class,validFrameParams);
      assertFrameUnset(events,method);
      events.addOnFrame(new EventMethod(pojo,method));
      continue;
    }
  }
  return events;
}
