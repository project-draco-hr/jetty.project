{
  boolean valid=false;
  Class<?> actual[]=method.getParameterTypes();
  for (  Class<?> params[] : validParams) {
    if (isSameParameters(actual,params)) {
      valid=true;
      break;
    }
  }
  if (!valid) {
    StringBuilder err=new StringBuilder();
    err.append("Invalid declaration of ");
    err.append(method);
    err.append(StringUtil.__LINE_SEPARATOR);
    err.append("Acceptable method declarations for @");
    err.append(annoClass.getSimpleName());
    err.append(" are:");
    for (    Class<?> params[] : validParams) {
      err.append(StringUtil.__LINE_SEPARATOR);
      err.append("public void ").append(method.getName());
      err.append('(');
      boolean delim=false;
      for (      Class<?> type : params) {
        if (delim) {
          err.append(',');
        }
        err.append(' ');
        err.append(type.getName());
        if (type.isArray()) {
          err.append("[]");
        }
        delim=true;
      }
      err.append(')');
    }
    throw new InvalidWebSocketException(err.toString());
  }
}
