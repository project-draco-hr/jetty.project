{
  ((StdErrLog)Log.getLog()).setSource(false);
  String jetty_root="../../..";
  QueuedThreadPool threadPool=new QueuedThreadPool();
  threadPool.setMaxThreads(100);
  Server server=new Server(threadPool);
  server.manage(threadPool);
  MBeanContainer mbContainer=new MBeanContainer(ManagementFactory.getPlatformMBeanServer());
  server.addBean(mbContainer);
  server.addBean(Log.getLog());
  HttpConfiguration config=new HttpConfiguration();
  config.setSecurePort(8443);
  config.addCustomizer(new ForwardedRequestCustomizer());
  config.addCustomizer(new SecureRequestCustomizer());
  config.setSendDateHeader(true);
  config.setSendServerVersion(true);
  HttpConnectionFactory http=new HttpConnectionFactory(config);
  ServerConnector httpConnector=new ServerConnector(server,http);
  httpConnector.setPort(8080);
  httpConnector.setIdleTimeout(30000);
  server.addConnector(httpConnector);
  HandlerCollection handlers=new HandlerCollection();
  ContextHandlerCollection contexts=new ContextHandlerCollection();
  RequestLogHandler requestLogHandler=new RequestLogHandler();
  handlers.setHandlers(new Handler[]{contexts,new DefaultHandler(),requestLogHandler});
  RestartHandler restart=new RestartHandler();
  restart.setHandler(handlers);
  server.setHandler(restart);
  HashLoginService login=new HashLoginService();
  login.setName("Test Realm");
  login.setConfig(jetty_root + "/tests/test-webapps/test-jetty-webapp/src/main/config/demo-base/etc/realm.properties");
  server.addBean(login);
  File log=File.createTempFile("jetty-yyyy_mm_dd","log");
  NCSARequestLog requestLog=new NCSARequestLog(log.toString());
  requestLog.setExtended(false);
  requestLogHandler.setRequestLog(requestLog);
  server.setStopAtShutdown(true);
  WebAppContext webapp=new WebAppContext();
  webapp.setContextPath("/test");
  webapp.setParentLoaderPriority(true);
  webapp.setResourceBase("./src/main/webapp");
  webapp.setAttribute("testAttribute","testValue");
  File sessiondir=File.createTempFile("sessions",null);
  if (sessiondir.exists())   sessiondir.delete();
  sessiondir.mkdir();
  sessiondir.deleteOnExit();
  ((HashSessionManager)webapp.getSessionHandler().getSessionManager()).setStoreDirectory(sessiondir);
  ((HashSessionManager)webapp.getSessionHandler().getSessionManager()).setSavePeriod(10);
  contexts.addHandler(webapp);
  ContextHandler srcroot=new ContextHandler();
  srcroot.setResourceBase(".");
  srcroot.setHandler(new ResourceHandler());
  srcroot.setContextPath("/src");
  contexts.addHandler(srcroot);
  server.start();
  server.join();
}
