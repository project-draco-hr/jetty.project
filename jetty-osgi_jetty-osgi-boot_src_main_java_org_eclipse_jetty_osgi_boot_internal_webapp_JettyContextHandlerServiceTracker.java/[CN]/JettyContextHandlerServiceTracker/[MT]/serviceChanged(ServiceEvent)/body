{
  ServiceReference sr=ev.getServiceReference();
switch (ev.getType()) {
case ServiceEvent.MODIFIED:
case ServiceEvent.UNREGISTERING:
{
      BundleContext context=FrameworkUtil.getBundle(JettyBootstrapActivator.class).getBundleContext();
      ContextHandler contextHandler=(ContextHandler)context.getService(sr);
      String serverName=(String)sr.getProperty(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME);
      Map<ServiceReference,ServiceProvider> candidates=getDeployers(serverName);
      if (candidates != null) {
        boolean removed=false;
        Iterator<Entry<ServiceReference,ServiceProvider>> itor=candidates.entrySet().iterator();
        while (!removed && itor.hasNext()) {
          Entry<ServiceReference,ServiceProvider> e=itor.next();
          removed=e.getValue().serviceRemoved(sr,contextHandler);
        }
      }
    }
  if (ev.getType() == ServiceEvent.UNREGISTERING) {
    break;
  }
 else {
  }
case ServiceEvent.REGISTERED:
{
  Bundle contributor=sr.getBundle();
  BundleContext context=FrameworkUtil.getBundle(JettyBootstrapActivator.class).getBundleContext();
  ContextHandler contextHandler=(ContextHandler)context.getService(sr);
  if (contextHandler.getServer() != null) {
    return;
  }
  String serverName=(String)sr.getProperty(OSGiServerConstants.MANAGED_JETTY_SERVER_NAME);
  Map<ServiceReference,ServiceProvider> candidates=getDeployers(serverName);
  if (candidates != null) {
    boolean added=false;
    Iterator<Entry<ServiceReference,ServiceProvider>> itor=candidates.entrySet().iterator();
    while (!added && itor.hasNext()) {
      Entry<ServiceReference,ServiceProvider> e=itor.next();
      added=e.getValue().serviceAdded(sr,contextHandler);
      if (added && LOG.isDebugEnabled())       LOG.debug("Provider " + e.getValue() + " deployed "+ contextHandler);
    }
  }
  break;
}
}
}
