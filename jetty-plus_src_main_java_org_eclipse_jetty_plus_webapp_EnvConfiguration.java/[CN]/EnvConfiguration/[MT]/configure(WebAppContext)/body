{
  if (Log.isDebugEnabled())   Log.debug("Created java:comp/env for webapp " + context.getContextPath());
  if (jettyEnvXmlUrl == null) {
    org.eclipse.jetty.util.resource.Resource web_inf=context.getWebInf();
    if (web_inf != null && web_inf.isDirectory()) {
      org.eclipse.jetty.util.resource.Resource jettyEnv=web_inf.addPath("jetty-env.xml");
      if (jettyEnv.exists()) {
        jettyEnvXmlUrl=jettyEnv.getURL();
      }
    }
  }
  if (jettyEnvXmlUrl != null) {
synchronized (localContextRoot.getRoot()) {
      final List<Bound> bindings=new ArrayList<Bound>();
      NamingContext.Listener listener=new NamingContext.Listener(){
        public void unbind(        NamingContext ctx,        Binding binding){
        }
        public Binding bind(        NamingContext ctx,        Binding binding){
          bindings.add(new Bound(ctx,binding.getName()));
          return binding;
        }
      }
;
      try {
        localContextRoot.getRoot().addListener(listener);
        XmlConfiguration configuration=new XmlConfiguration(jettyEnvXmlUrl);
        configuration.configure(context);
      }
  finally {
        localContextRoot.getRoot().removeListener(listener);
        context.setAttribute(JETTY_ENV_BINDINGS,bindings);
      }
    }
  }
  bindEnvEntries(context);
}
