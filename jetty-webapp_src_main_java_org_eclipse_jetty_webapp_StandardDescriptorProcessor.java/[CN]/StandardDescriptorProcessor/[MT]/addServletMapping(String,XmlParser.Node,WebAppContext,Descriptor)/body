{
  ServletMapping mapping=new ServletMapping();
  mapping.setServletName(servletName);
  mapping.setDefault(descriptor instanceof DefaultsDescriptor);
  List<String> paths=new ArrayList<String>();
  Iterator<XmlParser.Node> iter=node.iterator("url-pattern");
  while (iter.hasNext()) {
    String p=iter.next().toString(false,true);
    p=normalizePattern(p);
    ListIterator<ServletMapping> listItor=_servletMappings.listIterator();
    boolean found=false;
    while (listItor.hasNext() && !found) {
      ServletMapping sm=listItor.next();
      if (sm.getPathSpecs() != null) {
        for (        String ps : sm.getPathSpecs()) {
          if (p.equals(ps) && (sm.isDefault() || servletName.equals(sm.getServletName()))) {
            if (sm.isDefault()) {
              if (LOG.isDebugEnabled())               LOG.debug("{} in mapping {} from defaults descriptor is overridden by ",ps,sm,servletName);
            }
 else             LOG.warn("Duplicate mapping from {} to {}",p,servletName);
            String[] updatedPaths=ArrayUtil.removeFromArray(sm.getPathSpecs(),ps);
            if (updatedPaths == null || updatedPaths.length == 0) {
              if (LOG.isDebugEnabled())               LOG.debug("Removed empty mapping {}",sm);
              listItor.remove();
            }
 else {
              sm.setPathSpecs(updatedPaths);
              if (LOG.isDebugEnabled())               LOG.debug("Removed path {} from mapping {}",p,sm);
            }
            found=true;
            break;
          }
        }
      }
    }
    paths.add(p);
    context.getMetaData().setOrigin(servletName + ".servlet.mapping." + p,descriptor);
  }
  mapping.setPathSpecs((String[])paths.toArray(new String[paths.size()]));
  if (LOG.isDebugEnabled())   LOG.debug("Added mapping {} ",mapping);
  _servletMappings.add(mapping);
  return mapping;
}
