{
  LocalWebSocketConnection physical=new LocalWebSocketConnection(testname);
  physical.setPolicy(WebSocketPolicy.newServerPolicy());
  physical.open();
  MuxDecoder clientRead=new MuxDecoder();
  Muxer muxer=new Muxer(physical);
  DummyMuxAddServer addServer=new DummyMuxAddServer();
  muxer.setAddServer(addServer);
  muxer.setOutgoingFramesHandler(clientRead);
  physical.setNextIncomingFrames(muxer);
  MuxEncoder clientWrite=MuxEncoder.toIncoming(physical);
  StringBuilder request=new StringBuilder();
  request.append("GET /echo HTTP/1.1\r\n");
  request.append("Host: localhost\r\n");
  request.append("Upgrade: websocket\r\n");
  request.append("Connection: Upgrade\r\n");
  request.append("Sec-WebSocket-Key: ZDTIRU5vU9xOfkg8JAgN3A==\r\n");
  request.append("Sec-WebSocket-Version: 13\r\n");
  request.append("\r\n");
  MuxAddChannelRequest req=new MuxAddChannelRequest();
  req.setChannelId(1);
  req.setEncoding((byte)0);
  req.setHandshake(request.toString());
  clientWrite.op(req);
  clientRead.assertHasOp(MuxOp.ADD_CHANNEL_RESPONSE,1);
  MuxAddChannelResponse response=(MuxAddChannelResponse)clientRead.getOps().pop();
  Assert.assertThat("AddChannelResponse.channelId",response.getChannelId(),is(1L));
  Assert.assertThat("AddChannelResponse.failed",response.isFailed(),is(false));
  Assert.assertThat("AddChannelResponse.handshake",response.getHandshake(),notNullValue());
  Assert.assertThat("AddChannelResponse.handshakeSize",response.getHandshakeSize(),is(57L));
  clientRead.reset();
  clientWrite.frame(1,new TextFrame().setPayload("Hello World"));
  clientRead.assertHasFrame(OpCode.TEXT,1L,1);
}
