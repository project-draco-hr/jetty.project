{
  AnnotationParser oparser=(AnnotationParser)parser;
  Bundle webbundle=(Bundle)context.getAttribute(OSGiWebappConstants.JETTY_OSGI_BUNDLE);
  Set<Bundle> fragAndRequiredBundles=(Set<Bundle>)context.getAttribute(OSGiWebInfConfiguration.FRAGMENT_AND_REQUIRED_BUNDLES);
  if (fragAndRequiredBundles != null) {
    for (    Bundle bundle : fragAndRequiredBundles) {
      Resource bundleRes=oparser.indexBundle(bundle);
      if (!context.getMetaData().getWebInfJars().contains(bundleRes)) {
        context.getMetaData().addWebInfJar(bundleRes);
      }
      if (bundle.getHeaders().get(Constants.FRAGMENT_HOST) != null) {
        parseFragmentBundle(context,oparser,webbundle,bundle);
      }
    }
  }
  oparser.indexBundle(webbundle);
  parseWebBundle(context,oparser,webbundle);
  super.parseWebInfLib(context,parser);
  if (fragAndRequiredBundles != null) {
    for (    Bundle requiredBundle : fragAndRequiredBundles) {
      if (requiredBundle.getHeaders().get(Constants.FRAGMENT_HOST) == null) {
        parseRequiredBundle(context,oparser,webbundle,requiredBundle);
      }
    }
  }
}
