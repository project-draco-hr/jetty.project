{
  IOFuture future=new DoneIOFuture();
  assertTrue(future.isDone());
  assertTrue(future.isComplete());
  long start=System.currentTimeMillis();
  future.block();
  Assert.assertThat(System.currentTimeMillis() - start,lessThan(10L));
  start=System.currentTimeMillis();
  future.block(1000,TimeUnit.MILLISECONDS);
  Assert.assertThat(System.currentTimeMillis() - start,lessThan(10L));
  final AtomicBoolean ready=new AtomicBoolean(false);
  final AtomicReference<Throwable> fail=new AtomicReference<>();
  future.setCallback(new Callback<Object>(){
    @Override public void completed(    Object context){
      ready.set(true);
    }
    @Override public void failed(    Object context,    Throwable cause){
      fail.set(cause);
    }
  }
,null);
  assertTrue(ready.get());
  assertNull(fail.get());
}
