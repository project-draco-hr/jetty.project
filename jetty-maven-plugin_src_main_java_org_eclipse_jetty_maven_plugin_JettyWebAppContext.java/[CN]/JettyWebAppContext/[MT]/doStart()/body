{
  String tmp=(String)getAttribute("org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern");
  tmp=addPattern(tmp,".*/.*jsp-api-[^/]*\\.jar$");
  tmp=addPattern(tmp,".*/.*jsp-[^/]*\\.jar$");
  tmp=addPattern(tmp,".*/.*taglibs[^/]*\\.jar$");
  tmp=addPattern(tmp,".*/.*jstl[^/]*\\.jar$");
  tmp=addPattern(tmp,".*/.*jsf-impl-[^/]*\\.jar$");
  tmp=addPattern(tmp,".*/.*javax.faces-[^/]*\\.jar$");
  tmp=addPattern(tmp,".*/.*myfaces-impl-[^/]*\\.jar$");
  setAttribute("org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern",tmp);
  if (testClasses != null)   webInfClasses.add(testClasses);
  if (classes != null)   webInfClasses.add(classes);
  classpathFiles=new ArrayList<File>();
  classpathFiles.addAll(webInfClasses);
  classpathFiles.addAll(webInfJars);
  webInfJarMap.clear();
  for (  File file : webInfJars) {
    String fileName=file.getName();
    if (fileName.endsWith(".jar"))     webInfJarMap.put(fileName,file);
  }
  if (this.jettyEnvXml != null)   envConfig.setJettyEnvXml(Resource.toURL(new File(this.jettyEnvXml)));
  super.doStart();
}
