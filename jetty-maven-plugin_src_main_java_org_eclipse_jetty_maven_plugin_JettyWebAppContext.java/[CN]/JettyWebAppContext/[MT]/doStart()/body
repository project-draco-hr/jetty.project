{
  String tmp=containerIncludeJarPattern;
  if (tmp == null || "".equals(tmp))   tmp=(String)getAttribute(WebInfConfiguration.CONTAINER_JAR_PATTERN);
  tmp=addPattern(tmp,DEFAULT_CONTAINER_INCLUDE_JAR_PATTERN);
  setAttribute(WebInfConfiguration.CONTAINER_JAR_PATTERN,tmp);
  if (webInfIncludeJarPattern != null)   setAttribute(WebInfConfiguration.WEBINF_JAR_PATTERN,webInfIncludeJarPattern);
  if (testClasses != null)   webInfClasses.add(testClasses);
  if (classes != null)   webInfClasses.add(classes);
  classpathFiles=new ArrayList<File>();
  classpathFiles.addAll(webInfClasses);
  classpathFiles.addAll(webInfJars);
  webInfJarMap.clear();
  for (  File file : webInfJars) {
    String fileName=file.getName();
    if (fileName.endsWith(".jar"))     webInfJarMap.put(fileName,file);
  }
  if (this.jettyEnvXml != null)   envConfig.setJettyEnvXml(Resource.toURL(new File(this.jettyEnvXml)));
  super.doStart();
}
