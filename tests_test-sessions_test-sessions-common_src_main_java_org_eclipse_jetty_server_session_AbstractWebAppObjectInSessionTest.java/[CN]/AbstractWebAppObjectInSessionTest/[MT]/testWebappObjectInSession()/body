{
  String contextName="webappObjectInSessionTest";
  String contextPath="/" + contextName;
  String servletMapping="/server";
  File targetDir=new File(System.getProperty("basedir"),"target");
  File warDir=new File(targetDir,contextName);
  warDir.mkdir();
  File webInfDir=new File(warDir,"WEB-INF");
  webInfDir.mkdir();
  File webXml=new File(webInfDir,"web.xml");
  String xml="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<web-app xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n" + "         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"+ "         xsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\"\n"+ "         version=\"2.4\">\n"+ "\n"+ "</web-app>";
  FileWriter w=new FileWriter(webXml);
  w.write(xml);
  w.close();
  File classesDir=new File(webInfDir,"classes");
  classesDir.mkdir();
  String packageName=WebAppObjectInSessionServlet.class.getPackage().getName();
  File packageDirs=new File(classesDir,packageName.replace('.',File.separatorChar));
  packageDirs.mkdirs();
  String resourceName=WebAppObjectInSessionServlet.class.getSimpleName() + ".class";
  Resource resource=Resource.newResource(getClass().getResource(resourceName));
  File targetFile=new File(packageDirs,resourceName);
  IO.copy(resource.getInputStream(),new FileOutputStream(targetFile));
  resourceName=WebAppObjectInSessionServlet.class.getSimpleName() + "$" + WebAppObjectInSessionServlet.TestSharedStatic.class.getSimpleName()+ ".class";
  resource=Resource.newResource(getClass().getResource(resourceName));
  targetFile=new File(packageDirs,resourceName);
  IO.copy(resource.getInputStream(),new FileOutputStream(targetFile));
  Random random=new Random(System.nanoTime());
  int port1=random.nextInt(50000) + 10000;
  AbstractTestServer server1=createServer(port1);
  server1.addWebAppContext(warDir.getCanonicalPath(),contextPath).addServlet(WebAppObjectInSessionServlet.class.getName(),servletMapping);
  server1.start();
  try {
    int port2=random.nextInt(50000) + 10000;
    AbstractTestServer server2=createServer(port2);
    server2.addWebAppContext(warDir.getCanonicalPath(),contextPath).addServlet(WebAppObjectInSessionServlet.class.getName(),servletMapping);
    server2.start();
    try {
      HttpClient client=new HttpClient();
      client.setConnectorType(HttpClient.CONNECTOR_SOCKET);
      client.start();
      try {
        ContentExchange exchange1=new ContentExchange(true);
        exchange1.setMethod(HttpMethods.GET);
        exchange1.setURL("http://localhost:" + port1 + contextPath+ servletMapping+ "?action=set");
        client.send(exchange1);
        exchange1.waitForDone();
        assertEquals(HttpServletResponse.SC_OK,exchange1.getResponseStatus());
        String sessionCookie=exchange1.getResponseFields().getStringField("Set-Cookie");
        assertTrue(sessionCookie != null);
        sessionCookie=sessionCookie.replaceFirst("(\\W)(P|p)ath=","$1\\$Path=");
        ContentExchange exchange2=new ContentExchange(true);
        exchange2.setMethod(HttpMethods.GET);
        exchange2.setURL("http://localhost:" + port2 + contextPath+ servletMapping+ "?action=get");
        exchange2.getRequestFields().add("Cookie",sessionCookie);
        client.send(exchange2);
        exchange2.waitForDone();
        assertEquals(HttpServletResponse.SC_OK,exchange2.getResponseStatus());
      }
  finally {
        client.stop();
      }
    }
  finally {
      server2.stop();
    }
  }
  finally {
    server1.stop();
  }
}
