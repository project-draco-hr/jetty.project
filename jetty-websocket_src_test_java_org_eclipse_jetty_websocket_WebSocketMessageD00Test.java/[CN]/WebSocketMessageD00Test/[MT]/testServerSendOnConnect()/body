{
  Socket socket=new Socket("localhost",_connector.getLocalPort());
  OutputStream output=socket.getOutputStream();
  output.write(("GET /test HTTP/1.1\r\n" + "Host: localhost\r\n" + "Upgrade: WebSocket\r\n"+ "Connection: Upgrade\r\n"+ "Sec-WebSocket-Protocol: onConnect\r\n"+ "Sec-WebSocket-Key1: 4 @1  46546xW%0l 1 5\r\n"+ "Sec-WebSocket-Key2: 12998 5 Y3 1  .P00\r\n"+ "\r\n"+ "^n:ds[4U").getBytes("ISO-8859-1"));
  output.flush();
  socket.setSoTimeout(1000);
  InputStream input=socket.getInputStream();
  String looking_for="HTTP/1.1 101 WebSocket Protocol Handshake\r\n";
  while (true) {
    int b=input.read();
    if (b < 0)     throw new EOFException();
    assertEquals((int)looking_for.charAt(0),b);
    if (looking_for.length() == 1)     break;
    looking_for=looking_for.substring(1);
  }
  String skipping_for="\r\n\r\n";
  int state=0;
  while (true) {
    int b=input.read();
    if (b < 0)     throw new EOFException();
    if (b == skipping_for.charAt(state)) {
      state++;
      if (state == skipping_for.length())       break;
    }
 else     state=0;
  }
  assertTrue(_serverWebSocket.awaitConnected(1000));
  assertNotNull(_serverWebSocket.outbound);
  looking_for="8jKS'y:G*Co,Wxa-";
  while (true) {
    int b=input.read();
    if (b < 0)     throw new EOFException();
    assertEquals((int)looking_for.charAt(0),b);
    if (looking_for.length() == 1)     break;
    looking_for=looking_for.substring(1);
  }
  assertEquals(0x00,input.read());
  looking_for="sent on connect";
  while (true) {
    int b=input.read();
    if (b < 0)     throw new EOFException();
    assertEquals((int)looking_for.charAt(0),b);
    if (looking_for.length() == 1)     break;
    looking_for=looking_for.substring(1);
  }
  assertEquals(0xff,input.read());
}
