{
  this.operatingSystem=ManagementFactory.getOperatingSystemMXBean();
  this.jitCompiler=ManagementFactory.getCompilationMXBean();
  this.heapMemory=ManagementFactory.getMemoryMXBean();
  List<MemoryPoolMXBean> memoryPools=ManagementFactory.getMemoryPoolMXBeans();
  MemoryPoolMXBean ymp=null;
  MemoryPoolMXBean smp=null;
  MemoryPoolMXBean omp=null;
  for (  MemoryPoolMXBean memoryPool : memoryPools) {
    if ("PS Eden Space".equals(memoryPool.getName()) || "Par Eden Space".equals(memoryPool.getName()) || "G1 Eden".equals(memoryPool.getName()))     ymp=memoryPool;
 else     if ("PS Survivor Space".equals(memoryPool.getName()) || "Par Survivor Space".equals(memoryPool.getName()) || "G1 Survivor".equals(memoryPool.getName()))     smp=memoryPool;
 else     if ("PS Old Gen".equals(memoryPool.getName()) || "CMS Old Gen".equals(memoryPool.getName()) || "G1 Old Gen".equals(memoryPool.getName()))     omp=memoryPool;
  }
  youngMemoryPool=ymp;
  survivorMemoryPool=smp;
  oldMemoryPool=omp;
  hasMemoryPools=youngMemoryPool != null && survivorMemoryPool != null && oldMemoryPool != null;
  List<GarbageCollectorMXBean> garbageCollectors=ManagementFactory.getGarbageCollectorMXBeans();
  GarbageCollectorMXBean yc=null;
  GarbageCollectorMXBean oc=null;
  for (  GarbageCollectorMXBean garbageCollector : garbageCollectors) {
    if ("PS Scavenge".equals(garbageCollector.getName()) || "ParNew".equals(garbageCollector.getName()) || "G1 Young Generation".equals(garbageCollector.getName()))     yc=garbageCollector;
 else     if ("PS MarkSweep".equals(garbageCollector.getName()) || "ConcurrentMarkSweep".equals(garbageCollector.getName()) || "G1 Old Generation".equals(garbageCollector.getName()))     oc=garbageCollector;
  }
  youngCollector=yc;
  oldCollector=oc;
  hasCollectors=youngCollector != null && oldCollector != null;
}
