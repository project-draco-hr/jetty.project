{
  if (!hasMemoryPools)   return;
  long young=youngMemoryPool.getUsage().getUsed();
  long survivor=survivorMemoryPool.getUsage().getUsed();
  long old=oldMemoryPool.getUsage().getUsed();
  if (!polling) {
    polling=true;
  }
 else {
    if (lastYoungUsed <= young) {
      totalYoungUsed+=young - lastYoungUsed;
    }
    if (lastSurvivorUsed <= survivor) {
      totalSurvivorUsed+=survivor - lastSurvivorUsed;
    }
    if (lastOldUsed <= old) {
      totalOldUsed+=old - lastOldUsed;
    }
 else {
    }
  }
  lastYoungUsed=young;
  lastSurvivorUsed=survivor;
  lastOldUsed=old;
}
