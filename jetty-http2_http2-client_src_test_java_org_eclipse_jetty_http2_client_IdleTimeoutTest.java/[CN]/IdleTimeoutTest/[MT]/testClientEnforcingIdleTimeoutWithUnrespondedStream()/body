{
  final CountDownLatch closeLatch=new CountDownLatch(1);
  start(new ServerSessionListener.Adapter(){
    @Override public Stream.Listener onNewStream(    Stream stream,    HeadersFrame frame){
      stream.setIdleTimeout(10 * idleTimeout);
      return null;
    }
    @Override public void onClose(    Session session,    GoAwayFrame frame){
      if (session.isClosed() && ((HTTP2Session)session).isDisconnected())       closeLatch.countDown();
    }
  }
);
  client.setIdleTimeout(idleTimeout);
  Session session=newClient(new Session.Listener.Adapter());
  MetaData.Request metaData=newRequest("GET",new HttpFields());
  HeadersFrame requestFrame=new HeadersFrame(0,metaData,null,true);
  session.newStream(requestFrame,new Promise.Adapter<Stream>(){
    @Override public void succeeded(    Stream stream){
      stream.setIdleTimeout(10 * idleTimeout);
    }
  }
,new Stream.Listener.Adapter());
  Assert.assertTrue(closeLatch.await(2 * idleTimeout,TimeUnit.MILLISECONDS));
}
