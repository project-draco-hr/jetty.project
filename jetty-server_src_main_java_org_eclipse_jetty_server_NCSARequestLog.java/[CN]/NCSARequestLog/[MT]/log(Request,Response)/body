{
  try {
    if (_ignorePathMap != null && _ignorePathMap.getMatch(request.getRequestURI()) != null)     return;
    if (_fileOut == null)     return;
    StringBuilder buf=new StringBuilder(256);
    if (_logServer) {
      buf.append(request.getServerName());
      buf.append(' ');
    }
    String addr=null;
    if (_preferProxiedForAddress) {
      addr=request.getHeader(HttpHeaders.X_FORWARDED_FOR);
    }
    if (addr == null)     addr=request.getRemoteAddr();
    buf.append(addr);
    buf.append(" - ");
    Authentication authentication=request.getAuthentication();
    if (authentication instanceof Authentication.User)     buf.append(((Authentication.User)authentication).getUserIdentity().getUserPrincipal().getName());
 else     buf.append(" - ");
    buf.append(" [");
    if (_logDateCache != null)     buf.append(_logDateCache.format(request.getTimeStamp()));
 else     buf.append(request.getTimeStampBuffer().toString());
    buf.append("] \"");
    buf.append(request.getMethod());
    buf.append(' ');
    buf.append(request.getUri().toString());
    buf.append(' ');
    buf.append(request.getProtocol());
    buf.append("\" ");
    if (request.getAsyncContinuation().isInitial()) {
      int status=response.getStatus();
      if (status <= 0)       status=404;
      buf.append((char)('0' + ((status / 100) % 10)));
      buf.append((char)('0' + ((status / 10) % 10)));
      buf.append((char)('0' + (status % 10)));
    }
 else     buf.append("Async");
    long responseLength=response.getContentCount();
    if (responseLength >= 0) {
      buf.append(' ');
      if (responseLength > 99999)       buf.append(responseLength);
 else {
        if (responseLength > 9999)         buf.append((char)('0' + ((responseLength / 10000) % 10)));
        if (responseLength > 999)         buf.append((char)('0' + ((responseLength / 1000) % 10)));
        if (responseLength > 99)         buf.append((char)('0' + ((responseLength / 100) % 10)));
        if (responseLength > 9)         buf.append((char)('0' + ((responseLength / 10) % 10)));
        buf.append((char)('0' + (responseLength) % 10));
      }
      buf.append(' ');
    }
 else     buf.append(" - ");
    if (_extended)     logExtended(request,response,buf);
    if (_logCookies) {
      Cookie[] cookies=request.getCookies();
      if (cookies == null || cookies.length == 0)       buf.append(" -");
 else {
        buf.append(" \"");
        for (int i=0; i < cookies.length; i++) {
          if (i != 0)           buf.append(';');
          buf.append(cookies[i].getName());
          buf.append('=');
          buf.append(cookies[i].getValue());
        }
        buf.append('\"');
      }
    }
    if (_logDispatch || _logLatency) {
      long now=System.currentTimeMillis();
      if (_logDispatch) {
        long d=request.getDispatchTime();
        buf.append(' ');
        buf.append(now - (d == 0 ? request.getTimeStamp() : d));
      }
      if (_logLatency) {
        buf.append(' ');
        buf.append(now - request.getTimeStamp());
      }
    }
    buf.append(StringUtil.__LINE_SEPARATOR);
    String log=buf.toString();
synchronized (this) {
      if (_writer == null)       return;
      _writer.write(log);
      _writer.flush();
    }
  }
 catch (  IOException e) {
    Log.warn(e);
  }
}
