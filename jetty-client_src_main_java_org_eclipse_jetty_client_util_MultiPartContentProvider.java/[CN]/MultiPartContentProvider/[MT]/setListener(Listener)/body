{
  this.listener=listener;
  if (parts.isEmpty()) {
    length=onlyBoundary.remaining();
  }
 else {
    for (int i=0; i < parts.size(); ++i) {
      length+=(i == 0) ? firstBoundary.remaining() : middleBoundary.remaining();
      Part part=parts.get(i);
      long partLength=part.length;
      length+=partLength;
      if (partLength < 0) {
        length=-1;
        break;
      }
    }
    if (length > 0)     length+=lastBoundary.remaining();
  }
}
