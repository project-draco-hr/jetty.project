{
  start(new ServerSessionListener.Adapter(){
    @Override public Stream.Listener onNewStream(    Stream stream,    HeadersFrame frame){
      MetaData.Response metaData=new MetaData.Response(HttpVersion.HTTP_2,HttpStatus.OK_200,new HttpFields());
      HeadersFrame response=new HeadersFrame(stream.getId(),metaData,null,true);
      stream.headers(response,Callback.NOOP);
      stream.getSession().close(ErrorCode.NO_ERROR.code,null,Callback.NOOP);
      return null;
    }
  }
);
  CountDownLatch closeLatch=new CountDownLatch(1);
  CountDownLatch failureLatch=new CountDownLatch(1);
  Session session=newClient(new Session.Listener.Adapter(){
    @Override public void onClose(    Session session,    GoAwayFrame frame){
      closeLatch.countDown();
    }
    @Override public void onFailure(    Session session,    Throwable failure){
      failureLatch.countDown();
    }
  }
);
  MetaData.Request metaData=newRequest("GET",new HttpFields());
  HeadersFrame request=new HeadersFrame(metaData,null,true);
  session.newStream(request,new Promise.Adapter<>(),new Stream.Listener.Adapter());
  Assert.assertTrue(closeLatch.await(5,TimeUnit.SECONDS));
  Assert.assertFalse(failureLatch.await(1,TimeUnit.SECONDS));
}
